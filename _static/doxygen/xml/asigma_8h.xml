<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="asigma_8h" kind="file" language="C++">
    <compoundname>asigma.h</compoundname>
    <includes refid="ascot5_8h" local="yes">ascot5.h</includes>
    <includes refid="error_8h" local="yes">error.h</includes>
    <includes refid="asigma__loc_8h" local="yes">asigma/asigma_loc.h</includes>
    <includedby refid="asigma__loc_8c" local="yes">asigma/asigma_loc.c</includedby>
    <includedby refid="asigma_8c" local="yes">asigma.c</includedby>
    <includedby refid="hdf5__asigma_8c" local="yes">hdf5io/hdf5_asigma.c</includedby>
    <includedby refid="hdf5__asigma_8h" local="yes">hdf5io/hdf5_asigma.h</includedby>
    <includedby refid="libascot_8c" local="yes">libascot.c</includedby>
    <includedby refid="atomic_8c" local="yes">simulate/atomic.c</includedby>
    <includedby refid="atomic_8h" local="yes">simulate/atomic.h</includedby>
    <includedby refid="simulate_8h" local="yes">simulate.h</includedby>
    <incdepgraph>
      <node id="9">
        <label>../spline/interp.h</label>
        <link refid="interp_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>asigma.h</label>
        <link refid="asigma_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>asigma/asigma_loc.h</label>
        <link refid="asigma__loc_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>omp.h</label>
      </node>
      <node id="5">
        <label>error.h</label>
        <link refid="error_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>time.h</label>
      </node>
      <node id="6">
        <label>math.h</label>
        <link refid="math_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>stdio.h</label>
      </node>
      <node id="2">
        <label>ascot5.h</label>
        <link refid="ascot5_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="25">
        <label>simulate/simulate_ml_adaptive.c</label>
        <link refid="simulate__ml__adaptive_8c"/>
      </node>
      <node id="35">
        <label>simulate/simulate_ml_adaptive.h</label>
        <link refid="simulate__ml__adaptive_8h"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>diag.c</label>
        <link refid="diag_8c"/>
      </node>
      <node id="26">
        <label>simulate.c</label>
        <link refid="simulate_8c"/>
      </node>
      <node id="11">
        <label>simulate.h</label>
        <link refid="simulate_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>simulate/simulate_fo_fixed.c</label>
        <link refid="simulate__fo__fixed_8c"/>
      </node>
      <node id="32">
        <label>simulate/simulate_fo_fixed.h</label>
        <link refid="simulate__fo__fixed_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>simulate/simulate_gc_fixed.c</label>
        <link refid="simulate__gc__fixed_8c"/>
      </node>
      <node id="14">
        <label>ascot5_main.c</label>
        <link refid="ascot5__main_8c"/>
      </node>
      <node id="34">
        <label>simulate/simulate_gc_fixed.h</label>
        <link refid="simulate__gc__fixed_8h"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>ascot5_main.h</label>
        <link refid="ascot5__main_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>asigma.c</label>
        <link refid="asigma_8c"/>
      </node>
      <node id="1">
        <label>asigma.h</label>
        <link refid="asigma_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>endcond.c</label>
        <link refid="endcond_8c"/>
      </node>
      <node id="21">
        <label>endcond.h</label>
        <link refid="endcond_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>simulate/atomic.c</label>
        <link refid="atomic_8c"/>
      </node>
      <node id="2">
        <label>asigma/asigma_loc.c</label>
        <link refid="asigma__loc_8c"/>
      </node>
      <node id="9">
        <label>simulate/atomic.h</label>
        <link refid="atomic_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>afsi.c</label>
        <link refid="afsi_8c"/>
      </node>
      <node id="13">
        <label>afsi.h</label>
        <link refid="afsi_8h_source"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>diag/diag_orb.c</label>
        <link refid="diag__orb_8c"/>
      </node>
      <node id="4">
        <label>hdf5io/hdf5_asigma.c</label>
        <link refid="hdf5__asigma_8c"/>
      </node>
      <node id="5">
        <label>hdf5io/hdf5_asigma.h</label>
        <link refid="hdf5__asigma_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>hdf5io/hdf5_options.c</label>
        <link refid="hdf5__options_8c"/>
      </node>
      <node id="28">
        <label>hdf5io/hdf5_options.h</label>
        <link refid="hdf5__options_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>hdf5io/hdf5_orbit.c</label>
        <link refid="hdf5__orbit_8c"/>
      </node>
      <node id="23">
        <label>simulate/simulate_gc_adaptive.c</label>
        <link refid="simulate__gc__adaptive_8c"/>
      </node>
      <node id="33">
        <label>simulate/simulate_gc_adaptive.h</label>
        <link refid="simulate__gc__adaptive_8h"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>mpi_interface.c</label>
        <link refid="mpi__interface_8c"/>
      </node>
      <node id="31">
        <label>mpi_interface.h</label>
        <link refid="mpi__interface_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>libascot.c</label>
        <link refid="libascot_8c"/>
      </node>
      <node id="6">
        <label>hdf5_interface.c</label>
        <link refid="hdf5__interface_8c"/>
      </node>
      <node id="27">
        <label>hdf5_interface.h</label>
        <link refid="hdf5__interface_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>diag/diag_transcoef.c</label>
        <link refid="diag__transcoef_8c"/>
      </node>
      <node id="16">
        <label>bbnbi5.c</label>
        <link refid="bbnbi5_8c"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structasigma__offload__data" prot="public">asigma_offload_data</innerclass>
    <innerclass refid="structasigma__data" prot="public">asigma_data</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="asigma_8h_1ae46aca98722780bc5950aa6c1636282c" prot="public" static="no" strong="no">
        <type></type>
        <name>asigma_type</name>
        <enumvalue id="asigma_8h_1ae46aca98722780bc5950aa6c1636282caaa16955b272b342595baa6c3a04221f6" prot="public">
          <name>asigma_type_loc</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Atomic reaction data from local files </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Atomic reaction data types. </para>
        </briefdescription>
        <detaileddescription>
<para>Atomic reaction data types are used in the atomic reaction data interface (<ref refid="asigma_8c" kindref="compound">asigma.c</ref>) to direct function calls to correct atomic reaction data instances. Each atomic reaction data instance must have a corresponding type. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="asigma.h" line="23" column="1" bodyfile="asigma.h" bodystart="23" bodyend="25"/>
      </memberdef>
      <memberdef kind="enum" id="asigma_8h_1acf637532056d35e72efd501b50abf912" prot="public" static="no" strong="no">
        <type></type>
        <name>asigma_reac_type</name>
        <enumvalue id="asigma_8h_1acf637532056d35e72efd501b50abf912ac86f402a53d88a6fae3021f0a0e5f13c" prot="public">
          <name>reac_type_sigma_ion</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="asigma_8h_1acf637532056d35e72efd501b50abf912a14971e01cd05f58406f74bfc56a48bda" prot="public">
          <name>reac_type_sigma_rec</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="asigma_8h_1acf637532056d35e72efd501b50abf912a9093c04b8b77b27faea9f70a82fada40" prot="public">
          <name>reac_type_sigma_CX</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="asigma_8h_1acf637532056d35e72efd501b50abf912ad383b78081923f8f84e3ac1ca10c6459" prot="public">
          <name>reac_type_sigmav_ion</name>
          <initializer>= 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="asigma_8h_1acf637532056d35e72efd501b50abf912a38b9b58dfebc731ffe60dc22b9a6fd0e" prot="public">
          <name>reac_type_sigmav_rec</name>
          <initializer>= 5</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="asigma_8h_1acf637532056d35e72efd501b50abf912a6fb150a75060ef5d30f5da7c81762541" prot="public">
          <name>reac_type_sigmav_CX</name>
          <initializer>= 6</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="asigma_8h_1acf637532056d35e72efd501b50abf912a65d3de78e816ba0c1774314894c42d62" prot="public">
          <name>reac_type_BMS_sigmav</name>
          <initializer>= 7</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="asigma_8h_1acf637532056d35e72efd501b50abf912a0e65493e7b95781359bca0d894985367" prot="public">
          <name>reac_type_eff_sigmav_ion</name>
          <initializer>= 8</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="asigma_8h_1acf637532056d35e72efd501b50abf912aa710556662aa895521a7e21e6c07ec69" prot="public">
          <name>reac_type_eff_sigmav_rec</name>
          <initializer>= 9</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="asigma_8h_1acf637532056d35e72efd501b50abf912a93f1ce19d6a2cfa3f4b23708aec337df" prot="public">
          <name>reac_type_eff_sigmav_CX</name>
          <initializer>= 10</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Reaction types for atomic reaction data. </para>
        </briefdescription>
        <detaileddescription>
<para>The reaction type of atomic reactions is one of the reaction indentifier parameters. It specifies the nature of the reaction and the form of the reaction probability data. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="asigma.h" line="34" column="1" bodyfile="asigma.h" bodystart="34" bodyend="45"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="asigma_8h_1afc601b805821970d8dee6d05d80d312e" prot="public" static="no">
        <type>enum <ref refid="asigma_8h_1ae46aca98722780bc5950aa6c1636282c" kindref="member">asigma_type</ref></type>
        <definition>typedef enum asigma_type asigma_type</definition>
        <argsstring></argsstring>
        <name>asigma_type</name>
        <briefdescription>
<para>Atomic reaction data types. </para>
        </briefdescription>
        <detaileddescription>
<para>Atomic reaction data types are used in the atomic reaction data interface (<ref refid="asigma_8c" kindref="compound">asigma.c</ref>) to direct function calls to correct atomic reaction data instances. Each atomic reaction data instance must have a corresponding type. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="asigma.h" line="25" column="13"/>
      </memberdef>
      <memberdef kind="typedef" id="asigma_8h_1aa664dc4654b1e893cdd129ba43fe5928" prot="public" static="no">
        <type>enum <ref refid="asigma_8h_1acf637532056d35e72efd501b50abf912" kindref="member">asigma_reac_type</ref></type>
        <definition>typedef enum asigma_reac_type asigma_reac_type</definition>
        <argsstring></argsstring>
        <name>asigma_reac_type</name>
        <briefdescription>
<para>Reaction types for atomic reaction data. </para>
        </briefdescription>
        <detaileddescription>
<para>The reaction type of atomic reactions is one of the reaction indentifier parameters. It specifies the nature of the reaction and the form of the reaction probability data. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="asigma.h" line="45" column="18"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="asigma_8h_1aea2ea2d3f324bbebabcc9fca5571a125" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int asigma_init_offload</definition>
        <argsstring>(asigma_offload_data *offload_data, real **offload_array)</argsstring>
        <name>asigma_init_offload</name>
        <param>
          <type><ref refid="structasigma__offload__data" kindref="compound">asigma_offload_data</ref> *</type>
          <declname>offload_data</declname>
        </param>
        <param>
          <type><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref> **</type>
          <declname>offload_array</declname>
        </param>
        <briefdescription>
<para>Load atomic reaction data and prepare parameters. </para>
        </briefdescription>
        <detaileddescription>
<para>This function fills the relevant atomic sigma offload struct with parameters and allocates and fills the offload array. Sets offload array length in the offload struct.</para>
<para>The offload data has to have a type when this function is called as it should be set when the offload data is constructed from inputs.</para>
<para>This function is host only.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>offload_data</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to offload data struct </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>offload_array</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to pointer to offload array</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>zero if initialization succeeded </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="asigma.h" line="71" column="5" bodyfile="asigma.c" bodystart="49" bodyend="75" declfile="asigma.h" declline="71" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="asigma_8h_1a721a595985f53e0168f79335ec52e8b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void asigma_free_offload</definition>
        <argsstring>(asigma_offload_data *offload_data, real **offload_array)</argsstring>
        <name>asigma_free_offload</name>
        <param>
          <type><ref refid="structasigma__offload__data" kindref="compound">asigma_offload_data</ref> *</type>
          <declname>offload_data</declname>
        </param>
        <param>
          <type><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref> **</type>
          <declname>offload_array</declname>
        </param>
        <briefdescription>
<para>Free offload array and reset parameters. </para>
        </briefdescription>
        <detaileddescription>
<para>This function deallocates the offload_array.</para>
<para>This function is host only.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>offload_data</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to offload data struct </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>offload_array</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to pointer to offload array </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="asigma.h" line="73" column="6" bodyfile="asigma.c" bodystart="87" bodyend="94" declfile="asigma.h" declline="73" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="asigma_8h_1a79743b97f94488fe3e6803d66d87e4e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int asigma_init</definition>
        <argsstring>(asigma_data *asigma_data, asigma_offload_data *offload_data, real *offload_array)</argsstring>
        <name>asigma_init</name>
        <param>
          <type><ref refid="structasigma__data" kindref="compound">asigma_data</ref> *</type>
          <declname>asigma_data</declname>
          <defname>asgm_data</defname>
        </param>
        <param>
          <type><ref refid="structasigma__offload__data" kindref="compound">asigma_offload_data</ref> *</type>
          <declname>offload_data</declname>
        </param>
        <param>
          <type><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref> *</type>
          <declname>offload_array</declname>
        </param>
        <briefdescription>
<para>Initializes atomic reaction data struct on target. </para>
        </briefdescription>
        <detaileddescription>
<para>This function copies some atomic reaction parameters from the offload struct to the struct on target and sets the atomic reaction data pointers to correct offsets in the offload array.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>asgm_data</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to data struct on target </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>offload_data</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to offload data struct </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>offload_array</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to offload array</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>zero if initialization succeeded </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="asigma.h" line="77" column="5" bodyfile="asigma.c" bodystart="109" bodyend="128" declfile="asigma.h" declline="77" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="asigma_8h_1abd7e794bf4b947d1be438c2ba9d2880d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="error_8h_1a3bca029fa2975420f00b89f3cb38872e" kindref="member">a5err</ref></type>
        <definition>a5err asigma_eval_sigma</definition>
        <argsstring>(real *sigma, int z_1, int a_1, int z_2, int a_2, int reac_type, asigma_data *asigmadata, real E_coll_per_amu, int *enable_atomic)</argsstring>
        <name>asigma_eval_sigma</name>
        <param>
          <type><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref> *</type>
          <declname>sigma</declname>
        </param>
        <param>
          <type>int</type>
          <declname>z_1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>a_1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>z_2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>a_2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>reac_type</declname>
        </param>
        <param>
          <type><ref refid="structasigma__data" kindref="compound">asigma_data</ref> *</type>
          <declname>asigmadata</declname>
          <defname>asigma_data</defname>
        </param>
        <param>
          <type><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref></type>
          <declname>E_coll_per_amu</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>enable_atomic</declname>
        </param>
        <briefdescription>
<para>Evaluate atomic reaction cross-section. </para>
        </briefdescription>
        <detaileddescription>
<para>This function evaluates the cross-section (sigma) for the atomic reaction corresponding to the reaction identifiers given as parameters at the given mass-normalized collision energy.</para>
<para>This is a SIMD function.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sigma</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to evaluated cross-section </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>z_1</parametername>
</parameternamelist>
<parameterdescription>
<para>atomic number of fast particle </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>a_1</parametername>
</parameternamelist>
<parameterdescription>
<para>atomic mass number of fast particle </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>z_2</parametername>
</parameternamelist>
<parameterdescription>
<para>atomic number of bulk particle </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>a_2</parametername>
</parameternamelist>
<parameterdescription>
<para>atomic mass number of bulk particle </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>reac_type</parametername>
</parameternamelist>
<parameterdescription>
<para>reaction type </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="structasigma__data" kindref="compound">asigma_data</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to atomic data struct </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_coll_per_amu</parametername>
</parameternamelist>
<parameterdescription>
<para>energy per amu corresponding to collision speed </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>enable_atomic</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to atomic enable and functionality flag</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Non-zero a5err value if evaluation failed, zero otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="asigma.h" line="80" column="7" bodyfile="asigma.c" bodystart="151" bodyend="179" declfile="asigma.h" declline="80" declcolumn="7"/>
      </memberdef>
      <memberdef kind="function" id="asigma_8h_1adb19d2a5da7fb031ca0d892f4cb0114f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="error_8h_1a3bca029fa2975420f00b89f3cb38872e" kindref="member">a5err</ref></type>
        <definition>a5err asigma_eval_sigmav</definition>
        <argsstring>(real *sigmav, int z_1, int a_1, real m_1, int z_2, int a_2, int reac_type, asigma_data *asigmadata, real E, real T_e, real T_0, real n_i, int *enable_atomic)</argsstring>
        <name>asigma_eval_sigmav</name>
        <param>
          <type><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref> *</type>
          <declname>sigmav</declname>
        </param>
        <param>
          <type>int</type>
          <declname>z_1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>a_1</declname>
        </param>
        <param>
          <type><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref></type>
          <declname>m_1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>z_2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>a_2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>reac_type</declname>
        </param>
        <param>
          <type><ref refid="structasigma__data" kindref="compound">asigma_data</ref> *</type>
          <declname>asigmadata</declname>
          <defname>asigma_data</defname>
        </param>
        <param>
          <type><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref></type>
          <declname>E</declname>
        </param>
        <param>
          <type><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref></type>
          <declname>T_e</declname>
        </param>
        <param>
          <type><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref></type>
          <declname>T_0</declname>
        </param>
        <param>
          <type><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref></type>
          <declname>n_i</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>enable_atomic</declname>
        </param>
        <briefdescription>
<para>Evaluate atomic reaction rate coefficient. </para>
        </briefdescription>
        <detaileddescription>
<para>This function evaluates the rate coefficient (&lt;sigma*v&gt;) for the atomic reaction corresponding to the reaction identifiers given as parameters at the given fast particle energy and bulk plasma conditions.</para>
<para>This is a SIMD function.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sigmav</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to evaluated rate coefficient </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>z_1</parametername>
</parameternamelist>
<parameterdescription>
<para>atomic number of fast particle </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>a_1</parametername>
</parameternamelist>
<parameterdescription>
<para>atomic mass number of fast particle </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>m_1</parametername>
</parameternamelist>
<parameterdescription>
<para>mass of fast particle </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>z_2</parametername>
</parameternamelist>
<parameterdescription>
<para>atomic number of bulk particle </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>a_2</parametername>
</parameternamelist>
<parameterdescription>
<para>atomic mass number of bulk particle </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>reac_type</parametername>
</parameternamelist>
<parameterdescription>
<para>reaction type </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="structasigma__data" kindref="compound">asigma_data</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to atomic data struct </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E</parametername>
</parameternamelist>
<parameterdescription>
<para>energy of fast particle </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>T_e</parametername>
</parameternamelist>
<parameterdescription>
<para>electron temperature of bulk plasma </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>T_0</parametername>
</parameternamelist>
<parameterdescription>
<para>temperature of bulk neutrals </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>n_i</parametername>
</parameternamelist>
<parameterdescription>
<para>ion density of bulk plasma </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>enable_atomic</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to atomic enable and functionality flag</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Non-zero a5err value if evaluation failed, zero otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="asigma.h" line="84" column="7" bodyfile="asigma.c" bodystart="206" bodyend="232" declfile="asigma.h" declline="84" declcolumn="7"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Header file for <ref refid="asigma_8c" kindref="compound">asigma.c</ref>. </para>
    </briefdescription>
    <detaileddescription>
<para>Contains a list declaring all atomic reaction data types, and declaration of <ref refid="structasigma__offload__data" kindref="compound">asigma_offload_data</ref> and <ref refid="structasigma__data" kindref="compound">asigma_data</ref> structs. </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ASIGMA_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASIGMA_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ascot5_8h" kindref="compound">ascot5.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="error_8h" kindref="compound">error.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="asigma__loc_8h" kindref="compound">asigma/asigma_loc.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="asigma_8h_1ae46aca98722780bc5950aa6c1636282c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="asigma_8h_1ae46aca98722780bc5950aa6c1636282c" kindref="member">asigma_type</ref><sp/>{</highlight></codeline>
<codeline lineno="24" refid="asigma_8h_1ae46aca98722780bc5950aa6c1636282caaa16955b272b342595baa6c3a04221f6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="asigma_8h_1ae46aca98722780bc5950aa6c1636282caaa16955b272b342595baa6c3a04221f6" kindref="member">asigma_type_loc</ref>,<sp/></highlight></codeline>
<codeline lineno="25" refid="asigma_8h_1afc601b805821970d8dee6d05d80d312e" refkind="member"><highlight class="normal">}<sp/><ref refid="asigma_8h_1ae46aca98722780bc5950aa6c1636282c" kindref="member">asigma_type</ref>;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="asigma_8h_1acf637532056d35e72efd501b50abf912" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="asigma_8h_1acf637532056d35e72efd501b50abf912" kindref="member">asigma_reac_type</ref><sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>reac_type_sigma_ion<sp/><sp/>=<sp/>1,<sp/></highlight><highlight class="comment">/*<sp/>sigma(E),<sp/>ionization<sp/>(charge-increasing)<sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>reac_type_sigma_rec<sp/><sp/>=<sp/>2,<sp/></highlight><highlight class="comment">/*<sp/>sigma(E),<sp/>recombination<sp/>(charge-decreasing)<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>reac_type_sigma_CX<sp/><sp/><sp/>=<sp/>3,<sp/></highlight><highlight class="comment">/*<sp/>sigma(E),<sp/>charge<sp/>exchange<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>reac_type_sigmav_ion<sp/>=<sp/>4,<sp/></highlight><highlight class="comment">/*<sp/>sigmav(E,T),<sp/>ionization<sp/>(charge-increasing)<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>reac_type_sigmav_rec<sp/>=<sp/>5,<sp/></highlight><highlight class="comment">/*<sp/>sigmav(E,T),<sp/>recombination<sp/>(charge-decr.)<sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>reac_type_sigmav_CX<sp/><sp/>=<sp/>6,<sp/></highlight><highlight class="comment">/*<sp/>sigmav(E,T),<sp/>charge<sp/>exchange<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>reac_type_BMS_sigmav<sp/>=<sp/>7,<sp/></highlight><highlight class="comment">/*<sp/>sigmav(E,Te,ne),<sp/>beam-stopping<sp/>coefficient<sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>reac_type_eff_sigmav_ion<sp/>=<sp/>8,<sp/></highlight><highlight class="comment">/*<sp/>sigmav(n,T),<sp/>eff.<sp/>ioniz.<sp/>(charge-incr.)<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>reac_type_eff_sigmav_rec<sp/>=<sp/>9,<sp/></highlight><highlight class="comment">/*<sp/>sigmav(n,T),<sp/>eff.<sp/>recomb.<sp/>(charge-decr.)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>reac_type_eff_sigmav_CX<sp/>=<sp/>10<sp/><sp/></highlight><highlight class="comment">/*<sp/>sigmav(n,T),<sp/>effective<sp/>charge<sp/>exchange<sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="asigma_8h_1aa664dc4654b1e893cdd129ba43fe5928" refkind="member"><highlight class="normal">}<sp/><ref refid="asigma_8h_1acf637532056d35e72efd501b50abf912" kindref="member">asigma_reac_type</ref>;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="structasigma__offload__data" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="54" refid="structasigma__offload__data_1a22649daa5f9a9ea3ba4caac5991821cb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="asigma_8h_1ae46aca98722780bc5950aa6c1636282c" kindref="member">asigma_type</ref><sp/><ref refid="structasigma__offload__data_1a22649daa5f9a9ea3ba4caac5991821cb" kindref="member">type</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="55" refid="structasigma__offload__data_1a8c0884325fa9038f44451dc3654bb306" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structasigma__loc__offload__data" kindref="compound">asigma_loc_offload_data</ref><sp/><ref refid="structasigma__offload__data_1a8c0884325fa9038f44451dc3654bb306" kindref="member">asigma_loc</ref>;<sp/></highlight></codeline>
<codeline lineno="57" refid="structasigma__offload__data_1a91bd61350679824f725402d02e4012a5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structasigma__offload__data_1a91bd61350679824f725402d02e4012a5" kindref="member">offload_array_length</ref>;<sp/></highlight></codeline>
<codeline lineno="58"><highlight class="normal">}<sp/><ref refid="structasigma__offload__data" kindref="compound">asigma_offload_data</ref>;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="structasigma__data" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="67" refid="structasigma__data_1a75426d22a3a03f3c627dc0612d68faea" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="asigma_8h_1ae46aca98722780bc5950aa6c1636282c" kindref="member">asigma_type</ref><sp/><ref refid="structasigma__data_1a75426d22a3a03f3c627dc0612d68faea" kindref="member">type</ref>;<sp/></highlight></codeline>
<codeline lineno="68" refid="structasigma__data_1a78e6881e1fe3408a81e933eba6a359a3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structasigma__loc__data" kindref="compound">asigma_loc_data</ref><sp/><ref refid="structasigma__data_1a78e6881e1fe3408a81e933eba6a359a3" kindref="member">asigma_loc</ref>;<sp/></highlight></codeline>
<codeline lineno="69"><highlight class="normal">}<sp/><ref refid="structasigma__data" kindref="compound">asigma_data</ref>;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="asigma_8h_1aea2ea2d3f324bbebabcc9fca5571a125" kindref="member">asigma_init_offload</ref>(<ref refid="structasigma__offload__data" kindref="compound">asigma_offload_data</ref>*<sp/>offload_data,</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref>**<sp/>offload_array);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="asigma_8h_1a721a595985f53e0168f79335ec52e8b1" kindref="member">asigma_free_offload</ref>(<ref refid="structasigma__offload__data" kindref="compound">asigma_offload_data</ref>*<sp/>offload_data,</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref>**<sp/>offload_array);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>declare<sp/>target</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="asigma_8h_1a79743b97f94488fe3e6803d66d87e4e0" kindref="member">asigma_init</ref>(<ref refid="structasigma__data" kindref="compound">asigma_data</ref>*<sp/><ref refid="structasigma__data" kindref="compound">asigma_data</ref>,<sp/><ref refid="structasigma__offload__data" kindref="compound">asigma_offload_data</ref>*<sp/>offload_data,</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref>*<sp/>offload_array);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>declare<sp/>simd<sp/>uniform(asigmadata)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><ref refid="error_8h_1a3bca029fa2975420f00b89f3cb38872e" kindref="member">a5err</ref><sp/><ref refid="asigma_8h_1abd7e794bf4b947d1be438c2ba9d2880d" kindref="member">asigma_eval_sigma</ref>(</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref>*<sp/>sigma,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>z_1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a_1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>z_2,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a_2,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>reac_type,</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structasigma__data" kindref="compound">asigma_data</ref>*<sp/>asigmadata,<sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/>E_coll_per_amu,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>enable_atomic);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>declare<sp/>simd<sp/>uniform(asigmadata)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><ref refid="error_8h_1a3bca029fa2975420f00b89f3cb38872e" kindref="member">a5err</ref><sp/><ref refid="asigma_8h_1adb19d2a5da7fb031ca0d892f4cb0114f" kindref="member">asigma_eval_sigmav</ref>(</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref>*<sp/>sigmav,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>z_1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a_1,<sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/>m_1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>z_2,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a_2,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>reac_type,</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structasigma__data" kindref="compound">asigma_data</ref>*<sp/>asigmadata,<sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/>E,<sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/>T_e,<sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/>T_0,<sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/>n_i,</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>enable_atomic);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>end<sp/>declare<sp/>target</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="asigma.h"/>
  </compounddef>
</doxygen>
