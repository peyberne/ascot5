<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="simulate_8c" kind="file" language="C++">
    <compoundname>simulate.c</compoundname>
    <includes local="no">string.h</includes>
    <includes local="no">unistd.h</includes>
    <includes refid="endcond_8h" local="yes">endcond.h</includes>
    <includes refid="offload_8h" local="yes">offload.h</includes>
    <includes refid="particle_8h" local="yes">particle.h</includes>
    <includes refid="plasma_8h" local="yes">plasma.h</includes>
    <includes refid="random_8h" local="yes">random.h</includes>
    <includes refid="simulate_8h" local="yes">simulate.h</includes>
    <includes refid="print_8h" local="yes">print.h</includes>
    <includes refid="simulate__ml__adaptive_8h" local="yes">simulate/simulate_ml_adaptive.h</includes>
    <includes refid="simulate__gc__adaptive_8h" local="yes">simulate/simulate_gc_adaptive.h</includes>
    <includes refid="simulate__gc__fixed_8h" local="yes">simulate/simulate_gc_fixed.h</includes>
    <includes refid="simulate__fo__fixed_8h" local="yes">simulate/simulate_fo_fixed.h</includes>
    <includes refid="mccc_8h" local="yes">simulate/mccc/mccc.h</includes>
    <includes refid="gctransform_8h" local="yes">gctransform.h</includes>
    <incdepgraph>
      <node id="46">
        <label>diag/dist_rho5D.h</label>
        <link refid="dist__rho5D_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="55">
        <label>simulate/simulate_ml_adaptive.h</label>
        <link refid="simulate__ml__adaptive_8h"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>plasma.h</label>
        <link refid="plasma_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>diag/dist_5D.h</label>
        <link refid="dist__5D_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="59">
        <label>gctransform.h</label>
        <link refid="gctransform_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>particle.h</label>
        <link refid="particle_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>diag.h</label>
        <link refid="diag_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>simulate.c</label>
        <link refid="simulate_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>../spline/interp.h</label>
        <link refid="interp_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>simulate.h</label>
        <link refid="simulate_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
      </node>
      <node id="58">
        <label>simulate/simulate_fo_fixed.h</label>
        <link refid="simulate__fo__fixed_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>Bfield/B_GS.h</label>
        <link refid="B__GS_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>wall.h</label>
        <link refid="wall_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="57">
        <label>simulate/simulate_gc_fixed.h</label>
        <link refid="simulate__gc__fixed_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>asigma.h</label>
        <link refid="asigma_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>plasma/plasma_1DS.h</label>
        <link refid="plasma__1DS_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>mhd/mhd_nonstat.h</label>
        <link refid="mhd__nonstat_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>endcond.h</label>
        <link refid="endcond_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>stdlib.h</label>
      </node>
      <node id="52">
        <label>simulate/mccc/mccc.h</label>
        <link refid="mccc_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>asigma/asigma_loc.h</label>
        <link refid="asigma__loc_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>nbi.h</label>
        <link refid="nbi_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>diag/diag_orb.h</label>
        <link refid="diag__orb_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>omp.h</label>
      </node>
      <node id="53">
        <label>mccc_wiener.h</label>
        <link refid="mccc__wiener_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>neutral/N0_3D.h</label>
        <link refid="N0__3D_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>B_field.h</label>
        <link refid="B__field_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>mhd/mhd_stat.h</label>
        <link refid="mhd__stat_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>Efield/E_1DS.h</label>
        <link refid="E__1DS_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>neutral/N0_1D.h</label>
        <link refid="N0__1D_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>plasma/plasma_1Dt.h</label>
        <link refid="plasma__1Dt_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="56">
        <label>simulate/simulate_gc_adaptive.h</label>
        <link refid="simulate__gc__adaptive_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>string.h</label>
      </node>
      <node id="28">
        <label>neutral.h</label>
        <link refid="neutral_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>random.h</label>
        <link refid="random_8h"/>
        <childnode refid="42" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>unistd.h</label>
      </node>
      <node id="10">
        <label>error.h</label>
        <link refid="error_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>diag/dist_com.h</label>
        <link refid="dist__com_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>diag/diag_transcoef.h</label>
        <link refid="diag__transcoef_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>E_field.h</label>
        <link refid="E__field_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>plasma/plasma_1D.h</label>
        <link refid="plasma__1D_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>time.h</label>
      </node>
      <node id="19">
        <label>Bfield/B_TC.h</label>
        <link refid="B__TC_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>../linint/linint.h</label>
        <link refid="linint_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>Bfield/B_2DS.h</label>
        <link refid="B__2DS_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>mhd.h</label>
        <link refid="mhd_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>Efield/E_TC.h</label>
        <link refid="E__TC_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>boozer.h</label>
        <link refid="boozer_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>Bfield/B_3DS.h</label>
        <link refid="B__3DS_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>math.h</label>
        <link refid="math_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>diag/dist_6D.h</label>
        <link refid="dist__6D_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>wall/wall_3d.h</label>
        <link refid="wall__3d_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>offload.h</label>
        <link refid="offload_8h"/>
      </node>
      <node id="12">
        <label>stdio.h</label>
      </node>
      <node id="47">
        <label>diag/dist_rho6D.h</label>
        <link refid="dist__rho6D_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>Bfield/B_STS.h</label>
        <link refid="B__STS_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="54">
        <label>print.h</label>
        <link refid="print_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>wall/wall_2d.h</label>
        <link refid="wall__2d_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>ascot5.h</label>
        <link refid="ascot5_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="simulate_8c_1a78c99ffd76a7bb3c8c74db76207e9ab4" prot="public" static="no">
        <name>_XOPEN_SOURCE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="simulate.c" line="14" column="9" bodyfile="simulate.c" bodystart="14" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="simulate_8c_1ab0007b59f3e882de9bc41ebaad8ad15e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sim_monitor</definition>
        <argsstring>(char *filename, volatile int *n, volatile int *finished)</argsstring>
        <name>sim_monitor</name>
        <param>
          <type>char *</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>volatile int *</type>
          <declname>n</declname>
        </param>
        <param>
          <type>volatile int *</type>
          <declname>finished</declname>
        </param>
        <briefdescription>
<para>Monitor simulation progress. </para>
        </briefdescription>
        <detaileddescription>
<para>This function contains a loop that is repeated until all markers have finished simulation. Loops are executed at interval defined by A5_PRINTPROGRESSINTERVAL in <ref refid="ascot5_8h" kindref="compound">ascot5.h</ref>.</para>
<para>At each loop, number of markers that have finished simulation is written to output file, along with time spent on simulation and estimated time remaining for the simulation to finish.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to file where progress is written. File is opened and closed outside this function </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to number of total markers in simulation queue </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>finished</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to number of finished markers in simulation queue </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="simulate.c" line="399" column="6" bodyfile="simulate.c" bodystart="399" bodyend="438" declfile="simulate.c" declline="32" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="simulate_8c_1a731ec48c95f5641ae30d383ba7d5d387" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void simulate</definition>
        <argsstring>(int id, int n_particles, particle_state *p, sim_offload_data *sim_offload, offload_package *offload_data, real *offload_array, int *int_offload_array, real *diag_offload_array)</argsstring>
        <name>simulate</name>
        <param>
          <type>int</type>
          <declname>id</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n_particles</declname>
        </param>
        <param>
          <type><ref refid="structparticle__state" kindref="compound">particle_state</ref> *</type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="structsim__offload__data" kindref="compound">sim_offload_data</ref> *</type>
          <declname>sim_offload</declname>
        </param>
        <param>
          <type><ref refid="structoffload__package" kindref="compound">offload_package</ref> *</type>
          <declname>offload_data</declname>
        </param>
        <param>
          <type><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref> *</type>
          <declname>offload_array</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>int_offload_array</declname>
        </param>
        <param>
          <type><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref> *</type>
          <declname>diag_offload_array</declname>
        </param>
        <briefdescription>
<para>Execute marker simulation. </para>
        </briefdescription>
        <detaileddescription>
<para>This simulates markers using given inputs and options. All different types of simulations are initialized and run via this function.</para>
<para>This function proceeds as follows:</para>
<para><orderedlist>
<listitem><para>Input offload data is unpacked and initialized by calling respective init functions.</para>
</listitem><listitem><para>Meta data (e.g. random number generator) is initialized.</para>
</listitem><listitem><para>Markers are put into simulation queue.</para>
</listitem><listitem><para>Threads are spawned. One thread is dedicated for monitoring progress, if monitoring is active.</para>
</listitem><listitem><para>Other threads execute marker simulation using the mode the user has chosen.</para>
</listitem></orderedlist>
<itemizedlist>
<listitem><para>Process continues once all markers have been simulated and each thread has finished. Monitoring is also terminated.</para>
</listitem></itemizedlist>
<orderedlist>
<listitem><para>(If hybrid mode is active) Markers with hybrid end condition active are placed on a new queue, and they have their end condition deactivated and they are simulated with <ref refid="simulate__fo__fixed_8c" kindref="compound">simulate_fo_fixed.c</ref> until they have met some other end condition. Threads are spawned and progress is monitored as previously.</para>
</listitem><listitem><para>Simulation data is deallocated except for data that is mapped back to host.</para>
</listitem><listitem><para>Execution returns to host where this function was called.</para>
</listitem></orderedlist>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>target id where this function is executed, zero if on host </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>n_particles</parametername>
</parameternamelist>
<parameterdescription>
<para>total number of markers to be simulated </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to array storing all marker states to be simulated </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sim_offload</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to simulation offload data </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>offload_data</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the rest of the offload data </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>offload_array</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to input data offload array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>int_offload_array</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to input data int offload array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>diag_offload_array</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to diagnostics offload array</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<xrefsect id="todo_1_todo000011"><xreftitle>Todo</xreftitle><xrefdescription><para>Reorganize this function so that it conforms to documentation. </para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="simulate.c" line="81" column="6" bodyfile="simulate.c" bodystart="81" bodyend="316"/>
      </memberdef>
      <memberdef kind="function" id="simulate_8c_1a0eb83ea67e77dffb1614c82865e0ddfa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void simulate_init_offload</definition>
        <argsstring>(sim_offload_data *sim)</argsstring>
        <name>simulate_init_offload</name>
        <param>
          <type><ref refid="structsim__offload__data" kindref="compound">sim_offload_data</ref> *</type>
          <declname>sim</declname>
        </param>
        <briefdescription>
<para>Initializes simulation settings. </para>
        </briefdescription>
        <detaileddescription>
<para>This function adjusts simulation settings, e.g. how physics are included, according to the given simulation data. This function should only be called once right after input data has been read.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sim</parametername>
</parameternamelist>
<parameterdescription>
<para>simulation offload struct which has all fields initialized </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="simulate.c" line="327" column="6" bodyfile="simulate.c" bodystart="327" bodyend="331"/>
      </memberdef>
      <memberdef kind="function" id="simulate_8c_1aa4086d0428068bb421b91534bc834c8d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sim_init</definition>
        <argsstring>(sim_data *sim, sim_offload_data *offload_data)</argsstring>
        <name>sim_init</name>
        <param>
          <type><ref refid="structsim__data" kindref="compound">sim_data</ref> *</type>
          <declname>sim</declname>
        </param>
        <param>
          <type><ref refid="structsim__offload__data" kindref="compound">sim_offload_data</ref> *</type>
          <declname>offload_data</declname>
        </param>
        <briefdescription>
<para>Initialize simulation data struct on target. </para>
        </briefdescription>
        <detaileddescription>
<para>This function copies the simulation parameters from the offload struct to the struct on the target.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sim</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to data struct on target </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>offload_data</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to offload data struct </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="simulate.c" line="342" column="6" bodyfile="simulate.c" bodystart="342" bodyend="381"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Simulation is initialized and run from here. </para>
    </briefdescription>
    <detaileddescription>
<para>This module acts as an interface through which different types of simulations are initialized and run. This module handles no IO operations (with the exception of writing of progress update), no offloading (only unpacking and initialization is done here).</para>
<para>Thread level parallelisation is done here and the threads have shared access on the data once it has been initialized. However, threads should only modify marker and diagnostic data. </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_XOPEN_SOURCE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unistd.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="endcond_8h" kindref="compound">endcond.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="offload_8h" kindref="compound">offload.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="particle_8h" kindref="compound">particle.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="plasma_8h" kindref="compound">plasma.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="random_8h" kindref="compound">random.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="simulate_8h" kindref="compound">simulate.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="print_8h" kindref="compound">print.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="simulate__ml__adaptive_8h" kindref="compound">simulate/simulate_ml_adaptive.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="simulate__gc__adaptive_8h" kindref="compound">simulate/simulate_gc_adaptive.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="simulate__gc__fixed_8h" kindref="compound">simulate/simulate_gc_fixed.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="simulate__fo__fixed_8h" kindref="compound">simulate/simulate_fo_fixed.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="mccc_8h" kindref="compound">simulate/mccc/mccc.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="gctransform_8h" kindref="compound">gctransform.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>declare<sp/>target</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="simulate_8c_1ab0007b59f3e882de9bc41ebaad8ad15e" kindref="member">sim_monitor</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>filename,<sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>n,<sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>finished);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>end<sp/>declare<sp/>target</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="81" refid="simulate_8c_1a731ec48c95f5641ae30d383ba7d5d387" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="simulate_8c_1a731ec48c95f5641ae30d383ba7d5d387" kindref="member">simulate</ref>(</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n_particles,<sp/><ref refid="structparticle__state" kindref="compound">particle_state</ref>*<sp/>p,<sp/><ref refid="structsim__offload__data" kindref="compound">sim_offload_data</ref>*<sp/>sim_offload,</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structoffload__package" kindref="compound">offload_package</ref>*<sp/>offload_data,<sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref>*<sp/>offload_array,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>int_offload_array,</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref>*<sp/>diag_offload_array)<sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>targetname[5];</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(targetname,<sp/></highlight><highlight class="stringliteral">&quot;host&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(targetname,<sp/></highlight><highlight class="stringliteral">&quot;mic%hu&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal">)(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">-1));</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="comment"><sp/><sp/><sp/><sp/>/**************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>1.<sp/>Input<sp/>offload<sp/>data<sp/>is<sp/>unpacked<sp/>and<sp/>initialized<sp/>by<sp/>calling<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>respective<sp/>init<sp/>functions.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="comment"><sp/><sp/><sp/><sp/>/**************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsim__data" kindref="compound">sim_data</ref><sp/>sim;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="simulate_8c_1aa4086d0428068bb421b91534bc834c8d" kindref="member">sim_init</ref>(&amp;sim,<sp/>sim_offload);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref>*<sp/>ptr;<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>ptrint;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="offload_8c_1a898aa698f5064914e42d7cdc897ea3e7" kindref="member">offload_unpack</ref>(offload_data,<sp/>offload_array,</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sim_offload-&gt;<ref refid="structsim__offload__data_1a29e77f5d2dac736ad887275f129c8315" kindref="member">B_offload_data</ref>.<ref refid="structB__field__offload__data_1aa18fb7c0f67ea0f1b8fe6f92952020b0" kindref="member">offload_array_length</ref>,</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL,<sp/>0,<sp/>&amp;ptr,<sp/>&amp;ptrint);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="B__field_8c_1ad85ceaa2570aa7a5395ec20e400f4b9b" kindref="member">B_field_init</ref>(&amp;sim.<ref refid="structsim__data_1ad59e70ae9a6134fffe18d07a74e18574" kindref="member">B_data</ref>,<sp/>&amp;sim_offload-&gt;<ref refid="structsim__offload__data_1a29e77f5d2dac736ad887275f129c8315" kindref="member">B_offload_data</ref>,<sp/>ptr);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="offload_8c_1a898aa698f5064914e42d7cdc897ea3e7" kindref="member">offload_unpack</ref>(offload_data,<sp/>offload_array,</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sim_offload-&gt;<ref refid="structsim__offload__data_1ab45c1976d6cd42f0e43bd94489e612f3" kindref="member">E_offload_data</ref>.<ref refid="structE__field__offload__data_1a9ed2ce68aa2e3a32e33a0050f850253c" kindref="member">offload_array_length</ref>,</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL,<sp/>0,<sp/>&amp;ptr,<sp/>&amp;ptrint);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="E__field_8c_1a4e05d8421c44170d72aa3cc694606c05" kindref="member">E_field_init</ref>(&amp;sim.<ref refid="structsim__data_1a7fea2f2908b23bbdcbc7bb2f4cf552fe" kindref="member">E_data</ref>,<sp/>&amp;sim_offload-&gt;<ref refid="structsim__offload__data_1ab45c1976d6cd42f0e43bd94489e612f3" kindref="member">E_offload_data</ref>,<sp/>ptr);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="offload_8c_1a898aa698f5064914e42d7cdc897ea3e7" kindref="member">offload_unpack</ref>(offload_data,<sp/>offload_array,</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sim_offload-&gt;<ref refid="structsim__offload__data_1a39c08464071ad4b579c0f97bfe29c4f4" kindref="member">plasma_offload_data</ref>.<ref refid="structplasma__offload__data_1a05b3b7ba22ace0f56aa395ff14f4a25e" kindref="member">offload_array_length</ref>,</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL,<sp/>0,<sp/>&amp;ptr,<sp/>&amp;ptrint);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="plasma_8c_1ae1bd9e9f87802b9fca57c8fd31e462e0" kindref="member">plasma_init</ref>(&amp;sim.<ref refid="structsim__data_1a49b02c00f00378f6d8ffb8923108400e" kindref="member">plasma_data</ref>,<sp/>&amp;sim_offload-&gt;<ref refid="structsim__offload__data_1a39c08464071ad4b579c0f97bfe29c4f4" kindref="member">plasma_offload_data</ref>,<sp/>ptr);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="offload_8c_1a898aa698f5064914e42d7cdc897ea3e7" kindref="member">offload_unpack</ref>(offload_data,<sp/>offload_array,</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sim_offload-&gt;<ref refid="structsim__offload__data_1a4ed21bf0af1ecc3fb6ef936597797aa1" kindref="member">neutral_offload_data</ref>.<ref refid="structneutral__offload__data_1a810393cd7efe91e792a4739ec8d5b07e" kindref="member">offload_array_length</ref>,</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL,<sp/>0,<sp/>&amp;ptr,<sp/>&amp;ptrint);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="neutral_8c_1a7c567226853b113c90c7418cc876dfc7" kindref="member">neutral_init</ref>(&amp;sim.<ref refid="structsim__data_1ab1c83fe33821e5f53c31ce677f9cb904" kindref="member">neutral_data</ref>,<sp/>&amp;sim_offload-&gt;<ref refid="structsim__offload__data_1a4ed21bf0af1ecc3fb6ef936597797aa1" kindref="member">neutral_offload_data</ref>,<sp/>ptr);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="offload_8c_1a898aa698f5064914e42d7cdc897ea3e7" kindref="member">offload_unpack</ref>(offload_data,<sp/>offload_array,</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sim_offload-&gt;<ref refid="structsim__offload__data_1a8416582b3980844d6205fdfb3bcc5ba5" kindref="member">wall_offload_data</ref>.<ref refid="structwall__offload__data_1a242a1130a7723b022ca4a69dc98040df" kindref="member">offload_array_length</ref>,</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int_offload_array,</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sim_offload-&gt;<ref refid="structsim__offload__data_1a8416582b3980844d6205fdfb3bcc5ba5" kindref="member">wall_offload_data</ref>.<ref refid="structwall__offload__data_1a36b5f32e1356e5f6ea96255603bdbd12" kindref="member">int_offload_array_length</ref>,</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;ptr,<sp/>&amp;ptrint);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="wall_8c_1a988188cbb3aa23bc2bb5004ebca9b722" kindref="member">wall_init</ref>(&amp;sim.<ref refid="structsim__data_1ae48c67f0a6347215dad669fc7ab1bfac" kindref="member">wall_data</ref>,<sp/>&amp;sim_offload-&gt;<ref refid="structsim__offload__data_1a8416582b3980844d6205fdfb3bcc5ba5" kindref="member">wall_offload_data</ref>,<sp/>ptr,<sp/>ptrint);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="offload_8c_1a898aa698f5064914e42d7cdc897ea3e7" kindref="member">offload_unpack</ref>(offload_data,<sp/>offload_array,</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sim_offload-&gt;<ref refid="structsim__offload__data_1a815775cd25ace27188ffe7203669770a" kindref="member">boozer_offload_data</ref>.<ref refid="structboozer__offload__data_1a4b2476502252a94214cb43142a53686a" kindref="member">offload_array_length</ref>,</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL,<sp/>0,<sp/>&amp;ptr,<sp/>&amp;ptrint);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="boozer_8c_1adcf30937deceaa5313fd9d33c7f2e408" kindref="member">boozer_init</ref>(&amp;sim.<ref refid="structsim__data_1abebb53f7f3034fb95ffd42d184911709" kindref="member">boozer_data</ref>,<sp/>&amp;sim_offload-&gt;<ref refid="structsim__offload__data_1a815775cd25ace27188ffe7203669770a" kindref="member">boozer_offload_data</ref>,<sp/>ptr);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="offload_8c_1a898aa698f5064914e42d7cdc897ea3e7" kindref="member">offload_unpack</ref>(offload_data,<sp/>offload_array,</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sim_offload-&gt;<ref refid="structsim__offload__data_1a5131baa8f00abbb99494f82b3fe9a90c" kindref="member">mhd_offload_data</ref>.<ref refid="structmhd__offload__data_1a6fdcee91b43e43f63c5171d9a0e659f9" kindref="member">offload_array_length</ref>,</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL,<sp/>0,<sp/>&amp;ptr,<sp/>&amp;ptrint);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mhd_8c_1a596d84c7af2ba49c7832c03e2f397c84" kindref="member">mhd_init</ref>(&amp;sim.<ref refid="structsim__data_1a503121f3afc4a5e8cb17a89badf36f3e" kindref="member">mhd_data</ref>,<sp/>&amp;sim_offload-&gt;<ref refid="structsim__offload__data_1a5131baa8f00abbb99494f82b3fe9a90c" kindref="member">mhd_offload_data</ref>,<sp/>ptr);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="offload_8c_1a898aa698f5064914e42d7cdc897ea3e7" kindref="member">offload_unpack</ref>(offload_data,<sp/>offload_array,</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sim_offload-&gt;<ref refid="structsim__offload__data_1a711b5e59d9315621d1b077521d13b7f3" kindref="member">asigma_offload_data</ref>.<ref refid="structasigma__offload__data_1a91bd61350679824f725402d02e4012a5" kindref="member">offload_array_length</ref>,</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL,<sp/>0,<sp/>&amp;ptr,<sp/>&amp;ptrint);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="asigma_8c_1abc316bf66d9864a848f4adeaad8db5b5" kindref="member">asigma_init</ref>(&amp;sim.<ref refid="structsim__data_1af32ee5b223614c4ed225f3bf3b1bae47" kindref="member">asigma_data</ref>,<sp/>&amp;sim_offload-&gt;<ref refid="structsim__offload__data_1a711b5e59d9315621d1b077521d13b7f3" kindref="member">asigma_offload_data</ref>,<sp/>ptr);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Offload<sp/>complete.<sp/>Reset<sp/>struct<sp/>so<sp/>it<sp/>can<sp/>be<sp/>reused.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>offload_data-&gt;<ref refid="structoffload__package_1a6195bbcd9526f1ceec93b22b4a9489f6" kindref="member">unpack_pos</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>offload_data-&gt;<ref refid="structoffload__package_1ae3e6d85fe4c964f51a70354df2360a92" kindref="member">int_unpack_pos</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="diag_8c_1a73089778ca8720e87c651a4dd07c01f0" kindref="member">diag_init</ref>(&amp;sim.<ref refid="structsim__data_1afe5fab24de78050e35db8c64817465e2" kindref="member">diag_data</ref>,<sp/>&amp;sim_offload-&gt;<ref refid="structsim__offload__data_1ae442e5d90fb9269e3e6f9d5d06194385" kindref="member">diag_offload_data</ref>,</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>diag_offload_array);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="comment"><sp/><sp/><sp/><sp/>/**************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>2.<sp/>Meta<sp/>data<sp/>(e.g.<sp/>random<sp/>number<sp/>generator)<sp/>is<sp/>initialized.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="comment"><sp/><sp/><sp/><sp/>/**************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="comment"><sp/><sp/><sp/><sp/>/**************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>3.<sp/>Markers<sp/>are<sp/>put<sp/>into<sp/>simulation<sp/>queue.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="comment"><sp/><sp/><sp/><sp/>/**************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structparticle__queue" kindref="compound">particle_queue</ref><sp/>pq;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>pq.<ref refid="structparticle__queue_1af86da1478db0cc051aaf7d51d3d1a2b8" kindref="member">n</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n_particles;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pq.<ref refid="structparticle__queue_1af86da1478db0cc051aaf7d51d3d1a2b8" kindref="member">n</ref>++;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>pq.<ref refid="structparticle__queue_1a2dd6f6f1de06a359c46b0f6d7545c63a" kindref="member">p</ref><sp/>=<sp/>(<ref refid="structparticle__state" kindref="compound">particle_state</ref>**)<sp/>malloc(pq.<ref refid="structparticle__queue_1af86da1478db0cc051aaf7d51d3d1a2b8" kindref="member">n</ref><sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structparticle__state" kindref="compound">particle_state</ref>*));</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>pq.<ref refid="structparticle__queue_1ad5cc76df822bf1425819520c18f573ff" kindref="member">finished</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>pq.<ref refid="structparticle__queue_1ab46285cd292490bcf7adb93d147df99e" kindref="member">next</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n_particles;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pq.<ref refid="structparticle__queue_1a2dd6f6f1de06a359c46b0f6d7545c63a" kindref="member">p</ref>[pq.<ref refid="structparticle__queue_1ab46285cd292490bcf7adb93d147df99e" kindref="member">next</ref>++]<sp/>=<sp/>&amp;p[i];</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>pq.<ref refid="structparticle__queue_1ab46285cd292490bcf7adb93d147df99e" kindref="member">next</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="random_8h_1ad5718273ea6b5a4756f964aae72da259" kindref="member">random_init</ref>(&amp;sim.<ref refid="structsim__data_1ab0e50d50655c4eaebfa9d931e909c76a" kindref="member">random_data</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="print_8h_1a8520c71eb5db223009e5079e420bc398" kindref="member">print_out</ref>(VERBOSE_NORMAL,</highlight><highlight class="stringliteral">&quot;%s:<sp/>All<sp/>fields<sp/>initialized.<sp/>Simulation<sp/>begins,<sp/>%d<sp/>threads.\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>targetname,<sp/>omp_get_max_threads());</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="comment"><sp/><sp/><sp/><sp/>/**************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>4.<sp/>Threads<sp/>are<sp/>spawned.<sp/>One<sp/>thread<sp/>is<sp/>dedicated<sp/>for<sp/>monitoring<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>progress,<sp/>if<sp/>monitoring<sp/>is<sp/>active.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="comment"><sp/><sp/><sp/><sp/>/**************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#pragma<sp/>omp<sp/>parallel<sp/>sections<sp/>num_threads(2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#pragma<sp/>omp<sp/>section</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/******************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>5.<sp/>Other<sp/>threads<sp/>execute<sp/>marker<sp/>simulation<sp/>using<sp/>the<sp/>mode<sp/>the<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>user<sp/>has<sp/>chosen.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/******************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pq.<ref refid="structparticle__queue_1af86da1478db0cc051aaf7d51d3d1a2b8" kindref="member">n</ref><sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>(sim.<ref refid="structsim__data_1a2e2b06656ae8326ab26e5d1abeb2ef42" kindref="member">sim_mode</ref><sp/>==<sp/><ref refid="simulate_8h_1a61dadd085c1777f559549e05962b2c9eac0a6480e647e3fbeeea8a2bc4127e2a3" kindref="member">simulate_mode_gc</ref></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>sim.<ref refid="structsim__data_1a2e2b06656ae8326ab26e5d1abeb2ef42" kindref="member">sim_mode</ref><sp/>==<sp/><ref refid="simulate_8h_1a61dadd085c1777f559549e05962b2c9eac788923fd31e2e061b73241d459e4590" kindref="member">simulate_mode_hybrid</ref>))<sp/>{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sim.<ref refid="structsim__data_1ad26f3deac6da6da40edf472accf858ea" kindref="member">enable_ada</ref>)<sp/>{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#pragma<sp/>omp<sp/>parallel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="simulate__gc__adaptive_8c_1aaf8803257cb0b8edb677f95e577157c0" kindref="member">simulate_gc_adaptive</ref>(&amp;pq,<sp/>&amp;sim);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#pragma<sp/>omp<sp/>parallel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="simulate__gc__fixed_8c_1a2425350a4fdbf6c54e512836c82d956a" kindref="member">simulate_gc_fixed</ref>(&amp;pq,<sp/>&amp;sim);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pq.<ref refid="structparticle__queue_1af86da1478db0cc051aaf7d51d3d1a2b8" kindref="member">n</ref><sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>sim.<ref refid="structsim__data_1a2e2b06656ae8326ab26e5d1abeb2ef42" kindref="member">sim_mode</ref><sp/>==<sp/><ref refid="simulate_8h_1a61dadd085c1777f559549e05962b2c9ea11f071e38be84de6b29ac4882c2e024f" kindref="member">simulate_mode_fo</ref>)<sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#pragma<sp/>omp<sp/>parallel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="simulate__fo__fixed_8c_1a0bed8ac7cd006e1592bccc23de6195fa" kindref="member">simulate_fo_fixed</ref>(&amp;pq,<sp/>&amp;sim);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pq.<ref refid="structparticle__queue_1af86da1478db0cc051aaf7d51d3d1a2b8" kindref="member">n</ref><sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>sim.<ref refid="structsim__data_1a2e2b06656ae8326ab26e5d1abeb2ef42" kindref="member">sim_mode</ref><sp/>==<sp/><ref refid="simulate_8h_1a61dadd085c1777f559549e05962b2c9ea776d1e6a9397782eec6f44a14dec65c8" kindref="member">simulate_mode_ml</ref>)<sp/>{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#pragma<sp/>omp<sp/>parallel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="simulate__ml__adaptive_8c_1a34e01bdd1c62ba3e6ac3440c412be9fa" kindref="member">simulate_ml_adaptive</ref>(&amp;pq,<sp/>&amp;sim);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#pragma<sp/>omp<sp/>section</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>VERBOSE<sp/>&gt;<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Update<sp/>progress<sp/>until<sp/>simulation<sp/>is<sp/>complete.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Trim<sp/>.h5<sp/>from<sp/>filename<sp/>and<sp/>replace<sp/>it<sp/>with<sp/>_&lt;QID&gt;.stdout<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>filename[519],<sp/>outfn[256];</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(outfn,<sp/>sim_offload-&gt;<ref refid="structsim__offload__data_1ac3cf24680eca066bb68b8129e66e0448" kindref="member">hdf5_out</ref>);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outfn[strlen(outfn)-3]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(filename,<sp/></highlight><highlight class="stringliteral">&quot;%s_%s.stdout&quot;</highlight><highlight class="normal">,<sp/>outfn,<sp/>sim_offload-&gt;<ref refid="structsim__offload__data_1a3a6019d6aa6f6a24ef9cdf053255a6c8" kindref="member">qid</ref>);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="simulate_8c_1ab0007b59f3e882de9bc41ebaad8ad15e" kindref="member">sim_monitor</ref>(filename,<sp/>&amp;pq.<ref refid="structparticle__queue_1af86da1478db0cc051aaf7d51d3d1a2b8" kindref="member">n</ref>,<sp/>&amp;pq.<ref refid="structparticle__queue_1ad5cc76df822bf1425819520c18f573ff" kindref="member">finished</ref>);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="comment"><sp/><sp/><sp/><sp/>/**************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>6.<sp/>(If<sp/>hybrid<sp/>mode<sp/>is<sp/>active)<sp/>Markers<sp/>with<sp/>hybrid<sp/>end<sp/>condition<sp/>active<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>are<sp/>placed<sp/>on<sp/>a<sp/>new<sp/>queue,<sp/>and<sp/>they<sp/>have<sp/>their<sp/>end<sp/>condition<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>deactivated<sp/>and<sp/>they<sp/>are<sp/>simulated<sp/>with<sp/>simulate_fo_fixed.c<sp/>until<sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>they<sp/>have<sp/>met<sp/>some<sp/>other<sp/>end<sp/>condition.<sp/>Threads<sp/>are<sp/>spawned<sp/>and<sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>progress<sp/>is<sp/>monitored<sp/>as<sp/>previously.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight><highlight class="comment"><sp/><sp/><sp/><sp/>/**************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n_new<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sim.<ref refid="structsim__data_1a2e2b06656ae8326ab26e5d1abeb2ef42" kindref="member">sim_mode</ref><sp/>==<sp/><ref refid="simulate_8h_1a61dadd085c1777f559549e05962b2c9eac788923fd31e2e061b73241d459e4590" kindref="member">simulate_mode_hybrid</ref>)<sp/>{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Determine<sp/>the<sp/>number<sp/>markers<sp/>that<sp/>should<sp/>be<sp/>run</highlight></codeline>
<codeline lineno="247"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>in<sp/>fo<sp/>after<sp/>previous<sp/>gc<sp/>simulation<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>pq.<ref refid="structparticle__queue_1af86da1478db0cc051aaf7d51d3d1a2b8" kindref="member">n</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pq.<ref refid="structparticle__queue_1a2dd6f6f1de06a359c46b0f6d7545c63a" kindref="member">p</ref>[i]-&gt;<ref refid="structparticle__state_1afba5ec956f0515668cba944ce1f02daf" kindref="member">endcond</ref><sp/>==<sp/><ref refid="endcond_8h_1a06fc87d81c62e9abb8790b6e5713c55badaef13bc27c51d9dc5c9798c99de056a" kindref="member">endcond_hybrid</ref>)<sp/>{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>that<sp/>there<sp/>was<sp/>no<sp/>wall<sp/>between<sp/>when<sp/>moving<sp/>from</highlight></codeline>
<codeline lineno="251"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gc<sp/>to<sp/>fo<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/>w_coll;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tile<sp/>=<sp/><ref refid="wall_8c_1a66c9e2c7f3db0e3ccbf7507b45e4e5c2" kindref="member">wall_hit_wall</ref>(pq.<ref refid="structparticle__queue_1a2dd6f6f1de06a359c46b0f6d7545c63a" kindref="member">p</ref>[i]-&gt;<ref refid="structparticle__state_1a3f8be755cb8baac1b13a68d90c59c3f5" kindref="member">r</ref>,<sp/>pq.<ref refid="structparticle__queue_1a2dd6f6f1de06a359c46b0f6d7545c63a" kindref="member">p</ref>[i]-&gt;<ref refid="structparticle__state_1aff41ea912d6616b74496ce6acb2e5b7e" kindref="member">phi</ref>,<sp/>pq.<ref refid="structparticle__queue_1a2dd6f6f1de06a359c46b0f6d7545c63a" kindref="member">p</ref>[i]-&gt;<ref refid="structparticle__state_1af550bffa561085f7c0b775bd43ccaed2" kindref="member">z</ref>,</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pq.<ref refid="structparticle__queue_1a2dd6f6f1de06a359c46b0f6d7545c63a" kindref="member">p</ref>[i]-&gt;<ref refid="structparticle__state_1a327fd67d35cc4fb8f83e442109b8c846" kindref="member">rprt</ref>,<sp/>pq.<ref refid="structparticle__queue_1a2dd6f6f1de06a359c46b0f6d7545c63a" kindref="member">p</ref>[i]-&gt;<ref refid="structparticle__state_1a2ffcee71bbfed82201f3e3641756b6cb" kindref="member">phiprt</ref>,<sp/>pq.<ref refid="structparticle__queue_1a2dd6f6f1de06a359c46b0f6d7545c63a" kindref="member">p</ref>[i]-&gt;<ref refid="structparticle__state_1afe6f3b950482634327607b34de5fd70a" kindref="member">zprt</ref>,</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;sim.<ref refid="structsim__data_1ae48c67f0a6347215dad669fc7ab1bfac" kindref="member">wall_data</ref>,<sp/>&amp;w_coll);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tile<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pq.<ref refid="structparticle__queue_1a2dd6f6f1de06a359c46b0f6d7545c63a" kindref="member">p</ref>[i]-&gt;<ref refid="structparticle__state_1a6c005013f55d58c7985d33c2dbfd5ef1" kindref="member">walltile</ref><sp/>=<sp/>tile;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pq.<ref refid="structparticle__queue_1a2dd6f6f1de06a359c46b0f6d7545c63a" kindref="member">p</ref>[i]-&gt;<ref refid="structparticle__state_1afba5ec956f0515668cba944ce1f02daf" kindref="member">endcond</ref><sp/>|=<sp/><ref refid="endcond_8h_1a06fc87d81c62e9abb8790b6e5713c55bac55ce885845756d3e353e73f115d834d" kindref="member">endcond_wall</ref>;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_new++;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(n_new<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reset<sp/>hybrid<sp/>marker<sp/>end<sp/>condition<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>pq.<ref refid="structparticle__queue_1af86da1478db0cc051aaf7d51d3d1a2b8" kindref="member">n</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pq.<ref refid="structparticle__queue_1a2dd6f6f1de06a359c46b0f6d7545c63a" kindref="member">p</ref>[i]-&gt;<ref refid="structparticle__state_1afba5ec956f0515668cba944ce1f02daf" kindref="member">endcond</ref><sp/>&amp;<sp/><ref refid="endcond_8h_1a06fc87d81c62e9abb8790b6e5713c55badaef13bc27c51d9dc5c9798c99de056a" kindref="member">endcond_hybrid</ref>)<sp/>{</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pq.<ref refid="structparticle__queue_1a2dd6f6f1de06a359c46b0f6d7545c63a" kindref="member">p</ref>[i]-&gt;<ref refid="structparticle__state_1afba5ec956f0515668cba944ce1f02daf" kindref="member">endcond</ref><sp/>^=<sp/><ref refid="endcond_8h_1a06fc87d81c62e9abb8790b6e5713c55badaef13bc27c51d9dc5c9798c99de056a" kindref="member">endcond_hybrid</ref>;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pq.<ref refid="structparticle__queue_1ab46285cd292490bcf7adb93d147df99e" kindref="member">next</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pq.<ref refid="structparticle__queue_1ad5cc76df822bf1425819520c18f573ff" kindref="member">finished</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#pragma<sp/>omp<sp/>parallel<sp/>sections<sp/>num_threads(2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#pragma<sp/>omp<sp/>section</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#pragma<sp/>omp<sp/>parallel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="simulate__fo__fixed_8c_1a0bed8ac7cd006e1592bccc23de6195fa" kindref="member">simulate_fo_fixed</ref>(&amp;pq,<sp/>&amp;sim);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#pragma<sp/>omp<sp/>section</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>VERBOSE<sp/>&gt;<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Trim<sp/>.h5<sp/>from<sp/>filename<sp/>and<sp/>replace<sp/>it<sp/>with<sp/>_&lt;qid&gt;.stdout<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>filename[519],<sp/>outfn[256];</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(outfn,<sp/>sim_offload-&gt;<ref refid="structsim__offload__data_1ac3cf24680eca066bb68b8129e66e0448" kindref="member">hdf5_out</ref>);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outfn[strlen(outfn)-3]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(filename,<sp/></highlight><highlight class="stringliteral">&quot;%s_%s.stdout&quot;</highlight><highlight class="normal">,<sp/>outfn,<sp/>sim_offload-&gt;<ref refid="structsim__offload__data_1a3a6019d6aa6f6a24ef9cdf053255a6c8" kindref="member">qid</ref>);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="simulate_8c_1ab0007b59f3e882de9bc41ebaad8ad15e" kindref="member">sim_monitor</ref>(filename,<sp/>&amp;pq.<ref refid="structparticle__queue_1af86da1478db0cc051aaf7d51d3d1a2b8" kindref="member">n</ref>,<sp/>&amp;pq.<ref refid="structparticle__queue_1ad5cc76df822bf1425819520c18f573ff" kindref="member">finished</ref>);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight><highlight class="comment"><sp/><sp/><sp/><sp/>/**************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>7.<sp/>Simulation<sp/>data<sp/>is<sp/>deallocated<sp/>except<sp/>for<sp/>data<sp/>that<sp/>is<sp/>mapped<sp/>back<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>to<sp/>host.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight><highlight class="comment"><sp/><sp/><sp/><sp/>/**************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>free(pq.<ref refid="structparticle__queue_1a2dd6f6f1de06a359c46b0f6d7545c63a" kindref="member">p</ref>);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="diag_8c_1addc5ab98500383d3197d6388ad316fd4" kindref="member">diag_free</ref>(&amp;sim.<ref refid="structsim__data_1afe5fab24de78050e35db8c64817465e2" kindref="member">diag_data</ref>);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight><highlight class="comment"><sp/><sp/><sp/><sp/>/**************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>8.<sp/>Execution<sp/>returns<sp/>to<sp/>host<sp/>where<sp/>this<sp/>function<sp/>was<sp/>called.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight><highlight class="comment"><sp/><sp/><sp/><sp/>/**************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="print_8h_1a8520c71eb5db223009e5079e420bc398" kindref="member">print_out</ref>(VERBOSE_NORMAL,<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>Simulation<sp/>complete.\n&quot;</highlight><highlight class="normal">,<sp/>targetname);</highlight></codeline>
<codeline lineno="316"><highlight class="normal">}</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="327" refid="simulate_8c_1a0eb83ea67e77dffb1614c82865e0ddfa" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="simulate_8c_1a0eb83ea67e77dffb1614c82865e0ddfa" kindref="member">simulate_init_offload</ref>(<ref refid="structsim__offload__data" kindref="compound">sim_offload_data</ref>*<sp/>sim)<sp/>{</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sim-&gt;<ref refid="structsim__offload__data_1a633255067bad35ec7cf613e1ba5f3dc2" kindref="member">disable_gctransform</ref>)<sp/>{</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="gctransform_8c_1ae9622ca441ce99b088d4140aaf1b1abc" kindref="member">gctransform_setorder</ref>(0);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="331"><highlight class="normal">}</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="342" refid="simulate_8c_1aa4086d0428068bb421b91534bc834c8d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="simulate_8c_1aa4086d0428068bb421b91534bc834c8d" kindref="member">sim_init</ref>(<ref refid="structsim__data" kindref="compound">sim_data</ref>*<sp/>sim,<sp/><ref refid="structsim__offload__data" kindref="compound">sim_offload_data</ref>*<sp/>offload_data)<sp/>{</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>sim-&gt;<ref refid="structsim__data_1a2e2b06656ae8326ab26e5d1abeb2ef42" kindref="member">sim_mode</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>offload_data-&gt;<ref refid="structsim__offload__data_1a03d8acc6b66986f065846be123c27138" kindref="member">sim_mode</ref>;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/>sim-&gt;<ref refid="structsim__data_1ad26f3deac6da6da40edf472accf858ea" kindref="member">enable_ada</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>offload_data-&gt;<ref refid="structsim__offload__data_1a115a059f11d6010f2553c9c8a014c409" kindref="member">enable_ada</ref>;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>sim-&gt;<ref refid="structsim__data_1a27309376dd94415443dec8af2b344456" kindref="member">record_mode</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>offload_data-&gt;<ref refid="structsim__offload__data_1a4196dea381c8d280ec45a5b650a352ce" kindref="member">record_mode</ref>;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/>sim-&gt;<ref refid="structsim__data_1a921c237b34337b9dc8d79cda3f81ea80" kindref="member">fix_usrdef_use</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>offload_data-&gt;<ref refid="structsim__offload__data_1a6920c684402ce33c865ed37bc4cc1cf1" kindref="member">fix_usrdef_use</ref>;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>sim-&gt;<ref refid="structsim__data_1a762206ad2960f1191ce359aeb6d3cd9b" kindref="member">fix_usrdef_val</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>offload_data-&gt;<ref refid="structsim__offload__data_1abb17ba68c803b844578283cc21b69c2e" kindref="member">fix_usrdef_val</ref>;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/>sim-&gt;<ref refid="structsim__data_1ab6d802c61cf00ab99b03c9662016ebd6" kindref="member">fix_gyrodef_nstep</ref><sp/><sp/><sp/><sp/>=<sp/>offload_data-&gt;<ref refid="structsim__offload__data_1a178ee4c8ea7d9d4920b1db85580ee1a9" kindref="member">fix_gyrodef_nstep</ref>;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/>sim-&gt;<ref refid="structsim__data_1afddd975cc70f4e8e7a7528ec9034768f" kindref="member">ada_tol_orbfol</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>offload_data-&gt;<ref refid="structsim__offload__data_1aa700d5c6fe2480387723b7b7ee31358c" kindref="member">ada_tol_orbfol</ref>;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/>sim-&gt;<ref refid="structsim__data_1a3c9e11f6d0592c1667061e648443c858" kindref="member">ada_tol_clmbcol</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>offload_data-&gt;<ref refid="structsim__offload__data_1a4957ea65e16eded864bac6583d61f782" kindref="member">ada_tol_clmbcol</ref>;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/>sim-&gt;<ref refid="structsim__data_1a3a2db428880d7095b6388c97750d663f" kindref="member">ada_max_drho</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>offload_data-&gt;<ref refid="structsim__offload__data_1af1a255f56c1148de709f66660e7f71c8" kindref="member">ada_max_drho</ref>;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/>sim-&gt;<ref refid="structsim__data_1aee77bfedd1a81f4a47c3a2077796801d" kindref="member">ada_max_dphi</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>offload_data-&gt;<ref refid="structsim__offload__data_1a26850f0f93ac52a2696598e00bd1eb40" kindref="member">ada_max_dphi</ref>;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>sim-&gt;<ref refid="structsim__data_1a0815418272a044ca73fd4dcd20d12aab" kindref="member">enable_orbfol</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>offload_data-&gt;<ref refid="structsim__offload__data_1ad440402741723c1b648a1795d68fb48f" kindref="member">enable_orbfol</ref>;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/>sim-&gt;<ref refid="structsim__data_1af9edad0b9c7718f52ab7bb7e0b0e55af" kindref="member">enable_clmbcol</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>offload_data-&gt;<ref refid="structsim__offload__data_1a2c398b110401b82cb7d157b4eff7dce2" kindref="member">enable_clmbcol</ref>;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/>sim-&gt;<ref refid="structsim__data_1a85b4ea5c443ec3f475f970293b6fee7c" kindref="member">enable_mhd</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>offload_data-&gt;<ref refid="structsim__offload__data_1a214f86adf0ddbea6864c6b2de90c0b3a" kindref="member">enable_mhd</ref>;</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/>sim-&gt;<ref refid="structsim__data_1a53ec6b3651ec11ac083b25c635b58f1f" kindref="member">enable_atomic</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>offload_data-&gt;<ref refid="structsim__offload__data_1a75460f4053492382fc6f6d8a256b8cfc" kindref="member">enable_atomic</ref>;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/>sim-&gt;<ref refid="structsim__data_1afc8f4e5df7944e00e47a7936587f90ed" kindref="member">disable_gctransform</ref><sp/><sp/>=<sp/>offload_data-&gt;<ref refid="structsim__offload__data_1a633255067bad35ec7cf613e1ba5f3dc2" kindref="member">disable_gctransform</ref>;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/>sim-&gt;<ref refid="structsim__data_1a323929b1f43d1c9242a0aad5e1986e42" kindref="member">disable_energyccoll</ref><sp/><sp/>=<sp/>offload_data-&gt;<ref refid="structsim__offload__data_1ad92ec514b0a1a88b6cc917c5bbbb5b14" kindref="member">disable_energyccoll</ref>;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/>sim-&gt;<ref refid="structsim__data_1a8358f9117e35d1b60866b7256c85cbc0" kindref="member">disable_pitchccoll</ref><sp/><sp/><sp/>=<sp/>offload_data-&gt;<ref refid="structsim__offload__data_1a4709acea10bf61ccab930c45f154bd80" kindref="member">disable_pitchccoll</ref>;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/>sim-&gt;<ref refid="structsim__data_1a6363cbae957cc4a4efee03a013e9915b" kindref="member">disable_gcdiffccoll</ref><sp/><sp/>=<sp/>offload_data-&gt;<ref refid="structsim__offload__data_1a14c6569947ca691c15b0805575149f3e" kindref="member">disable_gcdiffccoll</ref>;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/>sim-&gt;<ref refid="structsim__data_1ae4fee01614e537fc2a2085079a5a56dd" kindref="member">reverse_time</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>offload_data-&gt;<ref refid="structsim__offload__data_1a0e71ad74cb38a47fbd364469bab0110b" kindref="member">reverse_time</ref>;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/>sim-&gt;<ref refid="structsim__data_1a8f315bd49069d01f8d9104fb7f79999b" kindref="member">endcond_active</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>offload_data-&gt;<ref refid="structsim__offload__data_1ad54eeaa2ad63e977a15e20914221716a" kindref="member">endcond_active</ref>;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/>sim-&gt;<ref refid="structsim__data_1acee4cee05723b173ff792cd7ab1621be" kindref="member">endcond_lim_simtime</ref><sp/><sp/>=<sp/>offload_data-&gt;<ref refid="structsim__offload__data_1a93f4a7135a3523d611626014b22ab0f9" kindref="member">endcond_lim_simtime</ref>;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/>sim-&gt;<ref refid="structsim__data_1a7586bc5f63976840373a6c348da68092" kindref="member">endcond_max_mileage</ref><sp/><sp/>=<sp/>offload_data-&gt;<ref refid="structsim__offload__data_1a2c621ca602356c550be51cd7e9752fd2" kindref="member">endcond_max_mileage</ref>;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/>sim-&gt;<ref refid="structsim__data_1ab96e7e35484fefcf04f46dacf4019044" kindref="member">endcond_max_cputime</ref><sp/><sp/>=<sp/>offload_data-&gt;<ref refid="structsim__offload__data_1ad9eb065c8cc569fc50278f9a9e72693d" kindref="member">endcond_max_cputime</ref>;</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/>sim-&gt;<ref refid="structsim__data_1acc4c16b8887426023fcf4bbfe4aba382" kindref="member">endcond_min_rho</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>offload_data-&gt;<ref refid="structsim__offload__data_1affb56d33c1e65349c647c3184e46ee99" kindref="member">endcond_min_rho</ref>;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/>sim-&gt;<ref refid="structsim__data_1a179910ba60d3e1ffe038500d7fe88213" kindref="member">endcond_max_rho</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>offload_data-&gt;<ref refid="structsim__offload__data_1a61000ac07a8e7ae365e763f4ca5b9e13" kindref="member">endcond_max_rho</ref>;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/>sim-&gt;<ref refid="structsim__data_1a15cbc76019c8959e9bb051adc1e5daba" kindref="member">endcond_min_ekin</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>offload_data-&gt;<ref refid="structsim__offload__data_1a29f8a52a10ec30279dc8b30b44d385e1" kindref="member">endcond_min_ekin</ref>;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/>sim-&gt;<ref refid="structsim__data_1a68785668e3e5a7efdc1ee5b952fc7257" kindref="member">endcond_min_thermal</ref><sp/><sp/>=<sp/>offload_data-&gt;<ref refid="structsim__offload__data_1a897d820fbcc7c26fcd0a8a97e07b801b" kindref="member">endcond_min_thermal</ref>;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/>sim-&gt;<ref refid="structsim__data_1a5093881ffcbded4fcda22c1f86f8f3b6" kindref="member">endcond_max_tororb</ref><sp/><sp/><sp/>=<sp/>offload_data-&gt;<ref refid="structsim__offload__data_1a6e1533776d180f49000a9df145c09e39" kindref="member">endcond_max_tororb</ref>;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/>sim-&gt;<ref refid="structsim__data_1aacbfca513534f0925674a734e93eea1b" kindref="member">endcond_max_polorb</ref><sp/><sp/><sp/>=<sp/>offload_data-&gt;<ref refid="structsim__offload__data_1a850b59a3760c768ff9c4c452e313c29f" kindref="member">endcond_max_polorb</ref>;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/>sim-&gt;<ref refid="structsim__data_1a17456119044757d2dd1238d452b1dbe3" kindref="member">endcond_torandpol</ref><sp/><sp/><sp/><sp/>=<sp/>offload_data-&gt;<ref refid="structsim__offload__data_1a6afed4a31017e5b801149d2ee9324c67" kindref="member">endcond_torandpol</ref>;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mccc_8c_1ad455bb3ad490edc38bd5bb5f3b8df67a" kindref="member">mccc_init</ref>(&amp;sim-&gt;<ref refid="structsim__data_1aab9969eeb73ce3c575f4c1b43af9c683" kindref="member">mccc_data</ref>,<sp/>!sim-&gt;<ref refid="structsim__data_1a323929b1f43d1c9242a0aad5e1986e42" kindref="member">disable_energyccoll</ref>,</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!sim-&gt;<ref refid="structsim__data_1a8358f9117e35d1b60866b7256c85cbc0" kindref="member">disable_pitchccoll</ref>,<sp/>!sim-&gt;<ref refid="structsim__data_1a6363cbae957cc4a4efee03a013e9915b" kindref="member">disable_gcdiffccoll</ref>);</highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal">}</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="399" refid="simulate_8c_1ab0007b59f3e882de9bc41ebaad8ad15e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="simulate_8c_1ab0007b59f3e882de9bc41ebaad8ad15e" kindref="member">sim_monitor</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>filename,<sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>n,<sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>finished)<sp/>{</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Open<sp/>a<sp/>file<sp/>for<sp/>writing<sp/>simulation<sp/>progress<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE<sp/>*f<sp/>=<sp/>fopen(filename,<sp/></highlight><highlight class="stringliteral">&quot;w&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(f<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="print_8h_1a8520c71eb5db223009e5079e420bc398" kindref="member">print_out</ref>(VERBOSE_DEBUG,</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Warning.<sp/>%s<sp/>could<sp/>not<sp/>be<sp/>opened<sp/>for<sp/>progress<sp/>updates.\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>filename);</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/>time_sim_started<sp/>=<sp/><ref refid="ascot5_8h_1aefd7cbec63dd718061c2d93c8a834490" kindref="member">A5_WTIME</ref>;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stopflag<sp/>=<sp/>1;<sp/></highlight><highlight class="comment">/*<sp/>Flag<sp/>ensures<sp/>progress<sp/>is<sp/>written<sp/>one<sp/>last<sp/>time<sp/>at<sp/>100%<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n_temp,<sp/>finished_temp;<sp/></highlight><highlight class="comment">/*<sp/>Use<sp/>these<sp/>to<sp/>store<sp/>volatile<sp/>variables<sp/>so<sp/>that</highlight></codeline>
<codeline lineno="412"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>their<sp/>value<sp/>does<sp/>not<sp/>change<sp/>during<sp/>one<sp/>loop<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(stopflag)<sp/>{</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_temp<sp/>=<sp/>*n;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>finished_temp<sp/>=<sp/>*finished;</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/>fracprog<sp/>=<sp/>((<ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref>)<sp/>finished_temp)/n_temp;</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/>timespent<sp/>=<sp/>(<ref refid="ascot5_8h_1aefd7cbec63dd718061c2d93c8a834490" kindref="member">A5_WTIME</ref>)-time_sim_started;</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(n_temp<sp/>==<sp/>finished_temp)<sp/>{</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stopflag<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fracprog<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(f,<sp/></highlight><highlight class="stringliteral">&quot;No<sp/>marker<sp/>has<sp/>finished<sp/>simulation<sp/>yet.<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Time<sp/>spent:<sp/>%.2f<sp/>h\n&quot;</highlight><highlight class="normal">,<sp/>timespent/3600);</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(f,<sp/></highlight><highlight class="stringliteral">&quot;Progress:<sp/>%d/%d,<sp/>%.2f<sp/>%%.<sp/>Time<sp/>spent:<sp/>%.2f<sp/>h,<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;estimated<sp/>time<sp/>to<sp/>finish:<sp/>%.2f<sp/>h\n&quot;</highlight><highlight class="normal">,<sp/>finished_temp,<sp/>n_temp,</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>100*fracprog,<sp/>timespent/3600,<sp/>(1/fracprog-1)*timespent/3600);</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fflush(f);</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sleep(<ref refid="ascot5_8h_1ab1d1d43a47920467ef77f3a59580c214" kindref="member">A5_PRINTPROGRESSINTERVAL</ref>);</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(f,<sp/></highlight><highlight class="stringliteral">&quot;Simulation<sp/>finished.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/>fclose(f);</highlight></codeline>
<codeline lineno="438"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="simulate.c"/>
  </compounddef>
</doxygen>
