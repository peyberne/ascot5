<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="hdf5__wall_8h" kind="file" language="C++">
    <compoundname>hdf5_wall.h</compoundname>
    <includes local="no">hdf5.h</includes>
    <includes refid="ascot5_8h" local="yes">../ascot5.h</includes>
    <includes refid="wall_8h" local="yes">../wall.h</includes>
    <includedby refid="hdf5__interface_8c" local="yes">hdf5_interface.c</includedby>
    <includedby refid="hdf5__wall_8c" local="yes">hdf5io/hdf5_wall.c</includedby>
    <includedby refid="libascot_8c" local="yes">libascot.c</includedby>
    <incdepgraph>
      <node id="6">
        <label>../wall.h</label>
        <link refid="wall_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>hdf5io/hdf5_wall.h</label>
        <link refid="hdf5__wall_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>omp.h</label>
      </node>
      <node id="2">
        <label>hdf5.h</label>
      </node>
      <node id="5">
        <label>time.h</label>
      </node>
      <node id="8">
        <label>wall/wall_3d.h</label>
        <link refid="wall__3d_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>wall/wall_2d.h</label>
        <link refid="wall__2d_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>../ascot5.h</label>
        <link refid="ascot5_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3">
        <label>hdf5io/hdf5_wall.c</label>
        <link refid="hdf5__wall_8c"/>
      </node>
      <node id="1">
        <label>hdf5io/hdf5_wall.h</label>
        <link refid="hdf5__wall_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>libascot.c</label>
        <link refid="libascot_8c"/>
      </node>
      <node id="2">
        <label>hdf5_interface.c</label>
        <link refid="hdf5__interface_8c"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="hdf5__wall_8h_1a15d5fb6be47cf794f581e2b79b90e27e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int hdf5_wall_init_offload</definition>
        <argsstring>(hid_t f, wall_offload_data *offload_data, real **offload_array, int **int_offload_array, char *qid)</argsstring>
        <name>hdf5_wall_init_offload</name>
        <param>
          <type>hid_t</type>
          <declname>f</declname>
        </param>
        <param>
          <type><ref refid="structwall__offload__data" kindref="compound">wall_offload_data</ref> *</type>
          <declname>offload_data</declname>
        </param>
        <param>
          <type><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref> **</type>
          <declname>offload_array</declname>
        </param>
        <param>
          <type>int **</type>
          <declname>int_offload_array</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>qid</declname>
        </param>
        <briefdescription>
<para>Read wall data from HDF5 file. </para>
        </briefdescription>
        <detaileddescription>
<para>This function reads wall data with given qid while also initializing offload data and allocating and filling offload array. The file is opened and closed outside this function.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>f</parametername>
</parameternamelist>
<parameterdescription>
<para>HDF5 file from which data is read </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>offload_data</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to offload data </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>offload_array</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to offload array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>int_offload_array</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to integer offload array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>qid</parametername>
</parameternamelist>
<parameterdescription>
<para>QID of the data</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Zero if reading and initialization of data succeeded </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hdf5io/hdf5_wall.h" line="12" column="5" bodyfile="hdf5io/hdf5_wall.c" bodystart="42" bodyend="71" declfile="hdf5io/hdf5_wall.h" declline="12" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="hdf5__wall_8h_1aa9e0d5bb344d2a763eb3a4c69df989b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int hdf5_wall_2d_to_offload</definition>
        <argsstring>(wall_2d_offload_data *offload_data, real **offload_array, int nelements, real *r, real *z)</argsstring>
        <name>hdf5_wall_2d_to_offload</name>
        <param>
          <type><ref refid="structwall__2d__offload__data" kindref="compound">wall_2d_offload_data</ref> *</type>
          <declname>offload_data</declname>
        </param>
        <param>
          <type><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref> **</type>
          <declname>offload_array</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nelements</declname>
        </param>
        <param>
          <type><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref> *</type>
          <declname>r</declname>
        </param>
        <param>
          <type><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref> *</type>
          <declname>z</declname>
        </param>
        <briefdescription>
<para>Assign r,z to the offload array. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>offload_data</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to offload data </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>offload_array</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to offload array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nelements</parametername>
</parameternamelist>
<parameterdescription>
<para>length of the wall data </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>r</parametername>
</parameternamelist>
<parameterdescription>
<para>a 1-d array of nelements containing R-coordinates </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>z</parametername>
</parameternamelist>
<parameterdescription>
<para>a 1-d array of nelements containing z-coordinates</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Zero if assignment succeeded </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hdf5io/hdf5_wall.h" line="16" column="5" bodyfile="hdf5io/hdf5_wall.c" bodystart="125" bodyend="147" declfile="hdf5io/hdf5_wall.h" declline="16" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="hdf5__wall_8h_1a7d355bc26685021d6b303ccd23c965c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int hdf5_wall_3d_to_offload</definition>
        <argsstring>(wall_3d_offload_data *offload_data, real **offload_array, int nelements, real *x1x2x3, real *y1y2y3, real *z1z2z3)</argsstring>
        <name>hdf5_wall_3d_to_offload</name>
        <param>
          <type><ref refid="structwall__3d__offload__data" kindref="compound">wall_3d_offload_data</ref> *</type>
          <declname>offload_data</declname>
        </param>
        <param>
          <type><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref> **</type>
          <declname>offload_array</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nelements</declname>
        </param>
        <param>
          <type><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref> *</type>
          <declname>x1x2x3</declname>
        </param>
        <param>
          <type><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref> *</type>
          <declname>y1y2y3</declname>
        </param>
        <param>
          <type><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref> *</type>
          <declname>z1z2z3</declname>
        </param>
        <briefdescription>
<para>Assign x1x2x3,y1y2y3,z1z2z3 to the offload array. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>offload_data</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to offload data </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>offload_array</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to offload array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nelements</parametername>
</parameternamelist>
<parameterdescription>
<para>length of the wall data </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x1x2x3</parametername>
</parameternamelist>
<parameterdescription>
<para>a x-coords of triangle corners </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y1y2y3</parametername>
</parameternamelist>
<parameterdescription>
<para>a y-coords of triangle corners </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>z1z2z3</parametername>
</parameternamelist>
<parameterdescription>
<para>a z-coords of triangle corners</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Zero if assignment succeeded </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hdf5io/hdf5_wall.h" line="20" column="5" bodyfile="hdf5io/hdf5_wall.c" bodystart="206" bodyend="227" declfile="hdf5io/hdf5_wall.h" declline="20" declcolumn="5"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Header file for <ref refid="hdf5__wall_8c" kindref="compound">hdf5_wall.c</ref>. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>HDF5_WALL_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HDF5_WALL_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;hdf5.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../ascot5.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../wall.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="hdf5__wall_8h_1a15d5fb6be47cf794f581e2b79b90e27e" kindref="member">hdf5_wall_init_offload</ref>(hid_t<sp/>f,<sp/><ref refid="structwall__offload__data" kindref="compound">wall_offload_data</ref>*<sp/>offload_data,</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref>**<sp/>offload_array,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">**<sp/>int_offload_array,</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>qid);</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="hdf5__wall_8h_1aa9e0d5bb344d2a763eb3a4c69df989b6" kindref="member">hdf5_wall_2d_to_offload</ref>(</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structwall__2d__offload__data" kindref="compound">wall_2d_offload_data</ref><sp/>*offload_data,<sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/>**offload_array,</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nelements,<sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/>*r,<sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/>*z);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="hdf5__wall_8h_1a7d355bc26685021d6b303ccd23c965c6" kindref="member">hdf5_wall_3d_to_offload</ref>(</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structwall__3d__offload__data" kindref="compound">wall_3d_offload_data</ref><sp/>*offload_data,<sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/>**offload_array,</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nelements,<sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref>*<sp/>x1x2x3,<sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref>*<sp/>y1y2y3,<sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref>*<sp/>z1z2z3);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="hdf5io/hdf5_wall.h"/>
  </compounddef>
</doxygen>
