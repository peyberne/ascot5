<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="mhd_8c" kind="file" language="C++">
    <compoundname>mhd.c</compoundname>
    <includes local="no">stdlib.h</includes>
    <includes refid="ascot5_8h" local="yes">ascot5.h</includes>
    <includes refid="error_8h" local="yes">error.h</includes>
    <includes refid="print_8h" local="yes">print.h</includes>
    <includes refid="mhd_8h" local="yes">mhd.h</includes>
    <includes refid="B__field_8h" local="yes">B_field.h</includes>
    <includes refid="boozer_8h" local="yes">boozer.h</includes>
    <includes refid="mhd__stat_8h" local="yes">mhd/mhd_stat.h</includes>
    <includes refid="mhd__nonstat_8h" local="yes">mhd/mhd_nonstat.h</includes>
    <incdepgraph>
      <node id="14">
        <label>../spline/interp.h</label>
        <link refid="interp_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>Bfield/B_GS.h</label>
        <link refid="B__GS_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>mhd/mhd_nonstat.h</label>
        <link refid="mhd__nonstat_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>stdlib.h</label>
      </node>
      <node id="4">
        <label>omp.h</label>
      </node>
      <node id="11">
        <label>B_field.h</label>
        <link refid="B__field_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>mhd/mhd_stat.h</label>
        <link refid="mhd__stat_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>error.h</label>
        <link refid="error_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>time.h</label>
      </node>
      <node id="18">
        <label>Bfield/B_TC.h</label>
        <link refid="B__TC_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>../linint/linint.h</label>
        <link refid="linint_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>mhd.c</label>
        <link refid="mhd_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>Bfield/B_2DS.h</label>
        <link refid="B__2DS_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>mhd.h</label>
        <link refid="mhd_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>boozer.h</label>
        <link refid="boozer_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>Bfield/B_3DS.h</label>
        <link refid="B__3DS_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>math.h</label>
        <link refid="math_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>stdio.h</label>
      </node>
      <node id="16">
        <label>Bfield/B_STS.h</label>
        <link refid="B__STS_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>print.h</label>
        <link refid="print_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>ascot5.h</label>
        <link refid="ascot5_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="mhd_8c_1af3708acc9639d894ee7552974fd85055" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int mhd_init_offload</definition>
        <argsstring>(mhd_offload_data *offload_data, real **offload_array)</argsstring>
        <name>mhd_init_offload</name>
        <param>
          <type><ref refid="structmhd__offload__data" kindref="compound">mhd_offload_data</ref> *</type>
          <declname>offload_data</declname>
        </param>
        <param>
          <type><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref> **</type>
          <declname>offload_array</declname>
        </param>
        <briefdescription>
<para>Load MHD data and prepare parameters. </para>
        </briefdescription>
        <detaileddescription>
<para>This function fills the relevant MHD offload struct with parameters and allocates and fills the offload array.</para>
<para>The offload data has to have a type when this function is called as it should be set when the offload data is constructed from inputs.</para>
<para>This function is host only.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>offload_data</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to offload data struct </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>offload_array</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to pointer to offload array</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>zero if initialization succeeded </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mhd.c" line="45" column="5" bodyfile="mhd.c" bodystart="45" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="mhd_8c_1af5eb45555f91d9272b5ecc8a244dc0d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mhd_free_offload</definition>
        <argsstring>(mhd_offload_data *offload_data, real **offload_array)</argsstring>
        <name>mhd_free_offload</name>
        <param>
          <type><ref refid="structmhd__offload__data" kindref="compound">mhd_offload_data</ref> *</type>
          <declname>offload_data</declname>
        </param>
        <param>
          <type><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref> **</type>
          <declname>offload_array</declname>
        </param>
        <briefdescription>
<para>Free offload array and reset parameters. </para>
        </briefdescription>
        <detaileddescription>
<para>This function deallocates the offload_array.</para>
<para>This function is host only.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>offload_data</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to offload data struct </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>offload_array</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to pointer to offload array </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mhd.c" line="90" column="6" bodyfile="mhd.c" bodystart="90" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="mhd_8c_1a596d84c7af2ba49c7832c03e2f397c84" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int mhd_init</definition>
        <argsstring>(mhd_data *mhddata, mhd_offload_data *offload_data, real *offload_array)</argsstring>
        <name>mhd_init</name>
        <param>
          <type><ref refid="structmhd__data" kindref="compound">mhd_data</ref> *</type>
          <declname>mhddata</declname>
        </param>
        <param>
          <type><ref refid="structmhd__offload__data" kindref="compound">mhd_offload_data</ref> *</type>
          <declname>offload_data</declname>
        </param>
        <param>
          <type><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref> *</type>
          <declname>offload_array</declname>
        </param>
        <briefdescription>
<para>Initialize MHD data struct on target. </para>
        </briefdescription>
        <detaileddescription>
<para>This function copies the electric field parameters from the offload struct to the struct on target and sets the MHD data pointers to correct offsets in the offload array.</para>
<para>This function returns error if the offload data has not been initialized. The instances themselves should not return an error since all they do is assign pointers and values.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mhddata</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to data struct on target </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>offload_data</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to offload data struct </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>offload_array</parametername>
</parameternamelist>
<parameterdescription>
<para>the offload array</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Non-zero integer if offload was not initialized beforehand </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mhd.c" line="121" column="5" bodyfile="mhd.c" bodystart="121" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="mhd_8c_1aa00e63ac9f53cb606e34d4f61e35d591" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="error_8h_1a3bca029fa2975420f00b89f3cb38872e" kindref="member">a5err</ref></type>
        <definition>a5err mhd_eval</definition>
        <argsstring>(real mhd_dmhd[10], real r, real phi, real z, real t, int includemode, boozer_data *boozerdata, mhd_data *mhddata, B_field_data *Bdata)</argsstring>
        <name>mhd_eval</name>
        <param>
          <type><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref></type>
          <declname>mhd_dmhd</declname>
          <array>[10]</array>
        </param>
        <param>
          <type><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref></type>
          <declname>r</declname>
        </param>
        <param>
          <type><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref></type>
          <declname>phi</declname>
        </param>
        <param>
          <type><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref></type>
          <declname>z</declname>
        </param>
        <param>
          <type><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref></type>
          <declname>t</declname>
        </param>
        <param>
          <type>int</type>
          <declname>includemode</declname>
        </param>
        <param>
          <type><ref refid="structboozer__data" kindref="compound">boozer_data</ref> *</type>
          <declname>boozerdata</declname>
        </param>
        <param>
          <type><ref refid="structmhd__data" kindref="compound">mhd_data</ref> *</type>
          <declname>mhddata</declname>
        </param>
        <param>
          <type><ref refid="structB__field__data" kindref="compound">B_field_data</ref> *</type>
          <declname>Bdata</declname>
        </param>
        <briefdescription>
<para>Evaluate the needed quantities from MHD mode for orbit following. </para>
        </briefdescription>
        <detaileddescription>
<para>The quantities to be evaluated are alpha, phi, grad alpha, grad phi, partial t alpha, partial t phi</para>
<para>The values are stored in the given array as:<itemizedlist>
<listitem><para>mhd_dmhd[0] = alpha</para>
</listitem><listitem><para>mhd_dmhd[1] = dalpha/dt</para>
</listitem><listitem><para>mhd_dmhd[2] = grad alpha, r component</para>
</listitem><listitem><para>mhd_dmhd[3] = grad alpha, phi component</para>
</listitem><listitem><para>mhd_dmhd[4] = grad alpha, z component</para>
</listitem><listitem><para>mhd_dmhd[5] = phi</para>
</listitem><listitem><para>mhd_dmhd[6] = dphi/dt</para>
</listitem><listitem><para>mhd_dmhd[7] = grad phi, r component</para>
</listitem><listitem><para>mhd_dmhd[8] = grad phi, phi component</para>
</listitem><listitem><para>mhd_dmhd[9] = grad phi, z component</para>
</listitem></itemizedlist>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mhd_dmhd</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>r</parametername>
</parameternamelist>
<parameterdescription>
<para>R coordinate [m] </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>phi</parametername>
</parameternamelist>
<parameterdescription>
<para>phi coordinate [rad] </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>z</parametername>
</parameternamelist>
<parameterdescription>
<para>z coordinate [m] </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>time coordinate [s] </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>includemode</parametername>
</parameternamelist>
<parameterdescription>
<para>mode number to be included or MHD_INCLUDE_ALL </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>boozerdata</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to boozer data </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mhddata</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to mhd data </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Bdata</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to magnetic field data</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Non-zero a5err value if evaluation failed, zero otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mhd.c" line="178" column="7" bodyfile="mhd.c" bodystart="178" bodyend="202"/>
      </memberdef>
      <memberdef kind="function" id="mhd_8c_1a66777d1e7f114f5aa5cfa384996bd67a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="error_8h_1a3bca029fa2975420f00b89f3cb38872e" kindref="member">a5err</ref></type>
        <definition>a5err mhd_perturbations</definition>
        <argsstring>(real pert_field[7], real r, real phi, real z, real t, int pertonly, int includemode, boozer_data *boozerdata, mhd_data *mhddata, B_field_data *Bdata)</argsstring>
        <name>mhd_perturbations</name>
        <param>
          <type><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref></type>
          <declname>pert_field</declname>
          <array>[7]</array>
        </param>
        <param>
          <type><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref></type>
          <declname>r</declname>
        </param>
        <param>
          <type><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref></type>
          <declname>phi</declname>
        </param>
        <param>
          <type><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref></type>
          <declname>z</declname>
        </param>
        <param>
          <type><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref></type>
          <declname>t</declname>
        </param>
        <param>
          <type>int</type>
          <declname>pertonly</declname>
        </param>
        <param>
          <type>int</type>
          <declname>includemode</declname>
        </param>
        <param>
          <type><ref refid="structboozer__data" kindref="compound">boozer_data</ref> *</type>
          <declname>boozerdata</declname>
        </param>
        <param>
          <type><ref refid="structmhd__data" kindref="compound">mhd_data</ref> *</type>
          <declname>mhddata</declname>
        </param>
        <param>
          <type><ref refid="structB__field__data" kindref="compound">B_field_data</ref> *</type>
          <declname>Bdata</declname>
        </param>
        <briefdescription>
<para>Evaluate perturbed fields Btilde, Etilde and potential Phi explicitly. </para>
        </briefdescription>
        <detaileddescription>
<para>The values are stored in the given array as<itemizedlist>
<listitem><para>pert_field[0] = BtildeR</para>
</listitem><listitem><para>pert_field[1] = BtildePhi</para>
</listitem><listitem><para>pert_field[2] = BtildeZ</para>
</listitem><listitem><para>pert_field[3] = EtildeR</para>
</listitem><listitem><para>pert_field[4] = EtildePhi</para>
</listitem><listitem><para>pert_field[5] = EtildeZ</para>
</listitem><listitem><para>pert_field[6] = Phi</para>
</listitem></itemizedlist>
</para>
<para>Only the perturbation values for the magnetic field are returned if pertonly=1, otherwise, the total perturbed field is returned. This is done to avoid double evaluation of the magnetic field e.g. in field line tracing. For electric field only the perturbation component is returned always.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pert_field</parametername>
</parameternamelist>
<parameterdescription>
<para>perturbation field components </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>r</parametername>
</parameternamelist>
<parameterdescription>
<para>R coordinate [m] </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>phi</parametername>
</parameternamelist>
<parameterdescription>
<para>phi coordinate [rad] </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>z</parametername>
</parameternamelist>
<parameterdescription>
<para>z coordinate [m] </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>time coordinate [s] </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pertonly</parametername>
</parameternamelist>
<parameterdescription>
<para>flag whether to return the whole field or only perturbation </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>includemode</parametername>
</parameternamelist>
<parameterdescription>
<para>mode number to be included or MHD_INCLUDE_ALL </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>boozerdata</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to boozer data </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mhddata</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to mhd data </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Bdata</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to magnetic field data</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Non-zero a5err value if evaluation failed, zero otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mhd.c" line="234" column="7" bodyfile="mhd.c" bodystart="234" bodyend="261"/>
      </memberdef>
      <memberdef kind="function" id="mhd_8c_1a066906671291098767dc35af8d85e3c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int mhd_get_n_modes</definition>
        <argsstring>(mhd_data *mhddata)</argsstring>
        <name>mhd_get_n_modes</name>
        <param>
          <type><ref refid="structmhd__data" kindref="compound">mhd_data</ref> *</type>
          <declname>mhddata</declname>
        </param>
        <briefdescription>
<para>Return number of modes. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mhddata</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to mhd data</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>number of modes </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mhd.c" line="270" column="5" bodyfile="mhd.c" bodystart="270" bodyend="281"/>
      </memberdef>
      <memberdef kind="function" id="mhd_8c_1ae443ac5bbd950952e8ecbf4a2ba4ef54" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const int *</type>
        <definition>const int* mhd_get_nmode</definition>
        <argsstring>(mhd_data *mhddata)</argsstring>
        <name>mhd_get_nmode</name>
        <param>
          <type><ref refid="structmhd__data" kindref="compound">mhd_data</ref> *</type>
          <declname>mhddata</declname>
        </param>
        <briefdescription>
<para>Return mode toroidal numbers. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mhddata</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to mhd data</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>mode n numbers </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mhd.c" line="290" column="11" bodyfile="mhd.c" bodystart="290" bodyend="301"/>
      </memberdef>
      <memberdef kind="function" id="mhd_8c_1ad18add369b8f37c3240fdb3d3724b94a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const int *</type>
        <definition>const int* mhd_get_mmode</definition>
        <argsstring>(mhd_data *mhddata)</argsstring>
        <name>mhd_get_mmode</name>
        <param>
          <type><ref refid="structmhd__data" kindref="compound">mhd_data</ref> *</type>
          <declname>mhddata</declname>
        </param>
        <briefdescription>
<para>Return mode poloidal numbers. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mhddata</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to mhd data</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>mode m numbers </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mhd.c" line="310" column="11" bodyfile="mhd.c" bodystart="310" bodyend="321"/>
      </memberdef>
      <memberdef kind="function" id="mhd_8c_1ac57282a671e54f54abc977855a34bbdf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref> *</type>
        <definition>const real* mhd_get_amplitude</definition>
        <argsstring>(mhd_data *mhddata)</argsstring>
        <name>mhd_get_amplitude</name>
        <param>
          <type><ref refid="structmhd__data" kindref="compound">mhd_data</ref> *</type>
          <declname>mhddata</declname>
        </param>
        <briefdescription>
<para>Return mode amplitudes. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mhddata</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to mhd data</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>mode amplitudes </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mhd.c" line="330" column="12" bodyfile="mhd.c" bodystart="330" bodyend="341"/>
      </memberdef>
      <memberdef kind="function" id="mhd_8c_1a7833912413a8d4c6ea74e0de2b9417f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref> *</type>
        <definition>const real* mhd_get_frequency</definition>
        <argsstring>(mhd_data *mhddata)</argsstring>
        <name>mhd_get_frequency</name>
        <param>
          <type><ref refid="structmhd__data" kindref="compound">mhd_data</ref> *</type>
          <declname>mhddata</declname>
        </param>
        <briefdescription>
<para>Return mode frequencies. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mhddata</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to mhd data</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>mode omega </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mhd.c" line="350" column="12" bodyfile="mhd.c" bodystart="350" bodyend="361"/>
      </memberdef>
      <memberdef kind="function" id="mhd_8c_1ad3cb7cc97f032144f13c0748856482f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref> *</type>
        <definition>const real* mhd_get_phase</definition>
        <argsstring>(mhd_data *mhddata)</argsstring>
        <name>mhd_get_phase</name>
        <param>
          <type><ref refid="structmhd__data" kindref="compound">mhd_data</ref> *</type>
          <declname>mhddata</declname>
        </param>
        <briefdescription>
<para>Return mode phases. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mhddata</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to mhd data</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>mode phases </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mhd.c" line="370" column="12" bodyfile="mhd.c" bodystart="370" bodyend="381"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>MHD module interface. </para>
    </briefdescription>
    <detaileddescription>
<para>This is an interface through which MHD data is initialized and accessed. Reading e.g. from disk is done elsewhere. The MHD module produces helical EM perturbations in to the EM field using the boozer module in making the coordinate transformations between cylindrical and straight-field-line coordinates.</para>
<para>To add a new MHD instance, make sure these functions are implemented and called from this interface, and that <ref refid="mhd_8h" kindref="compound">mhd.h</ref> contains enum type for the new instance.</para>
<para>The interface checks which instance given data corresponds to from <ref refid="structmhd__offload__data_1a211904f45beef67cee64c181999f2d0f" kindref="member">mhd_offload_data.type</ref> and <ref refid="structmhd__data_1a347d449bf250c7c0b4dac59fe4f3b910" kindref="member">mhd_data.type</ref> from the struct that is given as an argument, and calls the relevant function for that instance. </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ascot5_8h" kindref="compound">ascot5.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="error_8h" kindref="compound">error.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="print_8h" kindref="compound">print.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="mhd_8h" kindref="compound">mhd.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="B__field_8h" kindref="compound">B_field.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="boozer_8h" kindref="compound">boozer.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="mhd__stat_8h" kindref="compound">mhd/mhd_stat.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="mhd__nonstat_8h" kindref="compound">mhd/mhd_nonstat.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="mhd_8c_1af3708acc9639d894ee7552974fd85055" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="mhd_8c_1af3708acc9639d894ee7552974fd85055" kindref="member">mhd_init_offload</ref>(<ref refid="structmhd__offload__data" kindref="compound">mhd_offload_data</ref>*<sp/>offload_data,</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref>**<sp/>offload_array)<sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>err<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(offload_data-&gt;<ref refid="structmhd__offload__data_1a211904f45beef67cee64c181999f2d0f" kindref="member">type</ref>)<sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="mhd_8h_1ab21aab0cb19764b60e853c7d2c0a4316a34cf1c1aa3179513ab9dd550ddb1ecba" kindref="member">mhd_type_stat</ref>:</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/><ref refid="mhd__stat_8c_1ac5996ebe06a8c655fa616339b6bb69df" kindref="member">mhd_stat_init_offload</ref>(&amp;(offload_data-&gt;<ref refid="structmhd__offload__data_1a8d47f8daef869f2206e2473a3fb44062" kindref="member">stat</ref>),<sp/>offload_array);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offload_data-&gt;<ref refid="structmhd__offload__data_1a6fdcee91b43e43f63c5171d9a0e659f9" kindref="member">offload_array_length</ref><sp/>=</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offload_data-&gt;<ref refid="structmhd__offload__data_1a8d47f8daef869f2206e2473a3fb44062" kindref="member">stat</ref>.<ref refid="structmhd__stat__offload__data_1abb6954ccd17eccc2b97121237d26849f" kindref="member">offload_array_length</ref>;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="mhd_8h_1ab21aab0cb19764b60e853c7d2c0a4316aec758ad0eb94e9ba0ae3761ca4952a5d" kindref="member">mhd_type_nonstat</ref>:</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/><ref refid="mhd__nonstat_8c_1a47e2f57828a836e062d93acb59d18e44" kindref="member">mhd_nonstat_init_offload</ref>(&amp;(offload_data-&gt;<ref refid="structmhd__offload__data_1a868b2d6eec09361e9068b83cead2bcbd" kindref="member">nonstat</ref>),</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offload_array);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offload_data-&gt;<ref refid="structmhd__offload__data_1a6fdcee91b43e43f63c5171d9a0e659f9" kindref="member">offload_array_length</ref><sp/>=</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offload_data-&gt;<ref refid="structmhd__offload__data_1a868b2d6eec09361e9068b83cead2bcbd" kindref="member">nonstat</ref>.<ref refid="structmhd__nonstat__offload__data_1a28b1faab3cee23ea0db31b7c67a509d4" kindref="member">offload_array_length</ref>;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Unregonized<sp/>input.<sp/>Produce<sp/>error.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="print_8h_1ae9242d843e65413a3e5dba7129c75101" kindref="member">print_err</ref>(</highlight><highlight class="stringliteral">&quot;Error:<sp/>Unregonized<sp/>MHD<sp/>type.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!err)<sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="print_8h_1a8520c71eb5db223009e5079e420bc398" kindref="member">print_out</ref>(VERBOSE_IO,<sp/></highlight><highlight class="stringliteral">&quot;Estimated<sp/>memory<sp/>usage<sp/>%.1f<sp/>MB\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offload_data-&gt;<ref refid="structmhd__offload__data_1a6fdcee91b43e43f63c5171d9a0e659f9" kindref="member">offload_array_length</ref></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref>)<sp/>/<sp/>(1024.0*1024.0)<sp/>);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="78"><highlight class="normal">}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="90" refid="mhd_8c_1af5eb45555f91d9272b5ecc8a244dc0d5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="mhd_8c_1af5eb45555f91d9272b5ecc8a244dc0d5" kindref="member">mhd_free_offload</ref>(<ref refid="structmhd__offload__data" kindref="compound">mhd_offload_data</ref>*<sp/>offload_data,</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref>**<sp/>offload_array)<sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(offload_data-&gt;<ref refid="structmhd__offload__data_1a211904f45beef67cee64c181999f2d0f" kindref="member">type</ref>)<sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="mhd_8h_1ab21aab0cb19764b60e853c7d2c0a4316a34cf1c1aa3179513ab9dd550ddb1ecba" kindref="member">mhd_type_stat</ref>:</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mhd__stat_8c_1a018676d10b4c1d541e99dd65b5e6825e" kindref="member">mhd_stat_free_offload</ref>(&amp;(offload_data-&gt;<ref refid="structmhd__offload__data_1a8d47f8daef869f2206e2473a3fb44062" kindref="member">stat</ref>),<sp/>offload_array);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="mhd_8h_1ab21aab0cb19764b60e853c7d2c0a4316aec758ad0eb94e9ba0ae3761ca4952a5d" kindref="member">mhd_type_nonstat</ref>:</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mhd__nonstat_8c_1ab466ea466ebaa78105394b986d39b962" kindref="member">mhd_nonstat_free_offload</ref>(&amp;(offload_data-&gt;<ref refid="structmhd__offload__data_1a868b2d6eec09361e9068b83cead2bcbd" kindref="member">nonstat</ref>),<sp/>offload_array);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal">}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="121" refid="mhd_8c_1a596d84c7af2ba49c7832c03e2f397c84" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="mhd_8c_1a596d84c7af2ba49c7832c03e2f397c84" kindref="member">mhd_init</ref>(<ref refid="structmhd__data" kindref="compound">mhd_data</ref>*<sp/>mhddata,<sp/><ref refid="structmhd__offload__data" kindref="compound">mhd_offload_data</ref>*<sp/>offload_data,</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref>*<sp/>offload_array)<sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>err<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(offload_data-&gt;<ref refid="structmhd__offload__data_1a211904f45beef67cee64c181999f2d0f" kindref="member">type</ref>)<sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="mhd_8h_1ab21aab0cb19764b60e853c7d2c0a4316a34cf1c1aa3179513ab9dd550ddb1ecba" kindref="member">mhd_type_stat</ref>:</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mhd__stat_8c_1afe7453198ce750d0ddcd5cd69d2959c9" kindref="member">mhd_stat_init</ref>(&amp;(mhddata-&gt;<ref refid="structmhd__data_1a50864ab0f1a446927c5040d00b20e0e2" kindref="member">stat</ref>),<sp/>&amp;(offload_data-&gt;<ref refid="structmhd__offload__data_1a8d47f8daef869f2206e2473a3fb44062" kindref="member">stat</ref>),</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offload_array);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="mhd_8h_1ab21aab0cb19764b60e853c7d2c0a4316aec758ad0eb94e9ba0ae3761ca4952a5d" kindref="member">mhd_type_nonstat</ref>:</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mhd__nonstat_8c_1a238dc0066ff8d99667dcdc0ed898cc2a" kindref="member">mhd_nonstat_init</ref>(&amp;(mhddata-&gt;<ref refid="structmhd__data_1a9c9b4bde21bd0cb33a2b41d32d975ebf" kindref="member">nonstat</ref>),<sp/>&amp;(offload_data-&gt;<ref refid="structmhd__offload__data_1a868b2d6eec09361e9068b83cead2bcbd" kindref="member">nonstat</ref>),</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offload_array);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Unregonized<sp/>input.<sp/>Produce<sp/>error.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="print_8h_1ae9242d843e65413a3e5dba7129c75101" kindref="member">print_err</ref>(</highlight><highlight class="stringliteral">&quot;Error:<sp/>Unregonized<sp/>electric<sp/>field<sp/>type.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>mhddata-&gt;<ref refid="structmhd__data_1a347d449bf250c7c0b4dac59fe4f3b910" kindref="member">type</ref><sp/>=<sp/>offload_data-&gt;<ref refid="structmhd__offload__data_1a211904f45beef67cee64c181999f2d0f" kindref="member">type</ref>;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="146"><highlight class="normal">}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="178" refid="mhd_8c_1aa00e63ac9f53cb606e34d4f61e35d591" refkind="member"><highlight class="normal"><ref refid="error_8h_1a3bca029fa2975420f00b89f3cb38872e" kindref="member">a5err</ref><sp/><ref refid="mhd_8c_1aa00e63ac9f53cb606e34d4f61e35d591" kindref="member">mhd_eval</ref>(<ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/>mhd_dmhd[10],<sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/>r,<sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/>phi,<sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/>z,<sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/>t,</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>includemode,<sp/><ref refid="structboozer__data" kindref="compound">boozer_data</ref>*<sp/>boozerdata,<sp/><ref refid="structmhd__data" kindref="compound">mhd_data</ref>*<sp/>mhddata,</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structB__field__data" kindref="compound">B_field_data</ref>*<sp/>Bdata)<sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="error_8h_1a3bca029fa2975420f00b89f3cb38872e" kindref="member">a5err</ref><sp/>err<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(mhddata-&gt;<ref refid="structmhd__data_1a347d449bf250c7c0b4dac59fe4f3b910" kindref="member">type</ref>)<sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="mhd_8h_1ab21aab0cb19764b60e853c7d2c0a4316a34cf1c1aa3179513ab9dd550ddb1ecba" kindref="member">mhd_type_stat</ref>:</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/><ref refid="mhd__stat_8c_1a942de062f19ef52b392c7298028d6952" kindref="member">mhd_stat_eval</ref>(mhd_dmhd,<sp/>r,<sp/>phi,<sp/>z,<sp/>t,<sp/>includemode,</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boozerdata,<sp/>&amp;(mhddata-&gt;<ref refid="structmhd__data_1a50864ab0f1a446927c5040d00b20e0e2" kindref="member">stat</ref>),<sp/>Bdata);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="mhd_8h_1ab21aab0cb19764b60e853c7d2c0a4316aec758ad0eb94e9ba0ae3761ca4952a5d" kindref="member">mhd_type_nonstat</ref>:</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/><ref refid="mhd__nonstat_8c_1aec96be4a6974c7bf9e9bcccfb5f31b01" kindref="member">mhd_nonstat_eval</ref>(mhd_dmhd,<sp/>r,<sp/>phi,<sp/>z,<sp/>t,<sp/>includemode,</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boozerdata,<sp/>&amp;(mhddata-&gt;<ref refid="structmhd__data_1a9c9b4bde21bd0cb33a2b41d32d975ebf" kindref="member">nonstat</ref>),<sp/>Bdata);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Unregonized<sp/>input.<sp/>Produce<sp/>error.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/><ref refid="error_8h_1a580a0b8b4a823a26a00b2f83d9343bc4" kindref="member">error_raise</ref>(<sp/><ref refid="error_8h_1a6756b9f30781ed8ca8ce938e49ad9d92ac2125be888742dd78b8d8bd4fc40b5b7" kindref="member">ERR_UNKNOWN_INPUT</ref>,<sp/>__LINE__,<sp/><ref refid="error_8h_1a4e101179605aba551caa2576fd83a1ddabe1051d0411c39f8dab499e5f71111ca" kindref="member">EF_MHD</ref><sp/>);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="202"><highlight class="normal">}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="234" refid="mhd_8c_1a66777d1e7f114f5aa5cfa384996bd67a" refkind="member"><highlight class="normal"><ref refid="error_8h_1a3bca029fa2975420f00b89f3cb38872e" kindref="member">a5err</ref><sp/><ref refid="mhd_8c_1a66777d1e7f114f5aa5cfa384996bd67a" kindref="member">mhd_perturbations</ref>(<ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/>pert_field[7],<sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/>r,<sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/>phi,<sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/>z,</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/>t,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pertonly,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>includemode,</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structboozer__data" kindref="compound">boozer_data</ref>*<sp/>boozerdata,<sp/><ref refid="structmhd__data" kindref="compound">mhd_data</ref>*<sp/>mhddata,</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structB__field__data" kindref="compound">B_field_data</ref>*<sp/>Bdata)<sp/>{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="error_8h_1a3bca029fa2975420f00b89f3cb38872e" kindref="member">a5err</ref><sp/>err<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(mhddata-&gt;<ref refid="structmhd__data_1a347d449bf250c7c0b4dac59fe4f3b910" kindref="member">type</ref>)<sp/>{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="mhd_8h_1ab21aab0cb19764b60e853c7d2c0a4316a34cf1c1aa3179513ab9dd550ddb1ecba" kindref="member">mhd_type_stat</ref>:</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/><sp/><ref refid="mhd__stat_8c_1a7d6428e4aefd0cf39446bb7c428f92bd" kindref="member">mhd_stat_perturbations</ref>(pert_field,<sp/>r,<sp/>phi,<sp/>z,<sp/>t,<sp/>pertonly,</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>includemode,<sp/>boozerdata,</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;(mhddata-&gt;<ref refid="structmhd__data_1a50864ab0f1a446927c5040d00b20e0e2" kindref="member">stat</ref>),<sp/>Bdata);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="mhd_8h_1ab21aab0cb19764b60e853c7d2c0a4316aec758ad0eb94e9ba0ae3761ca4952a5d" kindref="member">mhd_type_nonstat</ref>:</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/><sp/><ref refid="mhd__nonstat_8c_1a2adf4b14b1e81f6cb23d7f0e2e346017" kindref="member">mhd_nonstat_perturbations</ref>(pert_field,<sp/>r,<sp/>phi,<sp/>z,<sp/>t,<sp/>pertonly,</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>includemode,<sp/>boozerdata,</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;(mhddata-&gt;<ref refid="structmhd__data_1a9c9b4bde21bd0cb33a2b41d32d975ebf" kindref="member">nonstat</ref>),<sp/>Bdata);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Unregonized<sp/>input.<sp/>Produce<sp/>error.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/><ref refid="error_8h_1a580a0b8b4a823a26a00b2f83d9343bc4" kindref="member">error_raise</ref>(<sp/><ref refid="error_8h_1a6756b9f30781ed8ca8ce938e49ad9d92ac2125be888742dd78b8d8bd4fc40b5b7" kindref="member">ERR_UNKNOWN_INPUT</ref>,<sp/>__LINE__,<sp/><ref refid="error_8h_1a4e101179605aba551caa2576fd83a1ddabe1051d0411c39f8dab499e5f71111ca" kindref="member">EF_MHD</ref><sp/>);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="261"><highlight class="normal">}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="270" refid="mhd_8c_1a066906671291098767dc35af8d85e3c1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="mhd_8c_1a066906671291098767dc35af8d85e3c1" kindref="member">mhd_get_n_modes</ref>(<ref refid="structmhd__data" kindref="compound">mhd_data</ref>*<sp/>mhddata)<sp/>{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(mhddata-&gt;<ref refid="structmhd__data_1a347d449bf250c7c0b4dac59fe4f3b910" kindref="member">type</ref>)<sp/>{</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="mhd_8h_1ab21aab0cb19764b60e853c7d2c0a4316a34cf1c1aa3179513ab9dd550ddb1ecba" kindref="member">mhd_type_stat</ref>:</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val<sp/>=<sp/>mhddata-&gt;<ref refid="structmhd__data_1a50864ab0f1a446927c5040d00b20e0e2" kindref="member">stat</ref>.<ref refid="structmhd__stat__data_1adc48cc83de70a5fdb05d2ed7f03203c2" kindref="member">n_modes</ref>;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="mhd_8h_1ab21aab0cb19764b60e853c7d2c0a4316aec758ad0eb94e9ba0ae3761ca4952a5d" kindref="member">mhd_type_nonstat</ref>:</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val<sp/>=<sp/>mhddata-&gt;<ref refid="structmhd__data_1a9c9b4bde21bd0cb33a2b41d32d975ebf" kindref="member">nonstat</ref>.<ref refid="structmhd__nonstat__data_1aeb7cfb00227bcafd756faaf95b7d563d" kindref="member">n_modes</ref>;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>val;</highlight></codeline>
<codeline lineno="281"><highlight class="normal">}</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="290" refid="mhd_8c_1ae443ac5bbd950952e8ecbf4a2ba4ef54" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><ref refid="mhd_8c_1ae443ac5bbd950952e8ecbf4a2ba4ef54" kindref="member">mhd_get_nmode</ref>(<ref refid="structmhd__data" kindref="compound">mhd_data</ref>*<sp/>mhddata)<sp/>{</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>val<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(mhddata-&gt;<ref refid="structmhd__data_1a347d449bf250c7c0b4dac59fe4f3b910" kindref="member">type</ref>)<sp/>{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="mhd_8h_1ab21aab0cb19764b60e853c7d2c0a4316a34cf1c1aa3179513ab9dd550ddb1ecba" kindref="member">mhd_type_stat</ref>:</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val<sp/>=<sp/>mhddata-&gt;<ref refid="structmhd__data_1a50864ab0f1a446927c5040d00b20e0e2" kindref="member">stat</ref>.<ref refid="structmhd__stat__data_1a90c72499bd8e4be37bec59f46e682738" kindref="member">nmode</ref>;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="mhd_8h_1ab21aab0cb19764b60e853c7d2c0a4316aec758ad0eb94e9ba0ae3761ca4952a5d" kindref="member">mhd_type_nonstat</ref>:</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val<sp/>=<sp/>mhddata-&gt;<ref refid="structmhd__data_1a9c9b4bde21bd0cb33a2b41d32d975ebf" kindref="member">nonstat</ref>.<ref refid="structmhd__nonstat__data_1a3a0bc7233da2da9ff119550649a40e8d" kindref="member">nmode</ref>;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>val;</highlight></codeline>
<codeline lineno="301"><highlight class="normal">}</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="310" refid="mhd_8c_1ad18add369b8f37c3240fdb3d3724b94a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><ref refid="mhd_8c_1ad18add369b8f37c3240fdb3d3724b94a" kindref="member">mhd_get_mmode</ref>(<ref refid="structmhd__data" kindref="compound">mhd_data</ref>*<sp/>mhddata)<sp/>{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>val<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(mhddata-&gt;<ref refid="structmhd__data_1a347d449bf250c7c0b4dac59fe4f3b910" kindref="member">type</ref>)<sp/>{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="mhd_8h_1ab21aab0cb19764b60e853c7d2c0a4316a34cf1c1aa3179513ab9dd550ddb1ecba" kindref="member">mhd_type_stat</ref>:</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val<sp/>=<sp/>mhddata-&gt;<ref refid="structmhd__data_1a50864ab0f1a446927c5040d00b20e0e2" kindref="member">stat</ref>.<ref refid="structmhd__stat__data_1a3fae4550f2667c0cf85a5780b1fe5116" kindref="member">mmode</ref>;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="mhd_8h_1ab21aab0cb19764b60e853c7d2c0a4316aec758ad0eb94e9ba0ae3761ca4952a5d" kindref="member">mhd_type_nonstat</ref>:</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val<sp/>=<sp/>mhddata-&gt;<ref refid="structmhd__data_1a9c9b4bde21bd0cb33a2b41d32d975ebf" kindref="member">nonstat</ref>.<ref refid="structmhd__nonstat__data_1a5dafbcdc790914593c4e9fc4962dbbc3" kindref="member">mmode</ref>;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>val;</highlight></codeline>
<codeline lineno="321"><highlight class="normal">}</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="330" refid="mhd_8c_1ac57282a671e54f54abc977855a34bbdf" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref>*<sp/><ref refid="mhd_8c_1ac57282a671e54f54abc977855a34bbdf" kindref="member">mhd_get_amplitude</ref>(<ref refid="structmhd__data" kindref="compound">mhd_data</ref>*<sp/>mhddata)<sp/>{</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref>*<sp/>val<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(mhddata-&gt;<ref refid="structmhd__data_1a347d449bf250c7c0b4dac59fe4f3b910" kindref="member">type</ref>)<sp/>{</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="mhd_8h_1ab21aab0cb19764b60e853c7d2c0a4316a34cf1c1aa3179513ab9dd550ddb1ecba" kindref="member">mhd_type_stat</ref>:</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val<sp/>=<sp/>mhddata-&gt;<ref refid="structmhd__data_1a50864ab0f1a446927c5040d00b20e0e2" kindref="member">stat</ref>.<ref refid="structmhd__stat__data_1a319076f998df3295d6f1e56444ba50f4" kindref="member">amplitude_nm</ref>;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="mhd_8h_1ab21aab0cb19764b60e853c7d2c0a4316aec758ad0eb94e9ba0ae3761ca4952a5d" kindref="member">mhd_type_nonstat</ref>:</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val<sp/>=<sp/>mhddata-&gt;<ref refid="structmhd__data_1a9c9b4bde21bd0cb33a2b41d32d975ebf" kindref="member">nonstat</ref>.<ref refid="structmhd__nonstat__data_1aaec719d95195ee9d327d95194cfcd078" kindref="member">amplitude_nm</ref>;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>val;</highlight></codeline>
<codeline lineno="341"><highlight class="normal">}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="350" refid="mhd_8c_1a7833912413a8d4c6ea74e0de2b9417f4" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref>*<sp/><ref refid="mhd_8c_1a7833912413a8d4c6ea74e0de2b9417f4" kindref="member">mhd_get_frequency</ref>(<ref refid="structmhd__data" kindref="compound">mhd_data</ref>*<sp/>mhddata)<sp/>{</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref>*<sp/>val<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(mhddata-&gt;<ref refid="structmhd__data_1a347d449bf250c7c0b4dac59fe4f3b910" kindref="member">type</ref>)<sp/>{</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="mhd_8h_1ab21aab0cb19764b60e853c7d2c0a4316a34cf1c1aa3179513ab9dd550ddb1ecba" kindref="member">mhd_type_stat</ref>:</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val<sp/>=<sp/>mhddata-&gt;<ref refid="structmhd__data_1a50864ab0f1a446927c5040d00b20e0e2" kindref="member">stat</ref>.<ref refid="structmhd__stat__data_1ae8ed0c8228b3e73796baf4a7a7b10ba1" kindref="member">omega_nm</ref>;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="mhd_8h_1ab21aab0cb19764b60e853c7d2c0a4316aec758ad0eb94e9ba0ae3761ca4952a5d" kindref="member">mhd_type_nonstat</ref>:</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val<sp/>=<sp/>mhddata-&gt;<ref refid="structmhd__data_1a9c9b4bde21bd0cb33a2b41d32d975ebf" kindref="member">nonstat</ref>.<ref refid="structmhd__nonstat__data_1a1e56e78b62cbef5261981f2619acd8ba" kindref="member">omega_nm</ref>;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>val;</highlight></codeline>
<codeline lineno="361"><highlight class="normal">}</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="370" refid="mhd_8c_1ad3cb7cc97f032144f13c0748856482f9" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref>*<sp/><ref refid="mhd_8c_1ad3cb7cc97f032144f13c0748856482f9" kindref="member">mhd_get_phase</ref>(<ref refid="structmhd__data" kindref="compound">mhd_data</ref>*<sp/>mhddata)<sp/>{</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref>*<sp/>val<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(mhddata-&gt;<ref refid="structmhd__data_1a347d449bf250c7c0b4dac59fe4f3b910" kindref="member">type</ref>)<sp/>{</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="mhd_8h_1ab21aab0cb19764b60e853c7d2c0a4316a34cf1c1aa3179513ab9dd550ddb1ecba" kindref="member">mhd_type_stat</ref>:</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val<sp/>=<sp/>mhddata-&gt;<ref refid="structmhd__data_1a50864ab0f1a446927c5040d00b20e0e2" kindref="member">stat</ref>.<ref refid="structmhd__stat__data_1a64bba4355a78ae84d39aed87289b867a" kindref="member">phase_nm</ref>;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="mhd_8h_1ab21aab0cb19764b60e853c7d2c0a4316aec758ad0eb94e9ba0ae3761ca4952a5d" kindref="member">mhd_type_nonstat</ref>:</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val<sp/>=<sp/>mhddata-&gt;<ref refid="structmhd__data_1a9c9b4bde21bd0cb33a2b41d32d975ebf" kindref="member">nonstat</ref>.<ref refid="structmhd__nonstat__data_1a6bae9ebdba077b5820fd1da3b02abf5b" kindref="member">phase_nm</ref>;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>val;</highlight></codeline>
<codeline lineno="381"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="mhd.c"/>
  </compounddef>
</doxygen>
