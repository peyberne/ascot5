<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="plasma_8h" kind="file" language="C++">
    <compoundname>plasma.h</compoundname>
    <includes refid="ascot5_8h" local="yes">ascot5.h</includes>
    <includes refid="error_8h" local="yes">error.h</includes>
    <includes refid="plasma__1D_8h" local="yes">plasma/plasma_1D.h</includes>
    <includes refid="plasma__1Dt_8h" local="yes">plasma/plasma_1Dt.h</includes>
    <includes refid="plasma__1DS_8h" local="yes">plasma/plasma_1DS.h</includes>
    <includedby refid="ascot5__main_8c" local="yes">ascot5_main.c</includedby>
    <includedby refid="bbnbi5_8c" local="yes">bbnbi5.c</includedby>
    <includedby refid="endcond_8c" local="yes">endcond.c</includedby>
    <includedby refid="hdf5__plasma_8c" local="yes">hdf5io/hdf5_plasma.c</includedby>
    <includedby refid="hdf5__plasma_8h" local="yes">hdf5io/hdf5_plasma.h</includedby>
    <includedby refid="libascot_8c" local="yes">libascot.c</includedby>
    <includedby refid="nbi_8c" local="yes">nbi.c</includedby>
    <includedby refid="nbi_8h" local="yes">nbi.h</includedby>
    <includedby refid="plasma_8c" local="yes">plasma.c</includedby>
    <includedby refid="atomic_8c" local="yes">simulate/atomic.c</includedby>
    <includedby refid="atomic_8h" local="yes">simulate/atomic.h</includedby>
    <includedby refid="mccc_8h" local="yes">simulate/mccc/mccc.h</includedby>
    <includedby refid="mccc__fo__euler_8c" local="yes">simulate/mccc/mccc_fo_euler.c</includedby>
    <includedby refid="mccc__gc__euler_8c" local="yes">simulate/mccc/mccc_gc_euler.c</includedby>
    <includedby refid="mccc__gc__milstein_8c" local="yes">simulate/mccc/mccc_gc_milstein.c</includedby>
    <includedby refid="simulate__fo__fixed_8c" local="yes">simulate/simulate_fo_fixed.c</includedby>
    <includedby refid="simulate__gc__adaptive_8c" local="yes">simulate/simulate_gc_adaptive.c</includedby>
    <includedby refid="simulate__gc__fixed_8c" local="yes">simulate/simulate_gc_fixed.c</includedby>
    <includedby refid="simulate_8c" local="yes">simulate.c</includedby>
    <includedby refid="simulate_8h" local="yes">simulate.h</includedby>
    <incdepgraph>
      <node id="1">
        <label>plasma.h</label>
        <link refid="plasma_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>../spline/interp.h</label>
        <link refid="interp_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>plasma/plasma_1DS.h</label>
        <link refid="plasma__1DS_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>omp.h</label>
      </node>
      <node id="9">
        <label>plasma/plasma_1Dt.h</label>
        <link refid="plasma__1Dt_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>error.h</label>
        <link refid="error_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>plasma/plasma_1D.h</label>
        <link refid="plasma__1D_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>time.h</label>
      </node>
      <node id="6">
        <label>math.h</label>
        <link refid="math_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>stdio.h</label>
      </node>
      <node id="2">
        <label>ascot5.h</label>
        <link refid="ascot5_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="25">
        <label>simulate/simulate_ml_adaptive.c</label>
        <link refid="simulate__ml__adaptive_8c"/>
      </node>
      <node id="35">
        <label>simulate/simulate_ml_adaptive.h</label>
        <link refid="simulate__ml__adaptive_8h"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>plasma.c</label>
        <link refid="plasma_8c"/>
      </node>
      <node id="1">
        <label>plasma.h</label>
        <link refid="plasma_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>diag.c</label>
        <link refid="diag_8c"/>
      </node>
      <node id="26">
        <label>simulate.c</label>
        <link refid="simulate_8c"/>
      </node>
      <node id="13">
        <label>simulate.h</label>
        <link refid="simulate_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>simulate/simulate_fo_fixed.c</label>
        <link refid="simulate__fo__fixed_8c"/>
      </node>
      <node id="32">
        <label>simulate/simulate_fo_fixed.h</label>
        <link refid="simulate__fo__fixed_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>simulate/simulate_gc_fixed.c</label>
        <link refid="simulate__gc__fixed_8c"/>
      </node>
      <node id="2">
        <label>ascot5_main.c</label>
        <link refid="ascot5__main_8c"/>
      </node>
      <node id="34">
        <label>simulate/simulate_gc_fixed.h</label>
        <link refid="simulate__gc__fixed_8h"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>ascot5_main.h</label>
        <link refid="ascot5__main_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>endcond.c</label>
        <link refid="endcond_8c"/>
      </node>
      <node id="20">
        <label>endcond.h</label>
        <link refid="endcond_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>simulate/mccc/mccc.c</label>
        <link refid="mccc_8c"/>
      </node>
      <node id="39">
        <label>simulate/mccc/mccc.h</label>
        <link refid="mccc_8h"/>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>simulate/atomic.c</label>
        <link refid="atomic_8c"/>
      </node>
      <node id="38">
        <label>simulate/atomic.h</label>
        <link refid="atomic_8h"/>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>afsi.c</label>
        <link refid="afsi_8c"/>
      </node>
      <node id="15">
        <label>afsi.h</label>
        <link refid="afsi_8h_source"/>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>nbi.c</label>
        <link refid="nbi_8c"/>
      </node>
      <node id="10">
        <label>nbi.h</label>
        <link refid="nbi_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>diag/diag_orb.c</label>
        <link refid="diag__orb_8c"/>
      </node>
      <node id="5">
        <label>hdf5io/hdf5_plasma.c</label>
        <link refid="hdf5__plasma_8c"/>
      </node>
      <node id="6">
        <label>hdf5io/hdf5_plasma.h</label>
        <link refid="hdf5__plasma_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>simulate/mccc/mccc_gc_milstein.c</label>
        <link refid="mccc__gc__milstein_8c"/>
      </node>
      <node id="21">
        <label>hdf5io/hdf5_options.c</label>
        <link refid="hdf5__options_8c"/>
      </node>
      <node id="28">
        <label>hdf5io/hdf5_options.h</label>
        <link refid="hdf5__options_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>hdf5io/hdf5_orbit.c</label>
        <link refid="hdf5__orbit_8c"/>
      </node>
      <node id="23">
        <label>simulate/simulate_gc_adaptive.c</label>
        <link refid="simulate__gc__adaptive_8c"/>
      </node>
      <node id="33">
        <label>simulate/simulate_gc_adaptive.h</label>
        <link refid="simulate__gc__adaptive_8h"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>simulate/mccc/mccc_fo_euler.c</label>
        <link refid="mccc__fo__euler_8c"/>
      </node>
      <node id="30">
        <label>mpi_interface.c</label>
        <link refid="mpi__interface_8c"/>
      </node>
      <node id="31">
        <label>mpi_interface.h</label>
        <link refid="mpi__interface_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>libascot.c</label>
        <link refid="libascot_8c"/>
      </node>
      <node id="7">
        <label>hdf5_interface.c</label>
        <link refid="hdf5__interface_8c"/>
      </node>
      <node id="27">
        <label>hdf5_interface.h</label>
        <link refid="hdf5__interface_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>diag/diag_transcoef.c</label>
        <link refid="diag__transcoef_8c"/>
      </node>
      <node id="41">
        <label>simulate/mccc/mccc_coefs.h</label>
        <link refid="mccc__coefs_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>bbnbi5.c</label>
        <link refid="bbnbi5_8c"/>
      </node>
      <node id="43">
        <label>simulate/mccc/mccc_gc_euler.c</label>
        <link refid="mccc__gc__euler_8c"/>
      </node>
      <node id="11">
        <label>hdf5io/hdf5_nbi.c</label>
        <link refid="hdf5__nbi_8c"/>
      </node>
      <node id="12">
        <label>hdf5io/hdf5_nbi.h</label>
        <link refid="hdf5__nbi_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structplasma__offload__data" prot="public">plasma_offload_data</innerclass>
    <innerclass refid="structplasma__data" prot="public">plasma_data</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="plasma_8h_1aeac371b8350c40fe94429c0e2167df63" prot="public" static="no" strong="no">
        <type></type>
        <name>plasma_type</name>
        <enumvalue id="plasma_8h_1aeac371b8350c40fe94429c0e2167df63a54c2babdad11cbb4387edd311a33cdd9" prot="public">
          <name>plasma_type_1D</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Linear-interpolated 1D plasma data </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="plasma_8h_1aeac371b8350c40fe94429c0e2167df63a94db976c67134607880fc4b4dd7c7c83" prot="public">
          <name>plasma_type_1Dt</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Linear-interpolated time-dependent 1D plasma data </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="plasma_8h_1aeac371b8350c40fe94429c0e2167df63a9deee8c3bdb6207008fc838b1ddaed74" prot="public">
          <name>plasma_type_1DS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Spline-interpolated 1D plasma data </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Plasma data types. </para>
        </briefdescription>
        <detaileddescription>
<para>Plasma data types are used in the plassma interface (<ref refid="plasma_8c" kindref="compound">plasma.c</ref>) to direct function calls to correct plasma data instances. Each plasma data instance must have a corresponding type. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="plasma.h" line="24" column="1" bodyfile="plasma.h" bodystart="24" bodyend="28"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="plasma_8h_1a4bbd16c44a3b14a2c780c7ccbdad9740" prot="public" static="no">
        <type>enum <ref refid="plasma_8h_1aeac371b8350c40fe94429c0e2167df63" kindref="member">plasma_type</ref></type>
        <definition>typedef enum plasma_type plasma_type</definition>
        <argsstring></argsstring>
        <name>plasma_type</name>
        <briefdescription>
<para>Plasma data types. </para>
        </briefdescription>
        <detaileddescription>
<para>Plasma data types are used in the plassma interface (<ref refid="plasma_8c" kindref="compound">plasma.c</ref>) to direct function calls to correct plasma data instances. Each plasma data instance must have a corresponding type. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="plasma.h" line="28" column="13"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="plasma_8h_1aa4b07a053504e5ae77ee0ed80338af05" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int plasma_init_offload</definition>
        <argsstring>(plasma_offload_data *offload_data, real **offload_array)</argsstring>
        <name>plasma_init_offload</name>
        <param>
          <type><ref refid="structplasma__offload__data" kindref="compound">plasma_offload_data</ref> *</type>
          <declname>offload_data</declname>
        </param>
        <param>
          <type><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref> **</type>
          <declname>offload_array</declname>
        </param>
        <briefdescription>
<para>Load plasma data and prepare parameters. </para>
        </briefdescription>
        <detaileddescription>
<para>This function fills the relevant plasma offload struct with parameters and allocates and fills the offload array. Sets offload array length in the offload struct.</para>
<para>The offload data has to have a type when this function is called as it should be set when the offload data is constructed from inputs.</para>
<para>This function is host only.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>offload_data</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to offload data struct </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>offload_array</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to pointer to offload array</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>zero if initialization succeeded </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="plasma.h" line="64" column="5" bodyfile="plasma.c" bodystart="50" bodyend="90" declfile="plasma.h" declline="64" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="plasma_8h_1afe8dc1604a293c321772d655d26869c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void plasma_free_offload</definition>
        <argsstring>(plasma_offload_data *offload_data, real **offload_array)</argsstring>
        <name>plasma_free_offload</name>
        <param>
          <type><ref refid="structplasma__offload__data" kindref="compound">plasma_offload_data</ref> *</type>
          <declname>offload_data</declname>
        </param>
        <param>
          <type><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref> **</type>
          <declname>offload_array</declname>
        </param>
        <briefdescription>
<para>Free offload array and reset parameters. </para>
        </briefdescription>
        <detaileddescription>
<para>This function deallocates the offload_array.</para>
<para>This function is host only.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>offload_data</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to offload data struct </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>offload_array</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to pointer to offload array </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="plasma.h" line="66" column="6" bodyfile="plasma.c" bodystart="102" bodyend="120" declfile="plasma.h" declline="66" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="plasma_8h_1a4ae2ba9f17b78348b9203d2b3ecb44fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int plasma_init</definition>
        <argsstring>(plasma_data *plasma_data, plasma_offload_data *offload_data, real *offload_array)</argsstring>
        <name>plasma_init</name>
        <param>
          <type><ref refid="structplasma__data" kindref="compound">plasma_data</ref> *</type>
          <declname>plasma_data</declname>
          <defname>pls_data</defname>
        </param>
        <param>
          <type><ref refid="structplasma__offload__data" kindref="compound">plasma_offload_data</ref> *</type>
          <declname>offload_data</declname>
        </param>
        <param>
          <type><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref> *</type>
          <declname>offload_array</declname>
        </param>
        <briefdescription>
<para>Initialize plasma data struct on target. </para>
        </briefdescription>
        <detaileddescription>
<para>This function copies the plasma parameters from the offload struct to the struct on target and sets the plasma data pointers to correct offsets in the offload array.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pls_data</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to data struct on target </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>offload_data</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to offload data struct </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>offload_array</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to offload array</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>zero if initialization succeeded </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="plasma.h" line="70" column="5" bodyfile="plasma.c" bodystart="135" bodyend="163" declfile="plasma.h" declline="70" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="plasma_8h_1a8e3cad1f838f6f1d08ef7a468921c9b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="error_8h_1a3bca029fa2975420f00b89f3cb38872e" kindref="member">a5err</ref></type>
        <definition>a5err plasma_eval_temp</definition>
        <argsstring>(real *temp, real rho, real r, real phi, real z, real t, int species, plasma_data *pls_data)</argsstring>
        <name>plasma_eval_temp</name>
        <param>
          <type><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref> *</type>
          <declname>temp</declname>
        </param>
        <param>
          <type><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref></type>
          <declname>rho</declname>
        </param>
        <param>
          <type><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref></type>
          <declname>r</declname>
        </param>
        <param>
          <type><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref></type>
          <declname>phi</declname>
        </param>
        <param>
          <type><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref></type>
          <declname>z</declname>
        </param>
        <param>
          <type><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref></type>
          <declname>t</declname>
        </param>
        <param>
          <type>int</type>
          <declname>species</declname>
        </param>
        <param>
          <type><ref refid="structplasma__data" kindref="compound">plasma_data</ref> *</type>
          <declname>pls_data</declname>
        </param>
        <briefdescription>
<para>Evaluate plasma temperature. </para>
        </briefdescription>
        <detaileddescription>
<para>This function evaluates the temperature of a given plasma species at the given position.</para>
<para>This is a SIMD function.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>temp</parametername>
</parameternamelist>
<parameterdescription>
<para>array where evaluated temperature [J] is stored </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rho</parametername>
</parameternamelist>
<parameterdescription>
<para>normalized poloidal flux coordinate </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>r</parametername>
</parameternamelist>
<parameterdescription>
<para>R-coordinate [m] </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>phi</parametername>
</parameternamelist>
<parameterdescription>
<para>phi-coordinate [rad] </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>z</parametername>
</parameternamelist>
<parameterdescription>
<para>z-coordinate [m] </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>time coordinate [s] </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>species</parametername>
</parameternamelist>
<parameterdescription>
<para>index of plasma species, 1 refers to electrons </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pls_data</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to plasma data struct</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Non-zero a5err value if evaluation failed, zero otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="plasma.h" line="73" column="7" bodyfile="plasma.c" bodystart="184" bodyend="211" declfile="plasma.h" declline="73" declcolumn="7"/>
      </memberdef>
      <memberdef kind="function" id="plasma_8h_1aee8e5a6151d43bcdb49e06163a9a5197" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="error_8h_1a3bca029fa2975420f00b89f3cb38872e" kindref="member">a5err</ref></type>
        <definition>a5err plasma_eval_dens</definition>
        <argsstring>(real *dens, real rho, real r, real phi, real z, real t, int species, plasma_data *pls_data)</argsstring>
        <name>plasma_eval_dens</name>
        <param>
          <type><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref> *</type>
          <declname>dens</declname>
        </param>
        <param>
          <type><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref></type>
          <declname>rho</declname>
        </param>
        <param>
          <type><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref></type>
          <declname>r</declname>
        </param>
        <param>
          <type><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref></type>
          <declname>phi</declname>
        </param>
        <param>
          <type><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref></type>
          <declname>z</declname>
        </param>
        <param>
          <type><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref></type>
          <declname>t</declname>
        </param>
        <param>
          <type>int</type>
          <declname>species</declname>
        </param>
        <param>
          <type><ref refid="structplasma__data" kindref="compound">plasma_data</ref> *</type>
          <declname>pls_data</declname>
        </param>
        <briefdescription>
<para>Evaluate plasma density. </para>
        </briefdescription>
        <detaileddescription>
<para>This function evaluates the density of a plasma species at the given radial coordinate.</para>
<para>This is a SIMD function.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dens</parametername>
</parameternamelist>
<parameterdescription>
<para>array where evaluated density will be stored </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rho</parametername>
</parameternamelist>
<parameterdescription>
<para>normalized poloidal flux coordinate </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>r</parametername>
</parameternamelist>
<parameterdescription>
<para>R-coordinate [m] </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>phi</parametername>
</parameternamelist>
<parameterdescription>
<para>phi-coordinate [rad] </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>z</parametername>
</parameternamelist>
<parameterdescription>
<para>z-coordinate [m] </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>time coordinate [s] </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>species</parametername>
</parameternamelist>
<parameterdescription>
<para>index of plasma species, 1 refers to electrons </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pls_data</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to plasma data struct</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Non-zero a5err value if evaluation failed, zero otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="plasma.h" line="76" column="7" bodyfile="plasma.c" bodystart="232" bodyend="259" declfile="plasma.h" declline="76" declcolumn="7"/>
      </memberdef>
      <memberdef kind="function" id="plasma_8h_1abc2888177c42272b418317fa5dddb23a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="error_8h_1a3bca029fa2975420f00b89f3cb38872e" kindref="member">a5err</ref></type>
        <definition>a5err plasma_eval_densandtemp</definition>
        <argsstring>(real *dens, real *temp, real rho, real r, real phi, real z, real t, plasma_data *pls_data)</argsstring>
        <name>plasma_eval_densandtemp</name>
        <param>
          <type><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref> *</type>
          <declname>dens</declname>
        </param>
        <param>
          <type><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref> *</type>
          <declname>temp</declname>
        </param>
        <param>
          <type><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref></type>
          <declname>rho</declname>
        </param>
        <param>
          <type><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref></type>
          <declname>r</declname>
        </param>
        <param>
          <type><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref></type>
          <declname>phi</declname>
        </param>
        <param>
          <type><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref></type>
          <declname>z</declname>
        </param>
        <param>
          <type><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref></type>
          <declname>t</declname>
        </param>
        <param>
          <type><ref refid="structplasma__data" kindref="compound">plasma_data</ref> *</type>
          <declname>pls_data</declname>
        </param>
        <briefdescription>
<para>Evaluate plasma density and temperature for all species. </para>
        </briefdescription>
        <detaileddescription>
<para>This function evaluates the density and temperature of all plasma species at the given radial coordinate.</para>
<para>This is a SIMD function.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dens</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer where density [m^-3] will be stored </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>temp</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer where temperature [J] will be stored </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rho</parametername>
</parameternamelist>
<parameterdescription>
<para>normalized poloidal flux coordinate </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>r</parametername>
</parameternamelist>
<parameterdescription>
<para>R-coordinate [m] </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>phi</parametername>
</parameternamelist>
<parameterdescription>
<para>phi-coordinate [rad] </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>z</parametername>
</parameternamelist>
<parameterdescription>
<para>z-coordinate [m] </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>time coordinate [s] </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pls_data</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to plasma data struct</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Non-zero a5err value if evaluation failed, zero otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="plasma.h" line="79" column="7" bodyfile="plasma.c" bodystart="280" bodyend="317" declfile="plasma.h" declline="79" declcolumn="7"/>
      </memberdef>
      <memberdef kind="function" id="plasma_8h_1a1e6c6d47aaf86678b5d8ef6a1b8764ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int plasma_get_n_species</definition>
        <argsstring>(plasma_data *pls_data)</argsstring>
        <name>plasma_get_n_species</name>
        <param>
          <type><ref refid="structplasma__data" kindref="compound">plasma_data</ref> *</type>
          <declname>pls_data</declname>
        </param>
        <briefdescription>
<para>Get the number of plasma species. </para>
        </briefdescription>
        <detaileddescription>
<para>Retrieve the number of how many plasma species the data contains. The number includes electrons.</para>
<para>This is a SIMD function.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pls_data</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to plasma data struct</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The number of plasma species </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="plasma.h" line="83" column="5" bodyfile="plasma.c" bodystart="331" bodyend="348" declfile="plasma.h" declline="83" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="plasma_8h_1a638bb07450c6fdded8958a50b79e89f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref> *</type>
        <definition>const real* plasma_get_species_mass</definition>
        <argsstring>(plasma_data *pls_data)</argsstring>
        <name>plasma_get_species_mass</name>
        <param>
          <type><ref refid="structplasma__data" kindref="compound">plasma_data</ref> *</type>
          <declname>pls_data</declname>
        </param>
        <briefdescription>
<para>Get mass of all plasma species. </para>
        </briefdescription>
        <detaileddescription>
<para>Retrieve species&apos; mass.</para>
<para>This is a SIMD function.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pls_data</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to plasma data struct</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pointer to array containing the requested mass values [kg] </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="plasma.h" line="85" column="12" bodyfile="plasma.c" bodystart="361" bodyend="378" declfile="plasma.h" declline="85" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="plasma_8h_1a9120466e588595254ee1bbd2c2b95c0c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref> *</type>
        <definition>const real* plasma_get_species_charge</definition>
        <argsstring>(plasma_data *pls_data)</argsstring>
        <name>plasma_get_species_charge</name>
        <param>
          <type><ref refid="structplasma__data" kindref="compound">plasma_data</ref> *</type>
          <declname>pls_data</declname>
        </param>
        <briefdescription>
<para>Get charge of all plasma species. </para>
        </briefdescription>
        <detaileddescription>
<para>Retrieve species&apos; charge.</para>
<para>This is a SIMD function.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pls_data</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to plasma data struct</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pointer to array containing the requested charge values [C] </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="plasma.h" line="87" column="12" bodyfile="plasma.c" bodystart="391" bodyend="408" declfile="plasma.h" declline="87" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="plasma_8h_1ab153d81eda7d78db2944b5463c53518d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const int *</type>
        <definition>const int* plasma_get_species_znum</definition>
        <argsstring>(plasma_data *pls_data)</argsstring>
        <name>plasma_get_species_znum</name>
        <param>
          <type><ref refid="structplasma__data" kindref="compound">plasma_data</ref> *</type>
          <declname>pls_data</declname>
        </param>
        <briefdescription>
<para>Get charge number of ion species. </para>
        </briefdescription>
        <detaileddescription>
<para>This is a SIMD function.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pls_data</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to plasma data struct</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pointer to array containing the charge numbers </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="plasma.h" line="89" column="11" bodyfile="plasma.c" bodystart="419" bodyend="436" declfile="plasma.h" declline="89" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="plasma_8h_1a144b6696944d31e7c187033341634d1b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const int *</type>
        <definition>const int* plasma_get_species_anum</definition>
        <argsstring>(plasma_data *pls_data)</argsstring>
        <name>plasma_get_species_anum</name>
        <param>
          <type><ref refid="structplasma__data" kindref="compound">plasma_data</ref> *</type>
          <declname>pls_data</declname>
        </param>
        <briefdescription>
<para>Get atomic mass number of ion species. </para>
        </briefdescription>
        <detaileddescription>
<para>This is a SIMD function.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pls_data</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to plasma data struct</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pointer to array containing the atomic mass numbers </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="plasma.h" line="91" column="11" bodyfile="plasma.c" bodystart="447" bodyend="464" declfile="plasma.h" declline="91" declcolumn="11"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Header file for <ref refid="plasma_8c" kindref="compound">plasma.c</ref>. </para>
    </briefdescription>
    <detaileddescription>
<para>Contains a list declaring all plasma data, and declaration of <ref refid="structplasma__offload__data" kindref="compound">plasma_offload_data</ref> and <ref refid="structplasma__data" kindref="compound">plasma_data</ref> structs. </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>PLASMA_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PLASMA_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ascot5_8h" kindref="compound">ascot5.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="error_8h" kindref="compound">error.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="plasma__1D_8h" kindref="compound">plasma/plasma_1D.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="plasma__1Dt_8h" kindref="compound">plasma/plasma_1Dt.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="plasma__1DS_8h" kindref="compound">plasma/plasma_1DS.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="plasma_8h_1aeac371b8350c40fe94429c0e2167df63" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="plasma_8h_1aeac371b8350c40fe94429c0e2167df63" kindref="member">plasma_type</ref><sp/>{</highlight></codeline>
<codeline lineno="25" refid="plasma_8h_1aeac371b8350c40fe94429c0e2167df63a54c2babdad11cbb4387edd311a33cdd9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="plasma_8h_1aeac371b8350c40fe94429c0e2167df63a54c2babdad11cbb4387edd311a33cdd9" kindref="member">plasma_type_1D</ref>,<sp/></highlight></codeline>
<codeline lineno="26" refid="plasma_8h_1aeac371b8350c40fe94429c0e2167df63a94db976c67134607880fc4b4dd7c7c83" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="plasma_8h_1aeac371b8350c40fe94429c0e2167df63a94db976c67134607880fc4b4dd7c7c83" kindref="member">plasma_type_1Dt</ref>,<sp/></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="plasma_8h_1aeac371b8350c40fe94429c0e2167df63a9deee8c3bdb6207008fc838b1ddaed74" kindref="member">plasma_type_1DS</ref><sp/></highlight></codeline>
<codeline lineno="28" refid="plasma_8h_1a4bbd16c44a3b14a2c780c7ccbdad9740" refkind="member"><highlight class="normal">}<sp/><ref refid="plasma_8h_1aeac371b8350c40fe94429c0e2167df63" kindref="member">plasma_type</ref>;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="structplasma__offload__data" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="41" refid="structplasma__offload__data_1a606d83112093cf2266034efc79752058" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="plasma_8h_1aeac371b8350c40fe94429c0e2167df63" kindref="member">plasma_type</ref><sp/><ref refid="structplasma__offload__data_1a606d83112093cf2266034efc79752058" kindref="member">type</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="42" refid="structplasma__offload__data_1a400fcc19a992c82cb9cdfbe3273d8980" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structplasma__1D__offload__data" kindref="compound">plasma_1D_offload_data</ref><sp/><ref refid="structplasma__offload__data_1a400fcc19a992c82cb9cdfbe3273d8980" kindref="member">plasma_1D</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="43" refid="structplasma__offload__data_1a498b2116e000736408f306533ef157d6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structplasma__1Dt__offload__data" kindref="compound">plasma_1Dt_offload_data</ref><sp/><ref refid="structplasma__offload__data_1a498b2116e000736408f306533ef157d6" kindref="member">plasma_1Dt</ref>;<sp/></highlight></codeline>
<codeline lineno="44" refid="structplasma__offload__data_1a078cdf266d24fea6a018ecaa13d70fa7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structplasma__1DS__offload__data" kindref="compound">plasma_1DS_offload_data</ref><sp/><ref refid="structplasma__offload__data_1a078cdf266d24fea6a018ecaa13d70fa7" kindref="member">plasma_1DS</ref>;<sp/></highlight></codeline>
<codeline lineno="45" refid="structplasma__offload__data_1a05b3b7ba22ace0f56aa395ff14f4a25e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structplasma__offload__data_1a05b3b7ba22ace0f56aa395ff14f4a25e" kindref="member">offload_array_length</ref>;<sp/></highlight></codeline>
<codeline lineno="46"><highlight class="normal">}<sp/><ref refid="structplasma__offload__data" kindref="compound">plasma_offload_data</ref>;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="structplasma__data" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="58" refid="structplasma__data_1a90b2329f953ae932f4c8e98308a724bd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="plasma_8h_1aeac371b8350c40fe94429c0e2167df63" kindref="member">plasma_type</ref><sp/><ref refid="structplasma__data_1a90b2329f953ae932f4c8e98308a724bd" kindref="member">type</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="59" refid="structplasma__data_1a4350001b594316a4fc0aef50a72a47fe" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structplasma__1D__data" kindref="compound">plasma_1D_data</ref><sp/><ref refid="structplasma__data_1a4350001b594316a4fc0aef50a72a47fe" kindref="member">plasma_1D</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="60" refid="structplasma__data_1a49257447913ca9b70eb1f59ecca2a389" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structplasma__1Dt__data" kindref="compound">plasma_1Dt_data</ref><sp/><ref refid="structplasma__data_1a49257447913ca9b70eb1f59ecca2a389" kindref="member">plasma_1Dt</ref>;<sp/></highlight></codeline>
<codeline lineno="61" refid="structplasma__data_1a6846ed4e1bf8b34ac17c3d606733146a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structplasma__1DS__data" kindref="compound">plasma_1DS_data</ref><sp/><ref refid="structplasma__data_1a6846ed4e1bf8b34ac17c3d606733146a" kindref="member">plasma_1DS</ref>;<sp/></highlight></codeline>
<codeline lineno="62"><highlight class="normal">}<sp/><ref refid="structplasma__data" kindref="compound">plasma_data</ref>;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="plasma_8h_1aa4b07a053504e5ae77ee0ed80338af05" kindref="member">plasma_init_offload</ref>(<ref refid="structplasma__offload__data" kindref="compound">plasma_offload_data</ref>*<sp/>offload_data,</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref>**<sp/>offload_array);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="plasma_8h_1afe8dc1604a293c321772d655d26869c5" kindref="member">plasma_free_offload</ref>(<ref refid="structplasma__offload__data" kindref="compound">plasma_offload_data</ref>*<sp/>offload_data,</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref>**<sp/>offload_array);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>declare<sp/>target</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="plasma_8h_1a4ae2ba9f17b78348b9203d2b3ecb44fa" kindref="member">plasma_init</ref>(<ref refid="structplasma__data" kindref="compound">plasma_data</ref>*<sp/><ref refid="structplasma__data" kindref="compound">plasma_data</ref>,<sp/><ref refid="structplasma__offload__data" kindref="compound">plasma_offload_data</ref>*<sp/>offload_data,</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref>*<sp/>offload_array);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>declare<sp/>simd<sp/>uniform(pls_data)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><ref refid="error_8h_1a3bca029fa2975420f00b89f3cb38872e" kindref="member">a5err</ref><sp/><ref refid="plasma_8h_1a8e3cad1f838f6f1d08ef7a468921c9b6" kindref="member">plasma_eval_temp</ref>(<ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref>*<sp/>temp,<sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/>rho,<sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/>r,<sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/>phi,<sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/>z,<sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/>t,</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>species,<sp/><ref refid="structplasma__data" kindref="compound">plasma_data</ref>*<sp/>pls_data);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>declare<sp/>simd<sp/>uniform(pls_data)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><ref refid="error_8h_1a3bca029fa2975420f00b89f3cb38872e" kindref="member">a5err</ref><sp/><ref refid="plasma_8h_1aee8e5a6151d43bcdb49e06163a9a5197" kindref="member">plasma_eval_dens</ref>(<ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref>*<sp/>dens,<sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/>rho,<sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/>r,<sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/>phi,<sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/>z,<sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/>t,</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>species,<sp/><ref refid="structplasma__data" kindref="compound">plasma_data</ref>*<sp/>pls_data);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>declare<sp/>simd<sp/>uniform(pls_data)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><ref refid="error_8h_1a3bca029fa2975420f00b89f3cb38872e" kindref="member">a5err</ref><sp/><ref refid="plasma_8h_1abc2888177c42272b418317fa5dddb23a" kindref="member">plasma_eval_densandtemp</ref>(<ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref>*<sp/>dens,<sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref>*<sp/>temp,<sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/>rho,</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/>r,<sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/>phi,<sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/>z,<sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/>t,</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structplasma__data" kindref="compound">plasma_data</ref>*<sp/>pls_data);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>declare<sp/>simd<sp/>uniform(pls_data)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="plasma_8h_1a1e6c6d47aaf86678b5d8ef6a1b8764ae" kindref="member">plasma_get_n_species</ref>(<ref refid="structplasma__data" kindref="compound">plasma_data</ref>*<sp/>pls_data);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>declare<sp/>simd<sp/>uniform(pls_data)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref>*<sp/><ref refid="plasma_8h_1a638bb07450c6fdded8958a50b79e89f5" kindref="member">plasma_get_species_mass</ref>(<ref refid="structplasma__data" kindref="compound">plasma_data</ref>*<sp/>pls_data);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>declare<sp/>simd<sp/>uniform(pls_data)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref>*<sp/><ref refid="plasma_8h_1a9120466e588595254ee1bbd2c2b95c0c" kindref="member">plasma_get_species_charge</ref>(<ref refid="structplasma__data" kindref="compound">plasma_data</ref>*<sp/>pls_data);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>declare<sp/>simd<sp/>uniform(pls_data)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><ref refid="plasma_8h_1ab153d81eda7d78db2944b5463c53518d" kindref="member">plasma_get_species_znum</ref>(<ref refid="structplasma__data" kindref="compound">plasma_data</ref>*<sp/>pls_data);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>declare<sp/>simd<sp/>uniform(pls_data)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><ref refid="plasma_8h_1a144b6696944d31e7c187033341634d1b" kindref="member">plasma_get_species_anum</ref>(<ref refid="structplasma__data" kindref="compound">plasma_data</ref>*<sp/>pls_data);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>end<sp/>declare<sp/>target</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="plasma.h"/>
  </compounddef>
</doxygen>
