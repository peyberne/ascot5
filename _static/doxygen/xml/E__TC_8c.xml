<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="E__TC_8c" kind="file" language="C++">
    <compoundname>E_TC.c</compoundname>
    <includes local="no">stdlib.h</includes>
    <includes refid="ascot5_8h" local="yes">../ascot5.h</includes>
    <includes refid="math_8h" local="yes">../math.h</includes>
    <includes refid="error_8h" local="yes">../error.h</includes>
    <includes refid="print_8h" local="yes">../print.h</includes>
    <includes refid="B__field_8h" local="yes">../B_field.h</includes>
    <includes refid="E__TC_8h" local="yes">E_TC.h</includes>
    <incdepgraph>
      <node id="13">
        <label>../spline/interp.h</label>
        <link refid="interp_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>Bfield/B_GS.h</label>
        <link refid="B__GS_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>stdlib.h</label>
      </node>
      <node id="4">
        <label>omp.h</label>
      </node>
      <node id="10">
        <label>../B_field.h</label>
        <link refid="B__field_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>../error.h</label>
        <link refid="error_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>time.h</label>
      </node>
      <node id="17">
        <label>Bfield/B_TC.h</label>
        <link refid="B__TC_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>../linint/linint.h</label>
        <link refid="linint_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>Bfield/B_2DS.h</label>
        <link refid="B__2DS_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>Efield/E_TC.c</label>
        <link refid="E__TC_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>E_TC.h</label>
        <link refid="E__TC_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>Bfield/B_3DS.h</label>
        <link refid="B__3DS_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>../math.h</label>
        <link refid="math_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>stdio.h</label>
      </node>
      <node id="15">
        <label>Bfield/B_STS.h</label>
        <link refid="B__STS_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>../print.h</label>
        <link refid="print_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>../ascot5.h</label>
        <link refid="ascot5_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="E__TC_8c_1a910f57e6d91b11114c6940f642bf4c9e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int E_TC_init_offload</definition>
        <argsstring>(E_TC_offload_data *offload_data, real **offload_array)</argsstring>
        <name>E_TC_init_offload</name>
        <param>
          <type><ref refid="structE__TC__offload__data" kindref="compound">E_TC_offload_data</ref> *</type>
          <declname>offload_data</declname>
        </param>
        <param>
          <type><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref> **</type>
          <declname>offload_array</declname>
        </param>
        <briefdescription>
<para>Initialize electric field data and check inputs. </para>
        </briefdescription>
        <detaileddescription>
<para>The offload data struct must have the following fields initialized:<itemizedlist>
<listitem><para><ref refid="structE__TC__offload__data_1a13e88c10a2aeefc3f32628422688e627" kindref="member">E_TC_offload_data.Exyz</ref></para>
</listitem></itemizedlist>
</para>
<para>There is nothing left to initialize.</para>
<para>Instead this function only prints values of electric field components as a sanity check.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>offload_data</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to offload data struct </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>offload_array</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to pointer to offload array</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Zero to indicate initialization succeeded </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Efield/E_TC.c" line="33" column="5" bodyfile="Efield/E_TC.c" bodystart="33" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="E__TC_8c_1a2443acc1ee3639848e724992a0901fcf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void E_TC_free_offload</definition>
        <argsstring>(E_TC_offload_data *offload_data, real **offload_array)</argsstring>
        <name>E_TC_free_offload</name>
        <param>
          <type><ref refid="structE__TC__offload__data" kindref="compound">E_TC_offload_data</ref> *</type>
          <declname>offload_data</declname>
        </param>
        <param>
          <type><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref> **</type>
          <declname>offload_array</declname>
        </param>
        <briefdescription>
<para>Free offload array and return null pointer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>offload_data</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to offload data struct </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>offload_array</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to pointer to offload array </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Efield/E_TC.c" line="53" column="6" bodyfile="Efield/E_TC.c" bodystart="53" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="E__TC_8c_1a67b5186f091946675c61f908b721ee05" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void E_TC_init</definition>
        <argsstring>(E_TC_data *Edata, E_TC_offload_data *offload_data, real *offload_array)</argsstring>
        <name>E_TC_init</name>
        <param>
          <type><ref refid="structE__TC__data" kindref="compound">E_TC_data</ref> *</type>
          <declname>Edata</declname>
        </param>
        <param>
          <type><ref refid="structE__TC__offload__data" kindref="compound">E_TC_offload_data</ref> *</type>
          <declname>offload_data</declname>
        </param>
        <param>
          <type><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref> *</type>
          <declname>offload_array</declname>
        </param>
        <briefdescription>
<para>Initialize electric field simulation data. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Edata</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to data struct on target </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>offload_data</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to offload data struct </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>offload_array</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to offload array </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Efield/E_TC.c" line="66" column="6" bodyfile="Efield/E_TC.c" bodystart="66" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="E__TC_8c_1a5dc6d272ab1c6cf04d4e025910c8993e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="error_8h_1a3bca029fa2975420f00b89f3cb38872e" kindref="member">a5err</ref></type>
        <definition>a5err E_TC_eval_E</definition>
        <argsstring>(real E[3], real r, real phi, real z, E_TC_data *Edata, B_field_data *Bdata)</argsstring>
        <name>E_TC_eval_E</name>
        <param>
          <type><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref></type>
          <declname>E</declname>
          <array>[3]</array>
        </param>
        <param>
          <type><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref></type>
          <declname>r</declname>
        </param>
        <param>
          <type><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref></type>
          <declname>phi</declname>
        </param>
        <param>
          <type><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref></type>
          <declname>z</declname>
        </param>
        <param>
          <type><ref refid="structE__TC__data" kindref="compound">E_TC_data</ref> *</type>
          <declname>Edata</declname>
        </param>
        <param>
          <type><ref refid="structB__field__data" kindref="compound">B_field_data</ref> *</type>
          <declname>Bdata</declname>
        </param>
        <briefdescription>
<para>Evaluate electric field. </para>
        </briefdescription>
        <detaileddescription>
<para>Even though this module represents a Cartesian electric field, the returned values are given in cylindrical coordinates.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>E</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to array where electric field values are stored </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>r</parametername>
</parameternamelist>
<parameterdescription>
<para>R coordinate [m] </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>phi</parametername>
</parameternamelist>
<parameterdescription>
<para>phi coordinate [deg] </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>z</parametername>
</parameternamelist>
<parameterdescription>
<para>z coordinate [m] </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Edata</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to magnetic field data struct </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Bdata</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to magnetic field data struct</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Zero to indicate success </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Efield/E_TC.c" line="86" column="7" bodyfile="Efield/E_TC.c" bodystart="86" bodyend="91"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Trivial Cartesian Electric field. </para>
    </briefdescription>
    <detaileddescription>
<para>Electric field that has constant x, y, and z components. Note that this field is defined in Cartesian coordinates and not cylindrical. This field is intended for testing purposes and to act as a dummy input. </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../ascot5.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../math.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../error.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../print.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../B_field.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="E__TC_8h" kindref="compound">E_TC.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="E__TC_8c_1a910f57e6d91b11114c6940f642bf4c9e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="E__TC_8c_1a910f57e6d91b11114c6940f642bf4c9e" kindref="member">E_TC_init_offload</ref>(<ref refid="structE__TC__offload__data" kindref="compound">E_TC_offload_data</ref>*<sp/>offload_data,</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref>**<sp/>offload_array)<sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>no<sp/>initialization</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>offload_data-&gt;<ref refid="structE__TC__offload__data_1ab225a36a37bc7dec829de57cd14dd64d" kindref="member">offload_array_length</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>*offload_array<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="print_8h_1a8520c71eb5db223009e5079e420bc398" kindref="member">print_out</ref>(VERBOSE_IO,<sp/></highlight><highlight class="stringliteral">&quot;\nTrivial<sp/>Cartesian<sp/>electric<sp/>field<sp/>(E_TC)\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="print_8h_1a8520c71eb5db223009e5079e420bc398" kindref="member">print_out</ref>(VERBOSE_IO,<sp/></highlight><highlight class="stringliteral">&quot;E_x<sp/>=<sp/>%le,<sp/>E_y<sp/>=<sp/>%le,<sp/>E_z<sp/>=<sp/>%le\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offload_data-&gt;<ref refid="structE__TC__offload__data_1a13e88c10a2aeefc3f32628422688e627" kindref="member">Exyz</ref>[0],<sp/>offload_data-&gt;<ref refid="structE__TC__offload__data_1a13e88c10a2aeefc3f32628422688e627" kindref="member">Exyz</ref>[1],</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offload_data-&gt;<ref refid="structE__TC__offload__data_1a13e88c10a2aeefc3f32628422688e627" kindref="member">Exyz</ref>[2]);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="45"><highlight class="normal">}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="E__TC_8c_1a2443acc1ee3639848e724992a0901fcf" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="E__TC_8c_1a2443acc1ee3639848e724992a0901fcf" kindref="member">E_TC_free_offload</ref>(<ref refid="structE__TC__offload__data" kindref="compound">E_TC_offload_data</ref>*<sp/>offload_data,</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref>**<sp/>offload_array)<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>free(*offload_array);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>*offload_array<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="57"><highlight class="normal">}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="E__TC_8c_1a67b5186f091946675c61f908b721ee05" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="E__TC_8c_1a67b5186f091946675c61f908b721ee05" kindref="member">E_TC_init</ref>(<ref refid="structE__TC__data" kindref="compound">E_TC_data</ref>*<sp/>Edata,<sp/><ref refid="structE__TC__offload__data" kindref="compound">E_TC_offload_data</ref>*<sp/>offload_data,</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref>*<sp/>offload_array)<sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>Edata-&gt;<ref refid="structE__TC__data_1ad3e45e3df7a1122bd6d2e62b9f284c70" kindref="member">Exyz</ref><sp/>=<sp/>offload_data-&gt;<ref refid="structE__TC__offload__data_1a13e88c10a2aeefc3f32628422688e627" kindref="member">Exyz</ref>;</highlight></codeline>
<codeline lineno="69"><highlight class="normal">}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="86" refid="E__TC_8c_1a5dc6d272ab1c6cf04d4e025910c8993e" refkind="member"><highlight class="normal"><ref refid="error_8h_1a3bca029fa2975420f00b89f3cb38872e" kindref="member">a5err</ref><sp/><ref refid="E__TC_8c_1a5dc6d272ab1c6cf04d4e025910c8993e" kindref="member">E_TC_eval_E</ref>(<ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/>E[3],<sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/>r,<sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/>phi,<sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/>z,<sp/><ref refid="structE__TC__data" kindref="compound">E_TC_data</ref>*<sp/>Edata,</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structB__field__data" kindref="compound">B_field_data</ref>*<sp/>Bdata)<sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="math_8h_1a2926fc9962621a0a75d463e6b43f449d" kindref="member">math_vec_xyz2rpz</ref>(Edata-&gt;<ref refid="structE__TC__data_1ad3e45e3df7a1122bd6d2e62b9f284c70" kindref="member">Exyz</ref>,<sp/>E,<sp/>phi);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="91"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="Efield/E_TC.c"/>
  </compounddef>
</doxygen>
