<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="neutral_8h" kind="file" language="C++">
    <compoundname>neutral.h</compoundname>
    <includes refid="ascot5_8h" local="yes">ascot5.h</includes>
    <includes refid="error_8h" local="yes">error.h</includes>
    <includes refid="N0__1D_8h" local="yes">neutral/N0_1D.h</includes>
    <includes refid="N0__3D_8h" local="yes">neutral/N0_3D.h</includes>
    <includedby refid="hdf5__neutral_8c" local="yes">hdf5io/hdf5_neutral.c</includedby>
    <includedby refid="hdf5__neutral_8h" local="yes">hdf5io/hdf5_neutral.h</includedby>
    <includedby refid="libascot_8c" local="yes">libascot.c</includedby>
    <includedby refid="neutral_8c" local="yes">neutral.c</includedby>
    <includedby refid="atomic_8h" local="yes">simulate/atomic.h</includedby>
    <includedby refid="simulate_8h" local="yes">simulate.h</includedby>
    <incdepgraph>
      <node id="10">
        <label>../spline/interp.h</label>
        <link refid="interp_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>omp.h</label>
      </node>
      <node id="11">
        <label>neutral/N0_3D.h</label>
        <link refid="N0__3D_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>neutral/N0_1D.h</label>
        <link refid="N0__1D_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>neutral.h</label>
        <link refid="neutral_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>error.h</label>
        <link refid="error_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>time.h</label>
      </node>
      <node id="9">
        <label>../linint/linint.h</label>
        <link refid="linint_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>math.h</label>
        <link refid="math_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>stdio.h</label>
      </node>
      <node id="2">
        <label>ascot5.h</label>
        <link refid="ascot5_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="24">
        <label>simulate/simulate_ml_adaptive.c</label>
        <link refid="simulate__ml__adaptive_8c"/>
      </node>
      <node id="34">
        <label>simulate/simulate_ml_adaptive.h</label>
        <link refid="simulate__ml__adaptive_8h"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>diag.c</label>
        <link refid="diag_8c"/>
      </node>
      <node id="25">
        <label>simulate.c</label>
        <link refid="simulate_8c"/>
      </node>
      <node id="10">
        <label>simulate.h</label>
        <link refid="simulate_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>simulate/simulate_fo_fixed.c</label>
        <link refid="simulate__fo__fixed_8c"/>
      </node>
      <node id="31">
        <label>simulate/simulate_fo_fixed.h</label>
        <link refid="simulate__fo__fixed_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>simulate/simulate_gc_fixed.c</label>
        <link refid="simulate__gc__fixed_8c"/>
      </node>
      <node id="13">
        <label>ascot5_main.c</label>
        <link refid="ascot5__main_8c"/>
      </node>
      <node id="33">
        <label>simulate/simulate_gc_fixed.h</label>
        <link refid="simulate__gc__fixed_8h"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>ascot5_main.h</label>
        <link refid="ascot5__main_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>endcond.c</label>
        <link refid="endcond_8c"/>
      </node>
      <node id="20">
        <label>endcond.h</label>
        <link refid="endcond_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>simulate/atomic.c</label>
        <link refid="atomic_8c"/>
      </node>
      <node id="7">
        <label>simulate/atomic.h</label>
        <link refid="atomic_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>afsi.c</label>
        <link refid="afsi_8c"/>
      </node>
      <node id="12">
        <label>afsi.h</label>
        <link refid="afsi_8h_source"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>diag/diag_orb.c</label>
        <link refid="diag__orb_8c"/>
      </node>
      <node id="21">
        <label>hdf5io/hdf5_options.c</label>
        <link refid="hdf5__options_8c"/>
      </node>
      <node id="27">
        <label>hdf5io/hdf5_options.h</label>
        <link refid="hdf5__options_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>hdf5io/hdf5_orbit.c</label>
        <link refid="hdf5__orbit_8c"/>
      </node>
      <node id="22">
        <label>simulate/simulate_gc_adaptive.c</label>
        <link refid="simulate__gc__adaptive_8c"/>
      </node>
      <node id="32">
        <label>simulate/simulate_gc_adaptive.h</label>
        <link refid="simulate__gc__adaptive_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>neutral.c</label>
        <link refid="neutral_8c"/>
      </node>
      <node id="1">
        <label>neutral.h</label>
        <link refid="neutral_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>mpi_interface.c</label>
        <link refid="mpi__interface_8c"/>
      </node>
      <node id="30">
        <label>mpi_interface.h</label>
        <link refid="mpi__interface_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>libascot.c</label>
        <link refid="libascot_8c"/>
      </node>
      <node id="4">
        <label>hdf5_interface.c</label>
        <link refid="hdf5__interface_8c"/>
      </node>
      <node id="26">
        <label>hdf5_interface.h</label>
        <link refid="hdf5__interface_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>hdf5io/hdf5_neutral.c</label>
        <link refid="hdf5__neutral_8c"/>
      </node>
      <node id="3">
        <label>hdf5io/hdf5_neutral.h</label>
        <link refid="hdf5__neutral_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>diag/diag_transcoef.c</label>
        <link refid="diag__transcoef_8c"/>
      </node>
      <node id="15">
        <label>bbnbi5.c</label>
        <link refid="bbnbi5_8c"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structneutral__offload__data" prot="public">neutral_offload_data</innerclass>
    <innerclass refid="structneutral__data" prot="public">neutral_data</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="neutral_8h_1aa0a6ec56822b958a80136b5e4e52f90c" prot="public" static="no" strong="no">
        <type></type>
        <name>neutral_type</name>
        <enumvalue id="neutral_8h_1aa0a6ec56822b958a80136b5e4e52f90ca71babdaf638cb316ce57989acda32004" prot="public">
          <name>neutral_type_1D</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Linearly-interpolated 1D neutral data <linebreak/>
 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="neutral_8h_1aa0a6ec56822b958a80136b5e4e52f90cab6b591d6c341b3e2b98e47008db483db" prot="public">
          <name>neutral_type_3D</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Linearly-interpolated 3D neutral data <linebreak/>
 </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Neutral data types. </para>
        </briefdescription>
        <detaileddescription>
<para>Neutral data types are used in the neutral interface (<ref refid="neutral_8c" kindref="compound">neutral.c</ref>) to direct function calls to correct neutral data instances. Each neutral data instance must have a corresponding type. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="neutral.h" line="23" column="1" bodyfile="neutral.h" bodystart="23" bodyend="26"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="neutral_8h_1ad3ebc1b799e548f325120ce0443a8226" prot="public" static="no">
        <type>enum <ref refid="neutral_8h_1aa0a6ec56822b958a80136b5e4e52f90c" kindref="member">neutral_type</ref></type>
        <definition>typedef enum neutral_type neutral_type</definition>
        <argsstring></argsstring>
        <name>neutral_type</name>
        <briefdescription>
<para>Neutral data types. </para>
        </briefdescription>
        <detaileddescription>
<para>Neutral data types are used in the neutral interface (<ref refid="neutral_8c" kindref="compound">neutral.c</ref>) to direct function calls to correct neutral data instances. Each neutral data instance must have a corresponding type. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="neutral.h" line="26" column="14"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="neutral_8h_1a03b2d5b4210a3fa7c4405c68008ec8a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int neutral_init_offload</definition>
        <argsstring>(neutral_offload_data *offload_data, real **offload_array)</argsstring>
        <name>neutral_init_offload</name>
        <param>
          <type><ref refid="structneutral__offload__data" kindref="compound">neutral_offload_data</ref> *</type>
          <declname>offload_data</declname>
        </param>
        <param>
          <type><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref> **</type>
          <declname>offload_array</declname>
        </param>
        <briefdescription>
<para>Load neutral data and prepare parameters. </para>
        </briefdescription>
        <detaileddescription>
<para>This function fills the relevant neutral offload struct with parameters and allocates and fills the offload array. Sets offload array length in the offload struct.</para>
<para>The offload data has to have a type when this function is called as it should be set when the offload data is constructed from inputs.</para>
<para>This function is host only.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>offload_data</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to offload data struct </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>offload_array</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to pointer to offload array</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Zero if initialization succeeded </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="neutral.h" line="59" column="5" bodyfile="neutral.c" bodystart="41" bodyend="69" declfile="neutral.h" declline="59" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="neutral_8h_1a3e4248e841ffb93d0027aa793eb43c86" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void neutral_free_offload</definition>
        <argsstring>(neutral_offload_data *offload_data, real **offload_array)</argsstring>
        <name>neutral_free_offload</name>
        <param>
          <type><ref refid="structneutral__offload__data" kindref="compound">neutral_offload_data</ref> *</type>
          <declname>offload_data</declname>
        </param>
        <param>
          <type><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref> **</type>
          <declname>offload_array</declname>
        </param>
        <briefdescription>
<para>Free offload array and reset parameters. </para>
        </briefdescription>
        <detaileddescription>
<para>This function deallocates the offload_array.</para>
<para>This function is host only.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>offload_data</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to offload data struct </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>offload_array</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to pointer to offload array </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="neutral.h" line="61" column="6" bodyfile="neutral.c" bodystart="81" bodyend="91" declfile="neutral.h" declline="61" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="neutral_8h_1a7c567226853b113c90c7418cc876dfc7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int neutral_init</definition>
        <argsstring>(neutral_data *ndata, neutral_offload_data *offload_data, real *offload_array)</argsstring>
        <name>neutral_init</name>
        <param>
          <type><ref refid="structneutral__data" kindref="compound">neutral_data</ref> *</type>
          <declname>ndata</declname>
        </param>
        <param>
          <type><ref refid="structneutral__offload__data" kindref="compound">neutral_offload_data</ref> *</type>
          <declname>offload_data</declname>
        </param>
        <param>
          <type><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref> *</type>
          <declname>offload_array</declname>
        </param>
        <briefdescription>
<para>Initialize neutral data struct on target. </para>
        </briefdescription>
        <detaileddescription>
<para>This function copies the neutral data parameters from the offload struct to the struct on target and sets the neutral data pointers to correct offsets in the offload array.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ndata</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to data struct on target </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>offload_data</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to offload data struct </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>offload_array</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to offload array</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Zero if initialization succeeded </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="neutral.h" line="65" column="5" bodyfile="neutral.c" bodystart="106" bodyend="128" declfile="neutral.h" declline="65" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="neutral_8h_1a80fa323ba14c36820f417a28d6536863" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="error_8h_1a3bca029fa2975420f00b89f3cb38872e" kindref="member">a5err</ref></type>
        <definition>a5err neutral_eval_n0</definition>
        <argsstring>(real *n0, real rho, real r, real phi, real z, real t, neutral_data *ndata)</argsstring>
        <name>neutral_eval_n0</name>
        <param>
          <type><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref> *</type>
          <declname>n0</declname>
        </param>
        <param>
          <type><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref></type>
          <declname>rho</declname>
        </param>
        <param>
          <type><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref></type>
          <declname>r</declname>
        </param>
        <param>
          <type><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref></type>
          <declname>phi</declname>
        </param>
        <param>
          <type><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref></type>
          <declname>z</declname>
        </param>
        <param>
          <type><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref></type>
          <declname>t</declname>
        </param>
        <param>
          <type><ref refid="structneutral__data" kindref="compound">neutral_data</ref> *</type>
          <declname>ndata</declname>
        </param>
        <briefdescription>
<para>Evaluate neutral density. </para>
        </briefdescription>
        <detaileddescription>
<para>This function evaluates the neutral density n0 at the given coordinates.</para>
<para>This is a SIMD function.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>n0</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer where neutral density is stored [m^-3] </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rho</parametername>
</parameternamelist>
<parameterdescription>
<para>normalized poloidal flux coordinate </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>r</parametername>
</parameternamelist>
<parameterdescription>
<para>R coordinate [m] </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>phi</parametername>
</parameternamelist>
<parameterdescription>
<para>phi coordinate [deg] </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>z</parametername>
</parameternamelist>
<parameterdescription>
<para>z coordinate [m] </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>time coordinate [s] </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ndata</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to neutral density data struct</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Non-zero a5err value if evaluation failed, zero otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="neutral.h" line="68" column="7" bodyfile="neutral.c" bodystart="147" bodyend="170" declfile="neutral.h" declline="68" declcolumn="7"/>
      </memberdef>
      <memberdef kind="function" id="neutral_8h_1a99a6e411a04051bc6c55ffa5626d662c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="error_8h_1a3bca029fa2975420f00b89f3cb38872e" kindref="member">a5err</ref></type>
        <definition>a5err neutral_eval_t0</definition>
        <argsstring>(real *t0, real rho, real r, real phi, real z, real t, neutral_data *ndata)</argsstring>
        <name>neutral_eval_t0</name>
        <param>
          <type><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref> *</type>
          <declname>t0</declname>
        </param>
        <param>
          <type><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref></type>
          <declname>rho</declname>
        </param>
        <param>
          <type><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref></type>
          <declname>r</declname>
        </param>
        <param>
          <type><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref></type>
          <declname>phi</declname>
        </param>
        <param>
          <type><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref></type>
          <declname>z</declname>
        </param>
        <param>
          <type><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref></type>
          <declname>t</declname>
        </param>
        <param>
          <type><ref refid="structneutral__data" kindref="compound">neutral_data</ref> *</type>
          <declname>ndata</declname>
        </param>
        <briefdescription>
<para>Evaluate neutral temperature. </para>
        </briefdescription>
        <detaileddescription>
<para>This function evaluates the neutral temperature t0 at the given coordinates.</para>
<para>This is a SIMD function.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>t0</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer where neutral temperature is stored [J] </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rho</parametername>
</parameternamelist>
<parameterdescription>
<para>normalized poloidal flux coordinate </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>r</parametername>
</parameternamelist>
<parameterdescription>
<para>R coordinate [m] </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>phi</parametername>
</parameternamelist>
<parameterdescription>
<para>phi coordinate [deg] </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>z</parametername>
</parameternamelist>
<parameterdescription>
<para>z coordinate [m] </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>time coordinate [s] </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ndata</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to neutral temperature data struct</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Non-zero a5err value if evaluation failed, zero otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="neutral.h" line="71" column="7" bodyfile="neutral.c" bodystart="189" bodyend="212" declfile="neutral.h" declline="71" declcolumn="7"/>
      </memberdef>
      <memberdef kind="function" id="neutral_8h_1a102e487e8555f0344b1d717d24b23822" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int neutral_get_n_species</definition>
        <argsstring>(neutral_data *ndata)</argsstring>
        <name>neutral_get_n_species</name>
        <param>
          <type><ref refid="structneutral__data" kindref="compound">neutral_data</ref> *</type>
          <declname>ndata</declname>
        </param>
        <briefdescription>
<para>Get the number of neutral species. </para>
        </briefdescription>
        <detaileddescription>
<para>Retrieve the number of how many neutral species the data contains.</para>
<para>This is a SIMD function.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ndata</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to neutral data struct</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The number of neutral species </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="neutral.h" line="74" column="5" bodyfile="neutral.c" bodystart="225" bodyend="237" declfile="neutral.h" declline="74" declcolumn="5"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Header file for <ref refid="neutral_8c" kindref="compound">neutral.c</ref>. </para>
    </briefdescription>
    <detaileddescription>
<para>Contains a list declaring all neutral_types, and declaration of <ref refid="structneutral__offload__data" kindref="compound">neutral_offload_data</ref> and <ref refid="structneutral__data" kindref="compound">neutral_data</ref> structs. </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>NEUTRAL_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NEUTRAL_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ascot5_8h" kindref="compound">ascot5.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="error_8h" kindref="compound">error.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="N0__1D_8h" kindref="compound">neutral/N0_1D.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="N0__3D_8h" kindref="compound">neutral/N0_3D.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="neutral_8h_1aa0a6ec56822b958a80136b5e4e52f90c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="neutral_8h_1aa0a6ec56822b958a80136b5e4e52f90c" kindref="member">neutral_type</ref><sp/>{</highlight></codeline>
<codeline lineno="24" refid="neutral_8h_1aa0a6ec56822b958a80136b5e4e52f90ca71babdaf638cb316ce57989acda32004" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="neutral_8h_1aa0a6ec56822b958a80136b5e4e52f90ca71babdaf638cb316ce57989acda32004" kindref="member">neutral_type_1D</ref>,<sp/></highlight></codeline>
<codeline lineno="25" refid="neutral_8h_1aa0a6ec56822b958a80136b5e4e52f90cab6b591d6c341b3e2b98e47008db483db" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="neutral_8h_1aa0a6ec56822b958a80136b5e4e52f90cab6b591d6c341b3e2b98e47008db483db" kindref="member">neutral_type_3D</ref>,<sp/></highlight></codeline>
<codeline lineno="26" refid="neutral_8h_1ad3ebc1b799e548f325120ce0443a8226" refkind="member"><highlight class="normal">}<sp/><ref refid="neutral_8h_1aa0a6ec56822b958a80136b5e4e52f90c" kindref="member">neutral_type</ref>;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="structneutral__offload__data" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="38" refid="structneutral__offload__data_1ae80d1f0afe6b39246b3894cda447aa75" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="neutral_8h_1aa0a6ec56822b958a80136b5e4e52f90c" kindref="member">neutral_type</ref><sp/><ref refid="structneutral__offload__data_1ae80d1f0afe6b39246b3894cda447aa75" kindref="member">type</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="39" refid="structneutral__offload__data_1a44ac28149c0eb6e916786e140babf068" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structN0__1D__offload__data" kindref="compound">N0_1D_offload_data</ref><sp/><ref refid="structneutral__offload__data_1a44ac28149c0eb6e916786e140babf068" kindref="member">N01D</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="40" refid="structneutral__offload__data_1aa654cf43d929b914aabf59069acd3bee" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structN0__3D__offload__data" kindref="compound">N0_3D_offload_data</ref><sp/><ref refid="structneutral__offload__data_1aa654cf43d929b914aabf59069acd3bee" kindref="member">N03D</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="41" refid="structneutral__offload__data_1a810393cd7efe91e792a4739ec8d5b07e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structneutral__offload__data_1a810393cd7efe91e792a4739ec8d5b07e" kindref="member">offload_array_length</ref>;<sp/></highlight></codeline>
<codeline lineno="42"><highlight class="normal">}<sp/><ref refid="structneutral__offload__data" kindref="compound">neutral_offload_data</ref>;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="structneutral__data" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="54" refid="structneutral__data_1aa6b9a91bfa93d35b236c0af3d7c7fbd5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="neutral_8h_1aa0a6ec56822b958a80136b5e4e52f90c" kindref="member">neutral_type</ref><sp/><ref refid="structneutral__data_1aa6b9a91bfa93d35b236c0af3d7c7fbd5" kindref="member">type</ref>;<sp/></highlight></codeline>
<codeline lineno="55" refid="structneutral__data_1a6c00de9f2732101edfed6872fbfebf3e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structN0__1D__data" kindref="compound">N0_1D_data</ref><sp/><ref refid="structneutral__data_1a6c00de9f2732101edfed6872fbfebf3e" kindref="member">N01D</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="56" refid="structneutral__data_1aa4c8e6e5abc0e18e6cbe8fdbbcfa93a2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structN0__3D__data" kindref="compound">N0_3D_data</ref><sp/><ref refid="structneutral__data_1aa4c8e6e5abc0e18e6cbe8fdbbcfa93a2" kindref="member">N03D</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="57"><highlight class="normal">}<sp/><ref refid="structneutral__data" kindref="compound">neutral_data</ref>;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="neutral_8h_1a03b2d5b4210a3fa7c4405c68008ec8a9" kindref="member">neutral_init_offload</ref>(<ref refid="structneutral__offload__data" kindref="compound">neutral_offload_data</ref>*<sp/>offload_data,</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref>**<sp/>offload_array);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="neutral_8h_1a3e4248e841ffb93d0027aa793eb43c86" kindref="member">neutral_free_offload</ref>(<ref refid="structneutral__offload__data" kindref="compound">neutral_offload_data</ref>*<sp/>offload_data,</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref>**<sp/>offload_array);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>declare<sp/>target</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="neutral_8h_1a7c567226853b113c90c7418cc876dfc7" kindref="member">neutral_init</ref>(<ref refid="structneutral__data" kindref="compound">neutral_data</ref>*<sp/>ndata,<sp/><ref refid="structneutral__offload__data" kindref="compound">neutral_offload_data</ref>*<sp/>offload_data,</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref>*<sp/>offload_array);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>declare<sp/>simd<sp/>uniform(ndata)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><ref refid="error_8h_1a3bca029fa2975420f00b89f3cb38872e" kindref="member">a5err</ref><sp/><ref refid="neutral_8h_1a80fa323ba14c36820f417a28d6536863" kindref="member">neutral_eval_n0</ref>(<ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref>*<sp/>n0,<sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/>rho,<sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/>r,<sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/>phi,<sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/>z,<sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/>t,</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structneutral__data" kindref="compound">neutral_data</ref>*<sp/>ndata);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>declare<sp/>simd<sp/>uniform(ndata)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><ref refid="error_8h_1a3bca029fa2975420f00b89f3cb38872e" kindref="member">a5err</ref><sp/><ref refid="neutral_8h_1a99a6e411a04051bc6c55ffa5626d662c" kindref="member">neutral_eval_t0</ref>(<ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref>*<sp/>t0,<sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/>rho,<sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/>r,<sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/>phi,<sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/>z,<sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/>t,</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structneutral__data" kindref="compound">neutral_data</ref>*<sp/>ndata);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>declare<sp/>simd<sp/>uniform(ndata)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="neutral_8h_1a102e487e8555f0344b1d717d24b23822" kindref="member">neutral_get_n_species</ref>(<ref refid="structneutral__data" kindref="compound">neutral_data</ref>*<sp/>ndata);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>end<sp/>declare<sp/>target</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="neutral.h"/>
  </compounddef>
</doxygen>
