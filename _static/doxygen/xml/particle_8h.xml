<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="particle_8h" kind="file" language="C++">
    <compoundname>particle.h</compoundname>
    <includes refid="ascot5_8h" local="yes">ascot5.h</includes>
    <includes refid="B__field_8h" local="yes">B_field.h</includes>
    <includes refid="E__field_8h" local="yes">E_field.h</includes>
    <includes refid="error_8h" local="yes">error.h</includes>
    <includedby refid="ascot5__main_8c" local="yes">ascot5_main.c</includedby>
    <includedby refid="bbnbi5_8c" local="yes">bbnbi5.c</includedby>
    <includedby refid="diag__orb_8h" local="yes">diag/diag_orb.h</includedby>
    <includedby refid="diag__transcoef_8c" local="yes">diag/diag_transcoef.c</includedby>
    <includedby refid="diag__transcoef_8h" local="yes">diag/diag_transcoef.h</includedby>
    <includedby refid="dist__5D_8c" local="yes">diag/dist_5D.c</includedby>
    <includedby refid="dist__5D_8h" local="yes">diag/dist_5D.h</includedby>
    <includedby refid="dist__6D_8h" local="yes">diag/dist_6D.h</includedby>
    <includedby refid="dist__com_8c" local="yes">diag/dist_com.c</includedby>
    <includedby refid="dist__com_8h" local="yes">diag/dist_com.h</includedby>
    <includedby refid="dist__rho5D_8c" local="yes">diag/dist_rho5D.c</includedby>
    <includedby refid="dist__rho5D_8h" local="yes">diag/dist_rho5D.h</includedby>
    <includedby refid="dist__rho6D_8h" local="yes">diag/dist_rho6D.h</includedby>
    <includedby refid="diag_8c" local="yes">diag.c</includedby>
    <includedby refid="diag_8h" local="yes">diag.h</includedby>
    <includedby refid="endcond_8c" local="yes">endcond.c</includedby>
    <includedby refid="endcond_8h" local="yes">endcond.h</includedby>
    <includedby refid="hdf5__interface_8h" local="yes">hdf5_interface.h</includedby>
    <includedby refid="hdf5__marker_8c" local="yes">hdf5io/hdf5_marker.c</includedby>
    <includedby refid="hdf5__marker_8h" local="yes">hdf5io/hdf5_marker.h</includedby>
    <includedby refid="hdf5__orbit_8c" local="yes">hdf5io/hdf5_orbit.c</includedby>
    <includedby refid="hdf5__state_8c" local="yes">hdf5io/hdf5_state.c</includedby>
    <includedby refid="hdf5__state_8h" local="yes">hdf5io/hdf5_state.h</includedby>
    <includedby refid="libascot__mem_8c" local="yes">libascot_mem.c</includedby>
    <includedby refid="libascot__mem_8h" local="yes">libascot_mem.h</includedby>
    <includedby refid="mpi__interface_8c" local="yes">mpi_interface.c</includedby>
    <includedby refid="mpi__interface_8h" local="yes">mpi_interface.h</includedby>
    <includedby refid="nbi_8c" local="yes">nbi.c</includedby>
    <includedby refid="nbi_8h" local="yes">nbi.h</includedby>
    <includedby refid="particle_8c" local="yes">particle.c</includedby>
    <includedby refid="atomic_8c" local="yes">simulate/atomic.c</includedby>
    <includedby refid="atomic_8h" local="yes">simulate/atomic.h</includedby>
    <includedby refid="mccc_8h" local="yes">simulate/mccc/mccc.h</includedby>
    <includedby refid="mccc__fo__euler_8c" local="yes">simulate/mccc/mccc_fo_euler.c</includedby>
    <includedby refid="mccc__gc__euler_8c" local="yes">simulate/mccc/mccc_gc_euler.c</includedby>
    <includedby refid="mccc__gc__milstein_8c" local="yes">simulate/mccc/mccc_gc_milstein.c</includedby>
    <includedby refid="simulate__fo__fixed_8c" local="yes">simulate/simulate_fo_fixed.c</includedby>
    <includedby refid="simulate__fo__fixed_8h" local="yes">simulate/simulate_fo_fixed.h</includedby>
    <includedby refid="simulate__gc__adaptive_8c" local="yes">simulate/simulate_gc_adaptive.c</includedby>
    <includedby refid="simulate__gc__adaptive_8h" local="yes">simulate/simulate_gc_adaptive.h</includedby>
    <includedby refid="simulate__gc__fixed_8c" local="yes">simulate/simulate_gc_fixed.c</includedby>
    <includedby refid="simulate__gc__fixed_8h" local="yes">simulate/simulate_gc_fixed.h</includedby>
    <includedby refid="simulate__ml__adaptive_8c" local="yes">simulate/simulate_ml_adaptive.c</includedby>
    <includedby refid="simulate__ml__adaptive_8h" local="yes">simulate/simulate_ml_adaptive.h</includedby>
    <includedby refid="step__fo__vpa_8c" local="yes">simulate/step/step_fo_vpa.c</includedby>
    <includedby refid="step__fo__vpa_8h" local="yes">simulate/step/step_fo_vpa.h</includedby>
    <includedby refid="step__gc__cashkarp_8c" local="yes">simulate/step/step_gc_cashkarp.c</includedby>
    <includedby refid="step__gc__cashkarp_8h" local="yes">simulate/step/step_gc_cashkarp.h</includedby>
    <includedby refid="step__gc__rk4_8c" local="yes">simulate/step/step_gc_rk4.c</includedby>
    <includedby refid="step__gc__rk4_8h" local="yes">simulate/step/step_gc_rk4.h</includedby>
    <includedby refid="step__ml__cashkarp_8c" local="yes">simulate/step/step_ml_cashkarp.c</includedby>
    <includedby refid="step__ml__cashkarp_8h" local="yes">simulate/step/step_ml_cashkarp.h</includedby>
    <includedby refid="simulate_8c" local="yes">simulate.c</includedby>
    <incdepgraph>
      <node id="1">
        <label>particle.h</label>
        <link refid="particle_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>../spline/interp.h</label>
        <link refid="interp_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>Bfield/B_GS.h</label>
        <link refid="B__GS_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>omp.h</label>
      </node>
      <node id="5">
        <label>B_field.h</label>
        <link refid="B__field_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>Efield/E_1DS.h</label>
        <link refid="E__1DS_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>error.h</label>
        <link refid="error_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>E_field.h</label>
        <link refid="E__field_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>time.h</label>
      </node>
      <node id="15">
        <label>Bfield/B_TC.h</label>
        <link refid="B__TC_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>../linint/linint.h</label>
        <link refid="linint_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>Bfield/B_2DS.h</label>
        <link refid="B__2DS_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>Efield/E_TC.h</label>
        <link refid="E__TC_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>Bfield/B_3DS.h</label>
        <link refid="B__3DS_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>math.h</label>
        <link refid="math_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>stdio.h</label>
      </node>
      <node id="13">
        <label>Bfield/B_STS.h</label>
        <link refid="B__STS_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>ascot5.h</label>
        <link refid="ascot5_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="48">
        <label>diag/dist_rho5D.c</label>
        <link refid="dist__rho5D_8c"/>
      </node>
      <node id="26">
        <label>simulate/simulate_ml_adaptive.c</label>
        <link refid="simulate__ml__adaptive_8c"/>
      </node>
      <node id="49">
        <label>diag/dist_rho5D.h</label>
        <link refid="dist__rho5D_8h"/>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>simulate/simulate_ml_adaptive.h</label>
        <link refid="simulate__ml__adaptive_8h"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>diag/dist_5D.c</label>
        <link refid="dist__5D_8c"/>
      </node>
      <node id="41">
        <label>diag/dist_5D.h</label>
        <link refid="dist__5D_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="58">
        <label>particle.c</label>
        <link refid="particle_8c"/>
      </node>
      <node id="6">
        <label>diag.c</label>
        <link refid="diag_8c"/>
      </node>
      <node id="1">
        <label>particle.h</label>
        <link refid="particle_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>diag.h</label>
        <link refid="diag_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>simulate.c</label>
        <link refid="simulate_8c"/>
      </node>
      <node id="16">
        <label>simulate.h</label>
        <link refid="simulate_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>simulate/simulate_fo_fixed.c</label>
        <link refid="simulate__fo__fixed_8c"/>
      </node>
      <node id="32">
        <label>simulate/simulate_fo_fixed.h</label>
        <link refid="simulate__fo__fixed_8h"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="71">
        <label>simulate/step/step_gc_rk4.c</label>
        <link refid="step__gc__rk4_8c"/>
      </node>
      <node id="72">
        <label>simulate/step/step_gc_rk4.h</label>
        <link refid="step__gc__rk4_8h"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>simulate/simulate_gc_fixed.c</label>
        <link refid="simulate__gc__fixed_8c"/>
      </node>
      <node id="2">
        <label>ascot5_main.c</label>
        <link refid="ascot5__main_8c"/>
      </node>
      <node id="34">
        <label>simulate/simulate_gc_fixed.h</label>
        <link refid="simulate__gc__fixed_8h"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>ascot5_main.h</label>
        <link refid="ascot5__main_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>endcond.c</label>
        <link refid="endcond_8c"/>
      </node>
      <node id="22">
        <label>endcond.h</label>
        <link refid="endcond_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="62">
        <label>simulate/mccc/mccc.c</label>
        <link refid="mccc_8c"/>
      </node>
      <node id="61">
        <label>simulate/mccc/mccc.h</label>
        <link refid="mccc_8h"/>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="59">
        <label>simulate/atomic.c</label>
        <link refid="atomic_8c"/>
      </node>
      <node id="60">
        <label>simulate/atomic.h</label>
        <link refid="atomic_8h"/>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="56">
        <label>libascot_mem.c</label>
        <link refid="libascot__mem_8c"/>
      </node>
      <node id="57">
        <label>libascot_mem.h</label>
        <link refid="libascot__mem_8h"/>
        <childnode refid="56" relation="include">
        </childnode>
      </node>
      <node id="52">
        <label>hdf5io/hdf5_marker.c</label>
        <link refid="hdf5__marker_8c"/>
      </node>
      <node id="53">
        <label>hdf5io/hdf5_marker.h</label>
        <link refid="hdf5__marker_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>hdf5io/hdf5_dist.c</label>
        <link refid="hdf5__dist_8c"/>
      </node>
      <node id="43">
        <label>hdf5io/hdf5_dist.h</label>
        <link refid="hdf5__dist_8h_source"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>afsi.c</label>
        <link refid="afsi_8c"/>
      </node>
      <node id="38">
        <label>hdf5io/hdf5_transcoef.c</label>
        <link refid="hdf5__transcoef_8c"/>
      </node>
      <node id="18">
        <label>afsi.h</label>
        <link refid="afsi_8h_source"/>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>nbi.c</label>
        <link refid="nbi_8c"/>
      </node>
      <node id="39">
        <label>hdf5io/hdf5_transcoef.h</label>
        <link refid="hdf5__transcoef_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>nbi.h</label>
        <link refid="nbi_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>diag/diag_orb.c</label>
        <link refid="diag__orb_8c"/>
      </node>
      <node id="4">
        <label>diag/diag_orb.h</label>
        <link refid="diag__orb_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="66">
        <label>simulate/mccc/mccc_gc_milstein.c</label>
        <link refid="mccc__gc__milstein_8c"/>
      </node>
      <node id="8">
        <label>hdf5io/hdf5_options.c</label>
        <link refid="hdf5__options_8c"/>
      </node>
      <node id="30">
        <label>hdf5io/hdf5_options.h</label>
        <link refid="hdf5__options_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>hdf5io/hdf5_orbit.c</label>
        <link refid="hdf5__orbit_8c"/>
      </node>
      <node id="36">
        <label>hdf5io/hdf5_orbit.h</label>
        <link refid="hdf5__orbit_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>simulate/simulate_gc_adaptive.c</label>
        <link refid="simulate__gc__adaptive_8c"/>
      </node>
      <node id="33">
        <label>simulate/simulate_gc_adaptive.h</label>
        <link refid="simulate__gc__adaptive_8h"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="64">
        <label>simulate/mccc/mccc_fo_euler.c</label>
        <link refid="mccc__fo__euler_8c"/>
      </node>
      <node id="9">
        <label>mpi_interface.c</label>
        <link refid="mpi__interface_8c"/>
      </node>
      <node id="10">
        <label>mpi_interface.h</label>
        <link refid="mpi__interface_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>libascot.c</label>
        <link refid="libascot_8c"/>
      </node>
      <node id="15">
        <label>hdf5_interface.c</label>
        <link refid="hdf5__interface_8c"/>
      </node>
      <node id="28">
        <label>hdf5_interface.h</label>
        <link refid="hdf5__interface_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="73">
        <label>simulate/step/step_ml_cashkarp.c</label>
        <link refid="step__ml__cashkarp_8c"/>
      </node>
      <node id="74">
        <label>simulate/step/step_ml_cashkarp.h</label>
        <link refid="step__ml__cashkarp_8h"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>diag/dist_com.c</label>
        <link refid="dist__com_8c"/>
      </node>
      <node id="47">
        <label>diag/dist_com.h</label>
        <link refid="dist__com_8h"/>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>diag/diag_transcoef.c</label>
        <link refid="diag__transcoef_8c"/>
      </node>
      <node id="37">
        <label>diag/diag_transcoef.h</label>
        <link refid="diag__transcoef_8h"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="63">
        <label>simulate/mccc/mccc_coefs.h</label>
        <link refid="mccc__coefs_8h"/>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
      </node>
      <node id="69">
        <label>simulate/step/step_gc_cashkarp.c</label>
        <link refid="step__gc__cashkarp_8c"/>
      </node>
      <node id="70">
        <label>simulate/step/step_gc_cashkarp.h</label>
        <link refid="step__gc__cashkarp_8h_source"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>bbnbi5.c</label>
        <link refid="bbnbi5_8c"/>
      </node>
      <node id="65">
        <label>simulate/mccc/mccc_gc_euler.c</label>
        <link refid="mccc__gc__euler_8c"/>
      </node>
      <node id="13">
        <label>hdf5io/hdf5_nbi.c</label>
        <link refid="hdf5__nbi_8c"/>
      </node>
      <node id="14">
        <label>hdf5io/hdf5_nbi.h</label>
        <link refid="hdf5__nbi_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>diag/dist_6D.c</label>
        <link refid="dist__6D_8c"/>
      </node>
      <node id="44">
        <label>diag/dist_6D.h</label>
        <link refid="dist__6D_8h"/>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="54">
        <label>hdf5io/hdf5_state.c</label>
        <link refid="hdf5__state_8c"/>
      </node>
      <node id="55">
        <label>hdf5io/hdf5_state.h</label>
        <link refid="hdf5__state_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
      </node>
      <node id="67">
        <label>simulate/step/step_fo_vpa.c</label>
        <link refid="step__fo__vpa_8c"/>
      </node>
      <node id="68">
        <label>simulate/step/step_fo_vpa.h</label>
        <link refid="step__fo__vpa_8h"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>diag/dist_rho6D.c</label>
        <link refid="dist__rho6D_8c"/>
      </node>
      <node id="50">
        <label>diag/dist_rho6D.h</label>
        <link refid="dist__rho6D_8h"/>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structparticle__state" prot="public">particle_state</innerclass>
    <innerclass refid="structparticle" prot="public">particle</innerclass>
    <innerclass refid="structparticle__gc" prot="public">particle_gc</innerclass>
    <innerclass refid="structparticle__ml" prot="public">particle_ml</innerclass>
    <innerclass refid="structparticle__queue" prot="public">particle_queue</innerclass>
    <innerclass refid="structinput__particle" prot="public">input_particle</innerclass>
    <innerclass refid="structparticle__simd__fo" prot="public">particle_simd_fo</innerclass>
    <innerclass refid="structparticle__simd__gc" prot="public">particle_simd_gc</innerclass>
    <innerclass refid="structparticle__simd__ml" prot="public">particle_simd_ml</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="particle_8h_1ad9e26d23f507828132c597fb21168ce2" prot="public" static="no" strong="no">
        <type></type>
        <name>input_particle_type</name>
        <enumvalue id="particle_8h_1ad9e26d23f507828132c597fb21168ce2a34901e67dd3e18e147710cbab59bfc87" prot="public">
          <name>input_particle_type_p</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Type corresponding to particle struct <linebreak/>
 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="particle_8h_1ad9e26d23f507828132c597fb21168ce2a20d323bd4e978ec48217876c3437112c" prot="public">
          <name>input_particle_type_gc</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Type corresponding to <ref refid="structparticle__gc" kindref="compound">particle_gc</ref> struct <linebreak/>
 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="particle_8h_1ad9e26d23f507828132c597fb21168ce2a62ff5d32478ecfa8278a8febf89f7c6e" prot="public">
          <name>input_particle_type_ml</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Type corresponding to <ref refid="structparticle__ml" kindref="compound">particle_ml</ref> struct <linebreak/>
 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="particle_8h_1ad9e26d23f507828132c597fb21168ce2ac5643fe6eadc1ee9a3cda67ea8cfa251" prot="public">
          <name>input_particle_type_s</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Type corresponding to <ref refid="structparticle__state" kindref="compound">particle_state</ref> struct </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Marker types enum. </para>
        </briefdescription>
        <detaileddescription>
<para>Used to indicate what marker type is stored in <ref refid="structinput__particle" kindref="compound">input_particle</ref> wrapper. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="particle.h" line="169" column="1" bodyfile="particle.h" bodystart="169" bodyend="174"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="particle_8h_1ac28a972286f1168cf5f22169dc7d8212" prot="public" static="no">
        <type>enum <ref refid="particle_8h_1ad9e26d23f507828132c597fb21168ce2" kindref="member">input_particle_type</ref></type>
        <definition>typedef enum input_particle_type input_particle_type</definition>
        <argsstring></argsstring>
        <name>input_particle_type</name>
        <briefdescription>
<para>Marker types enum. </para>
        </briefdescription>
        <detaileddescription>
<para>Used to indicate what marker type is stored in <ref refid="structinput__particle" kindref="compound">input_particle</ref> wrapper. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="particle.h" line="174" column="21"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="particle_8h_1a5b1269a856de55b03a59d06df3ee3113" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void particle_to_fo_dummy</definition>
        <argsstring>(particle_simd_fo *p_fo, int j)</argsstring>
        <name>particle_to_fo_dummy</name>
        <param>
          <type><ref refid="structparticle__simd__fo" kindref="compound">particle_simd_fo</ref> *</type>
          <declname>p_fo</declname>
        </param>
        <param>
          <type>int</type>
          <declname>j</declname>
        </param>
        <briefdescription>
<para>Makes a dummy FO simulation marker. </para>
        </briefdescription>
        <detaileddescription>
<para>A dummy marker is a marker whose fields have possible but unrealistic values. It is intended to act as a filler for SIMD arrays that would otherwise be left uninitialized.</para>
<para>A dummy marker has negative one (-1) ID and negative one (-1) queue index, and it is not running (0). Dummy marker should be ignored when encountered during the simulation.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p_fo</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to <ref refid="structparticle__simd__fo" kindref="compound">particle_simd_fo</ref> array where dummy is placed </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>j</parametername>
</parameternamelist>
<parameterdescription>
<para>index of the new dummy in the SIMD arrays </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="particle.h" line="400" column="6" bodyfile="particle.c" bodystart="74" bodyend="98" declfile="particle.h" declline="400" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="particle_8h_1a9811038a60f0e1525fca6dc9f9a6a150" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void particle_to_gc_dummy</definition>
        <argsstring>(particle_simd_gc *p_gc, int j)</argsstring>
        <name>particle_to_gc_dummy</name>
        <param>
          <type><ref refid="structparticle__simd__gc" kindref="compound">particle_simd_gc</ref> *</type>
          <declname>p_gc</declname>
        </param>
        <param>
          <type>int</type>
          <declname>j</declname>
        </param>
        <briefdescription>
<para>Makes a dummy GC simulation marker. </para>
        </briefdescription>
        <detaileddescription>
<para>A dummy marker is a marker whose fields have possible but unrealistic values. It is intended to act as a filler for SIMD arrays that would otherwise be left uninitialized.</para>
<para>A dummy marker has negative one (-1) ID and negative one (-1) queue index, and it is not running (0). Dummy marker should be ignored when encountered during the simulation.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p_gc</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to <ref refid="structparticle__simd__gc" kindref="compound">particle_simd_gc</ref> array where dummy is placed </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>j</parametername>
</parameternamelist>
<parameterdescription>
<para>index of the new dummy in the SIMD arrays </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="particle.h" line="401" column="6" bodyfile="particle.c" bodystart="114" bodyend="144" declfile="particle.h" declline="401" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="particle_8h_1a0bff4063646ea64c569a51f947c81475" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void particle_to_ml_dummy</definition>
        <argsstring>(particle_simd_ml *p_ml, int j)</argsstring>
        <name>particle_to_ml_dummy</name>
        <param>
          <type><ref refid="structparticle__simd__ml" kindref="compound">particle_simd_ml</ref> *</type>
          <declname>p_ml</declname>
        </param>
        <param>
          <type>int</type>
          <declname>j</declname>
        </param>
        <briefdescription>
<para>Makes a dummy ML simulation marker. </para>
        </briefdescription>
        <detaileddescription>
<para>A dummy marker is a marker whose fields have possible but unrealistic values. It is intended to act as a filler for SIMD arrays that would otherwise be left uninitialized.</para>
<para>A dummy marker has negative one (-1) ID and negative one (-1) queue index, and it is not running (0). Dummy marker should be ignored when encountered during the simulation.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p_ml</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to <ref refid="structparticle__simd__ml" kindref="compound">particle_simd_ml</ref> array where dummy is placed </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>j</parametername>
</parameternamelist>
<parameterdescription>
<para>index of the new dummy in the SIMD arrays </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="particle.h" line="402" column="6" bodyfile="particle.c" bodystart="160" bodyend="183" declfile="particle.h" declline="402" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="particle_8h_1af053259c1f06721bbbbe61baaa0facb0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int particle_cycle_fo</definition>
        <argsstring>(particle_queue *q, particle_simd_fo *p, B_field_data *Bdata, int *cycle)</argsstring>
        <name>particle_cycle_fo</name>
        <param>
          <type><ref refid="structparticle__queue" kindref="compound">particle_queue</ref> *</type>
          <declname>q</declname>
        </param>
        <param>
          <type><ref refid="structparticle__simd__fo" kindref="compound">particle_simd_fo</ref> *</type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="structB__field__data" kindref="compound">B_field_data</ref> *</type>
          <declname>Bdata</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>cycle</declname>
        </param>
        <briefdescription>
<para>Replace finished FO markers with new ones or dummies. </para>
        </briefdescription>
        <detaileddescription>
<para>A marker has finished simulation when marker.running = 0. If queue has unsimulated markers, one is picked to replace the finished marker. If not, a dummy marker is used as a replacement instead. Finished marker is converted to marker state and stored in the queue.</para>
<para>This function updates queue.next and queue.finished fields when a marker has finished simulation. This is done thread-safe.</para>
<para>This function returns values indicating what was done for each marker in a SIMD array: 0 : Nothing -1 : Finished marker replaced with a dummy (queue is empty) 1 : Finished marker replaced with a fresh one</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>q</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to marker queue </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to SIMD structure of markers </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Bdata</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to magnetic field data </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cycle</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to integer array where what was done for each marker is stored</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Number of markers within the SIMD structure that are still running </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="particle.h" line="404" column="5" bodyfile="particle.c" bodystart="210" bodyend="282" declfile="particle.h" declline="404" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="particle_8h_1ae9a00100d11547e28826c5c2e0ff7372" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int particle_cycle_gc</definition>
        <argsstring>(particle_queue *q, particle_simd_gc *p, B_field_data *Bdata, int *cycle)</argsstring>
        <name>particle_cycle_gc</name>
        <param>
          <type><ref refid="structparticle__queue" kindref="compound">particle_queue</ref> *</type>
          <declname>q</declname>
        </param>
        <param>
          <type><ref refid="structparticle__simd__gc" kindref="compound">particle_simd_gc</ref> *</type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="structB__field__data" kindref="compound">B_field_data</ref> *</type>
          <declname>Bdata</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>cycle</declname>
        </param>
        <briefdescription>
<para>Replace finished GC markers with new ones or dummies. </para>
        </briefdescription>
        <detaileddescription>
<para>A marker has finished simulation when marker.running = 0. If queue has unsimulated markers, one is picked to replace the finished marker. If not, a dummy marker is used as a replacement instead. Finished marker is converted to marker state and stored in the queue.</para>
<para>This function updates queue.next and queue.finished fields when a marker has finished simulation. This is done thread-safe.</para>
<para>This function returns values indicating what was done for each marker in a SIMD array: 0 : Nothing -1 : Finished marker replaced with a dummy (queue is empty) 1 : Finished marker replaced with a fresh one</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>q</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to marker queue </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to SIMD structure of markers </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Bdata</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to magnetic field data </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cycle</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to integer array where what was done for each marker is stored</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Number of markers within the SIMD structure that are still running </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="particle.h" line="406" column="5" bodyfile="particle.c" bodystart="309" bodyend="376" declfile="particle.h" declline="406" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="particle_8h_1ac5fcdf3eb124f6caa4e4b748e3449ee2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int particle_cycle_ml</definition>
        <argsstring>(particle_queue *q, particle_simd_ml *p, B_field_data *Bdata, int *cycle)</argsstring>
        <name>particle_cycle_ml</name>
        <param>
          <type><ref refid="structparticle__queue" kindref="compound">particle_queue</ref> *</type>
          <declname>q</declname>
        </param>
        <param>
          <type><ref refid="structparticle__simd__ml" kindref="compound">particle_simd_ml</ref> *</type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="structB__field__data" kindref="compound">B_field_data</ref> *</type>
          <declname>Bdata</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>cycle</declname>
        </param>
        <briefdescription>
<para>Replace finished ML markers with new ones or dummies. </para>
        </briefdescription>
        <detaileddescription>
<para>A marker has finished simulation when marker.running = 0. If queue has unsimulated markers, one is picked to replace the finished marker. If not, a dummy marker is used as a replacement instead. Finished marker is converted to marker state and stored in the queue.</para>
<para>This function updates queue.next and queue.finished fields when a marker has finished simulation. This is done thread-safe.</para>
<para>This function returns values indicating what was done for each marker in a SIMD array: 0 : Nothing -1 : Finished marker replaced with a dummy (queue is empty) 1 : Finished marker replaced with a fresh one</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>q</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to particle queue </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to SIMD structure of markers </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Bdata</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to magnetic field data </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cycle</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to integer array where what was done for each marker is stored</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Number of markers within the SIMD structure that are still running </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="particle.h" line="408" column="5" bodyfile="particle.c" bodystart="403" bodyend="470" declfile="particle.h" declline="408" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="particle_8h_1a8e96bcfc9c95b76f3c91663e34a43b01" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void particle_input_to_state</definition>
        <argsstring>(input_particle *p, particle_state *ps, B_field_data *Bdata)</argsstring>
        <name>particle_input_to_state</name>
        <param>
          <type><ref refid="structinput__particle" kindref="compound">input_particle</ref> *</type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="structparticle__state" kindref="compound">particle_state</ref> *</type>
          <declname>ps</declname>
        </param>
        <param>
          <type><ref refid="structB__field__data" kindref="compound">B_field_data</ref> *</type>
          <declname>Bdata</declname>
        </param>
        <briefdescription>
<para>Converts input marker to a marker state. </para>
        </briefdescription>
        <detaileddescription>
<para>When marker input is read, the data is stored in one of the input marker structs (particle, <ref refid="structparticle__gc" kindref="compound">particle_gc</ref>, <ref refid="structparticle__ml" kindref="compound">particle_ml</ref>). This function converts these structs into a marker state, which then can be used to create simulation structs.</para>
<para>If an error is encountered while converting, the error message is stored to the state.</para>
<para><xrefsect id="todo_1_todo000008"><xreftitle>Todo</xreftitle><xrefdescription><para>Parameter p can be a <ref refid="structparticle__state" kindref="compound">particle_state</ref> itself but this option is not dealt with </para>
<para>This sets p-&gt;type = input_particle_type_s which is not in accordance with the documentation.</para>
</xrefdescription></xrefsect></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to marker input </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ps</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to state where converted marker will be stored </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Bdata</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to magnetic field data </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="particle.h" line="411" column="6" bodyfile="particle.c" bodystart="492" bodyend="573" declfile="particle.h" declline="411" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="particle_8h_1ab65075ed0209a55686c1009eb2041af0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="error_8h_1a3bca029fa2975420f00b89f3cb38872e" kindref="member">a5err</ref></type>
        <definition>a5err particle_input_p_to_state</definition>
        <argsstring>(particle *p, particle_state *ps, B_field_data *Bdata)</argsstring>
        <name>particle_input_p_to_state</name>
        <param>
          <type><ref refid="structparticle" kindref="compound">particle</ref> *</type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="structparticle__state" kindref="compound">particle_state</ref> *</type>
          <declname>ps</declname>
        </param>
        <param>
          <type><ref refid="structB__field__data" kindref="compound">B_field_data</ref> *</type>
          <declname>Bdata</declname>
        </param>
        <briefdescription>
<para>Convert an input particle marker to particle state. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to particle marker input </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ps</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to state where converted marker will be stored </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Bdata</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to magnetic field data</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>zero if there was no error </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="particle.h" line="413" column="7" bodyfile="particle.c" bodystart="1391" bodyend="1471" declfile="particle.h" declline="413" declcolumn="7"/>
      </memberdef>
      <memberdef kind="function" id="particle_8h_1a12ad353368240274650bbe5f702b0ec4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="error_8h_1a3bca029fa2975420f00b89f3cb38872e" kindref="member">a5err</ref></type>
        <definition>a5err particle_input_gc_to_state</definition>
        <argsstring>(particle_gc *p, particle_state *ps, B_field_data *Bdata)</argsstring>
        <name>particle_input_gc_to_state</name>
        <param>
          <type><ref refid="structparticle__gc" kindref="compound">particle_gc</ref> *</type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="structparticle__state" kindref="compound">particle_state</ref> *</type>
          <declname>ps</declname>
        </param>
        <param>
          <type><ref refid="structB__field__data" kindref="compound">B_field_data</ref> *</type>
          <declname>Bdata</declname>
        </param>
        <briefdescription>
<para>Convert an input guiding center marker to particle state. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to guiding center marker input </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ps</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to state where converted marker will be stored </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Bdata</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to magnetic field data</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>zero if there was no error </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="particle.h" line="415" column="7" bodyfile="particle.c" bodystart="1482" bodyend="1587" declfile="particle.h" declline="415" declcolumn="7"/>
      </memberdef>
      <memberdef kind="function" id="particle_8h_1a8b10f6fd186df181f734315548328fec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="error_8h_1a3bca029fa2975420f00b89f3cb38872e" kindref="member">a5err</ref></type>
        <definition>a5err particle_input_ml_to_state</definition>
        <argsstring>(particle_ml *p, particle_state *ps, B_field_data *Bdata)</argsstring>
        <name>particle_input_ml_to_state</name>
        <param>
          <type><ref refid="structparticle__ml" kindref="compound">particle_ml</ref> *</type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="structparticle__state" kindref="compound">particle_state</ref> *</type>
          <declname>ps</declname>
        </param>
        <param>
          <type><ref refid="structB__field__data" kindref="compound">B_field_data</ref> *</type>
          <declname>Bdata</declname>
        </param>
        <briefdescription>
<para>Convert an input field line marker to particle state. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to field line marker input </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ps</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to state where converted marker will be stored </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Bdata</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to magnetic field data</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>zero if there was no error </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="particle.h" line="417" column="7" bodyfile="particle.c" bodystart="1598" bodyend="1661" declfile="particle.h" declline="417" declcolumn="7"/>
      </memberdef>
      <memberdef kind="function" id="particle_8h_1a275c199f15c1a8f46a48decfb6908b71" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="error_8h_1a3bca029fa2975420f00b89f3cb38872e" kindref="member">a5err</ref></type>
        <definition>a5err particle_state_to_fo</definition>
        <argsstring>(particle_state *p, int i, particle_simd_fo *p_fo, int j, B_field_data *Bdata)</argsstring>
        <name>particle_state_to_fo</name>
        <param>
          <type><ref refid="structparticle__state" kindref="compound">particle_state</ref> *</type>
          <declname>p</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type><ref refid="structparticle__simd__fo" kindref="compound">particle_simd_fo</ref> *</type>
          <declname>p_fo</declname>
        </param>
        <param>
          <type>int</type>
          <declname>j</declname>
        </param>
        <param>
          <type><ref refid="structB__field__data" kindref="compound">B_field_data</ref> *</type>
          <declname>Bdata</declname>
        </param>
        <briefdescription>
<para>Convert state into a FO SIMD marker. </para>
        </briefdescription>
        <detaileddescription>
<para>This function assumes markers are drawn from a marker queue where they will be returned at the same position once simulation for this marker has ended,</para>
<para>State is converted into a FO marker by copying all the fields, except for magnetic field (and rho) which is evaluated here at FO position and then stored.</para>
<para>The simulation marker is set as running unless there is an error or the state already have active end condition.</para>
<para>If state marker already has an error flag, this error flag is returned and nothing is done. If an error occurs within this function, the conversion is terminated and the error is returned. It is the responsibility of the caller to store the error in correct struct.</para>
<para>This is a SIMD function.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a state being converted </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>index of this state in the marker queue </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_fo</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to SIMD structure where marker is being stored </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>j</parametername>
</parameternamelist>
<parameterdescription>
<para>index where in the SIMD structure marker is stored </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Bdata</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to magnetic field data </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="particle.h" line="421" column="7" bodyfile="particle.c" bodystart="601" bodyend="670" declfile="particle.h" declline="421" declcolumn="7"/>
      </memberdef>
      <memberdef kind="function" id="particle_8h_1a308eb43a7cb3aead97315dd1020aae9d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void particle_fo_to_state</definition>
        <argsstring>(particle_simd_fo *p_fo, int j, particle_state *p, B_field_data *Bdata)</argsstring>
        <name>particle_fo_to_state</name>
        <param>
          <type><ref refid="structparticle__simd__fo" kindref="compound">particle_simd_fo</ref> *</type>
          <declname>p_fo</declname>
        </param>
        <param>
          <type>int</type>
          <declname>j</declname>
        </param>
        <param>
          <type><ref refid="structparticle__state" kindref="compound">particle_state</ref> *</type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="structB__field__data" kindref="compound">B_field_data</ref> *</type>
          <declname>Bdata</declname>
        </param>
        <briefdescription>
<para>Convert FO to state. </para>
        </briefdescription>
        <detaileddescription>
<para>This function converts FO simulation marker to a marker state. No new state structure is initialized, but an existing one is filled with parameters corresponding to the converted marker.</para>
<para>This is a SIMD function.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p_fo</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to SIMD structure </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>j</parametername>
</parameternamelist>
<parameterdescription>
<para>SIMD index of the marker to be converted </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to state whose fields are used to store the converted marker </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Bdata</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to magnetic field data </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="particle.h" line="424" column="6" bodyfile="particle.c" bodystart="686" bodyend="786" declfile="particle.h" declline="424" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="particle_8h_1a217333f14fa85b8882738f804346c493" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="error_8h_1a3bca029fa2975420f00b89f3cb38872e" kindref="member">a5err</ref></type>
        <definition>a5err particle_state_to_gc</definition>
        <argsstring>(particle_state *p, int i, particle_simd_gc *p_gc, int j, B_field_data *Bdata)</argsstring>
        <name>particle_state_to_gc</name>
        <param>
          <type><ref refid="structparticle__state" kindref="compound">particle_state</ref> *</type>
          <declname>p</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type><ref refid="structparticle__simd__gc" kindref="compound">particle_simd_gc</ref> *</type>
          <declname>p_gc</declname>
        </param>
        <param>
          <type>int</type>
          <declname>j</declname>
        </param>
        <param>
          <type><ref refid="structB__field__data" kindref="compound">B_field_data</ref> *</type>
          <declname>Bdata</declname>
        </param>
        <briefdescription>
<para>Convert state into a GC SIMD marker. </para>
        </briefdescription>
        <detaileddescription>
<para>This function assumes markers are drawn from a marker queue where they will be returned at the same position once simulation for this marker has ended,</para>
<para>State is converted into a GC marker by simply copying all the necessary fields.</para>
<para>The simulation marker is set as running unless there is an error or the state already have active end condition.</para>
<para>If state marker already has an error flag, this error flag is returned and nothing is done. If an error occurs within this function, the conversion is terminated and the error is returned. It is the responsibility of the caller to store the error in correct struct.</para>
<para>This is a SIMD function.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a state being converted </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>index of this state in the marker queue </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_gc</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to SIMD structure where marker is being stored </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>j</parametername>
</parameternamelist>
<parameterdescription>
<para>index where in the SIMD structure marker is stored </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Bdata</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to magnetic field data </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="particle.h" line="427" column="7" bodyfile="particle.c" bodystart="813" bodyend="862" declfile="particle.h" declline="427" declcolumn="7"/>
      </memberdef>
      <memberdef kind="function" id="particle_8h_1a10627ba7787e16ac8b87afcf55d82c61" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void particle_gc_to_state</definition>
        <argsstring>(particle_simd_gc *p_gc, int j, particle_state *p, B_field_data *Bdata)</argsstring>
        <name>particle_gc_to_state</name>
        <param>
          <type><ref refid="structparticle__simd__gc" kindref="compound">particle_simd_gc</ref> *</type>
          <declname>p_gc</declname>
        </param>
        <param>
          <type>int</type>
          <declname>j</declname>
        </param>
        <param>
          <type><ref refid="structparticle__state" kindref="compound">particle_state</ref> *</type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="structB__field__data" kindref="compound">B_field_data</ref> *</type>
          <declname>Bdata</declname>
        </param>
        <briefdescription>
<para>Convert GC to state. </para>
        </briefdescription>
        <detaileddescription>
<para>This function converts GC simulation marker to a marker state. No new state structure is initialized, but an existing one is filled with parameters corresponding to the converted marker.</para>
<para>This is a SIMD function.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p_gc</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to SIMD structure </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>j</parametername>
</parameternamelist>
<parameterdescription>
<para>SIMD index of the marker to be converted </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to state whose fields are used to store the converted marker </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Bdata</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to magnetic field data </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="particle.h" line="430" column="6" bodyfile="particle.c" bodystart="878" bodyend="962" declfile="particle.h" declline="430" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="particle_8h_1aaa3116ddab1b53462a5c7d7c98dcf839" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="error_8h_1a3bca029fa2975420f00b89f3cb38872e" kindref="member">a5err</ref></type>
        <definition>a5err particle_state_to_ml</definition>
        <argsstring>(particle_state *p, int i, particle_simd_ml *p_ml, int j, B_field_data *Bdata)</argsstring>
        <name>particle_state_to_ml</name>
        <param>
          <type><ref refid="structparticle__state" kindref="compound">particle_state</ref> *</type>
          <declname>p</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type><ref refid="structparticle__simd__ml" kindref="compound">particle_simd_ml</ref> *</type>
          <declname>p_ml</declname>
        </param>
        <param>
          <type>int</type>
          <declname>j</declname>
        </param>
        <param>
          <type><ref refid="structB__field__data" kindref="compound">B_field_data</ref> *</type>
          <declname>Bdata</declname>
        </param>
        <briefdescription>
<para>Convert state to a ML SIMD marker. </para>
        </briefdescription>
        <detaileddescription>
<para>This function assumes markers are drawn from a marker queue where they will be returned at the same position once simulation for this marker has ended,</para>
<para>State is converted into a ML marker by using particle position as initial position. Other fields are simply copied exceot pitch, which is calculated from vpar as pitch = 2*(vpar &gt;= 0) - 1, i.e., sign of vpar determines sign of pitch.</para>
<para>The simulation marker is set as running unless there is an error or the state already have active end condition.</para>
<para>If state marker already has an error flag, this error flag is returned and nothing is done. If an error occurs within this function, the conversion is terminated and the error is returned. It is the responsibility of the caller to store the error in correct struct.</para>
<para>This is a SIMD function.</para>
<para><xrefsect id="todo_1_todo000009"><xreftitle>Todo</xreftitle><xrefdescription><para>A minor thing but it would be better if guiding center position were used instead. This would require evaluation of the magnetic field.</para>
</xrefdescription></xrefsect></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a state being converted </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>index of this state in the marker queue </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_ml</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to SIMD structure where marker is being stored </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>j</parametername>
</parameternamelist>
<parameterdescription>
<para>index where in the SIMD structure marker is stored </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Bdata</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to magnetic field data </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="particle.h" line="433" column="7" bodyfile="particle.c" bodystart="994" bodyend="1039" declfile="particle.h" declline="433" declcolumn="7"/>
      </memberdef>
      <memberdef kind="function" id="particle_8h_1ae5b0e6f269fe140fbb8f00b96e7aa7a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void particle_ml_to_state</definition>
        <argsstring>(particle_simd_ml *p_ml, int j, particle_state *p, B_field_data *Bdata)</argsstring>
        <name>particle_ml_to_state</name>
        <param>
          <type><ref refid="structparticle__simd__ml" kindref="compound">particle_simd_ml</ref> *</type>
          <declname>p_ml</declname>
        </param>
        <param>
          <type>int</type>
          <declname>j</declname>
        </param>
        <param>
          <type><ref refid="structparticle__state" kindref="compound">particle_state</ref> *</type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="structB__field__data" kindref="compound">B_field_data</ref> *</type>
          <declname>Bdata</declname>
        </param>
        <briefdescription>
<para>Convert ML to state. </para>
        </briefdescription>
        <detaileddescription>
<para>This function converts ML simulation marker to a marker state. No new state structure is initialized, but an existing one is filled with parameters corresponding to the converted marker.</para>
<para>Field line position is stored in both particle and guiding center position fields. Direction is stored in vpar field. rdot, phidot, zdot, mu, zeta, mass, and charge are left empty.</para>
<para>This is a SIMD function.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p_ml</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to SIMD structure </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>j</parametername>
</parameternamelist>
<parameterdescription>
<para>SIMD index of the marker to be converted </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to state whose fields are used to store the converted marker </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Bdata</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to magnetic field data </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="particle.h" line="436" column="6" bodyfile="particle.c" bodystart="1059" bodyend="1114" declfile="particle.h" declline="436" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="particle_8h_1a6dec81969f333737b86320b744353281" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int particle_fo_to_gc</definition>
        <argsstring>(particle_simd_fo *p_fo, int j, particle_simd_gc *p_gc, B_field_data *Bdata)</argsstring>
        <name>particle_fo_to_gc</name>
        <param>
          <type><ref refid="structparticle__simd__fo" kindref="compound">particle_simd_fo</ref> *</type>
          <declname>p_fo</declname>
        </param>
        <param>
          <type>int</type>
          <declname>j</declname>
        </param>
        <param>
          <type><ref refid="structparticle__simd__gc" kindref="compound">particle_simd_gc</ref> *</type>
          <declname>p_gc</declname>
        </param>
        <param>
          <type><ref refid="structB__field__data" kindref="compound">B_field_data</ref> *</type>
          <declname>Bdata</declname>
        </param>
        <briefdescription>
<para>Convert FO struct into a GC struct. </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000001"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Do we need this as same can be accomplished by turning FO to state and state to GC?</para>
</xrefdescription></xrefsect></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p_fo</parametername>
</parameternamelist>
<parameterdescription>
<para>fo SIMD structure being transformed </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>j</parametername>
</parameternamelist>
<parameterdescription>
<para>index where in the SIMD structure marker is stored </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_gc</parametername>
</parameternamelist>
<parameterdescription>
<para>gc SIMD structure where marker is transformed </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Bdata</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to magnetic field data </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="particle.h" line="439" column="5" bodyfile="particle.c" bodystart="1127" bodyend="1234" declfile="particle.h" declline="439" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="particle_8h_1afb47cf7aacb7f1d2aaae0ee5dc657229" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void particle_copy_fo</definition>
        <argsstring>(particle_simd_fo *p1, int i, particle_simd_fo *p2, int j)</argsstring>
        <name>particle_copy_fo</name>
        <param>
          <type><ref refid="structparticle__simd__fo" kindref="compound">particle_simd_fo</ref> *</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type><ref refid="structparticle__simd__fo" kindref="compound">particle_simd_fo</ref> *</type>
          <declname>p2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>j</declname>
        </param>
        <briefdescription>
<para>Copy FO struct. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p1</parametername>
</parameternamelist>
<parameterdescription>
<para>SIMD structure for input </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>index for the copied input </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p2</parametername>
</parameternamelist>
<parameterdescription>
<para>SIMD structure for output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>j</parametername>
</parameternamelist>
<parameterdescription>
<para>index for the output slot </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="particle.h" line="442" column="6" bodyfile="particle.c" bodystart="1244" bodyend="1287" declfile="particle.h" declline="442" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="particle_8h_1a17a485a5f6148e2aac393fc4b125a39d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void particle_copy_gc</definition>
        <argsstring>(particle_simd_gc *p1, int i, particle_simd_gc *p2, int j)</argsstring>
        <name>particle_copy_gc</name>
        <param>
          <type><ref refid="structparticle__simd__gc" kindref="compound">particle_simd_gc</ref> *</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type><ref refid="structparticle__simd__gc" kindref="compound">particle_simd_gc</ref> *</type>
          <declname>p2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>j</declname>
        </param>
        <briefdescription>
<para>Copy GC struct. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p1</parametername>
</parameternamelist>
<parameterdescription>
<para>SIMD structure for input </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>index for the copied input </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p2</parametername>
</parameternamelist>
<parameterdescription>
<para>SIMD structure for output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>j</parametername>
</parameternamelist>
<parameterdescription>
<para>index for the output slot </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="particle.h" line="444" column="6" bodyfile="particle.c" bodystart="1297" bodyend="1336" declfile="particle.h" declline="444" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="particle_8h_1a9d81572e6a2d201fce505c23841214f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void particle_copy_ml</definition>
        <argsstring>(particle_simd_ml *p1, int i, particle_simd_ml *p2, int j)</argsstring>
        <name>particle_copy_ml</name>
        <param>
          <type><ref refid="structparticle__simd__ml" kindref="compound">particle_simd_ml</ref> *</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type><ref refid="structparticle__simd__ml" kindref="compound">particle_simd_ml</ref> *</type>
          <declname>p2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>j</declname>
        </param>
        <briefdescription>
<para>Copy ML struct. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p1</parametername>
</parameternamelist>
<parameterdescription>
<para>SIMD structure for input </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>index for the copied input </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p2</parametername>
</parameternamelist>
<parameterdescription>
<para>SIMD structure for output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>j</parametername>
</parameternamelist>
<parameterdescription>
<para>index for the output slot </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="particle.h" line="446" column="6" bodyfile="particle.c" bodystart="1346" bodyend="1380" declfile="particle.h" declline="446" declcolumn="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Header file for <ref refid="particle_8c" kindref="compound">particle.c</ref>. </para>
    </briefdescription>
    <detaileddescription>
<para>The relationship between the seven different marker structs is:</para>
<para>particle &gt;<ndash/>+ +--&gt; <ref refid="structparticle__simd__fo" kindref="compound">particle_simd_fo</ref> | | <ref refid="structparticle__gc" kindref="compound">particle_gc</ref> &gt;<ndash/>particle_state--&gt; <ref refid="structparticle__simd__gc" kindref="compound">particle_simd_gc</ref> | | <ref refid="structparticle__ml" kindref="compound">particle_ml</ref> &gt;<ndash/>+ +--&gt; <ref refid="structparticle__simd__ml" kindref="compound">particle_simd_ml</ref></para>
<para>which is explained in <ref refid="particle_8c" kindref="compound">particle.c</ref>. This file contains the definitions of these structs as well as <ref refid="structinput__particle" kindref="compound">input_particle</ref> and <ref refid="structparticle__queue" kindref="compound">particle_queue</ref> structs. Former is a wrapper for particle, <ref refid="structparticle__gc" kindref="compound">particle_gc</ref>, <ref refid="structparticle__ml" kindref="compound">particle_ml</ref>, and <ref refid="structparticle__state" kindref="compound">particle_state</ref> structs while latter is a queue from where markers are chosen when simulation begins and updated when simulation ends. </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>PARTICLE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PARTICLE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ascot5_8h" kindref="compound">ascot5.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="B__field_8h" kindref="compound">B_field.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="E__field_8h" kindref="compound">E_field.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="error_8h" kindref="compound">error.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="structparticle__state" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="41" refid="structparticle__state_1a3f8be755cb8baac1b13a68d90c59c3f5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/><ref refid="structparticle__state_1a3f8be755cb8baac1b13a68d90c59c3f5" kindref="member">r</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="42" refid="structparticle__state_1aff41ea912d6616b74496ce6acb2e5b7e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/><ref refid="structparticle__state_1aff41ea912d6616b74496ce6acb2e5b7e" kindref="member">phi</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="43" refid="structparticle__state_1af550bffa561085f7c0b775bd43ccaed2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/><ref refid="structparticle__state_1af550bffa561085f7c0b775bd43ccaed2" kindref="member">z</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="44" refid="structparticle__state_1aac9ea73afc147fa4aad9a3e0b1d62adc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/><ref refid="structparticle__state_1aac9ea73afc147fa4aad9a3e0b1d62adc" kindref="member">ppar</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="45" refid="structparticle__state_1a52ac6ad583818871d6dd6aee78d27779" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/><ref refid="structparticle__state_1a52ac6ad583818871d6dd6aee78d27779" kindref="member">mu</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="46" refid="structparticle__state_1a32910eee2ba00869e56a165347883837" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/><ref refid="structparticle__state_1a32910eee2ba00869e56a165347883837" kindref="member">zeta</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="47" refid="structparticle__state_1a327fd67d35cc4fb8f83e442109b8c846" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/><ref refid="structparticle__state_1a327fd67d35cc4fb8f83e442109b8c846" kindref="member">rprt</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="48" refid="structparticle__state_1a2ffcee71bbfed82201f3e3641756b6cb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/><ref refid="structparticle__state_1a2ffcee71bbfed82201f3e3641756b6cb" kindref="member">phiprt</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="49" refid="structparticle__state_1afe6f3b950482634327607b34de5fd70a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/><ref refid="structparticle__state_1afe6f3b950482634327607b34de5fd70a" kindref="member">zprt</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="50" refid="structparticle__state_1ae054cde64c773b1d4a762d520b91e66e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/><ref refid="structparticle__state_1ae054cde64c773b1d4a762d520b91e66e" kindref="member">p_r</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="51" refid="structparticle__state_1a22435dc975a3e26284b88e7d3e301d8a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/><ref refid="structparticle__state_1a22435dc975a3e26284b88e7d3e301d8a" kindref="member">p_phi</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="52" refid="structparticle__state_1a70e5a31a5aab3fdf5ad11e5aa924ba38" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/><ref refid="structparticle__state_1a70e5a31a5aab3fdf5ad11e5aa924ba38" kindref="member">p_z</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="53" refid="structparticle__state_1ac2d207ee9934020ee0e5fa0740c5dc2e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/><ref refid="structparticle__state_1ac2d207ee9934020ee0e5fa0740c5dc2e" kindref="member">mass</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="54" refid="structparticle__state_1a23139c51384acefa9689e370bb471bb9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/><ref refid="structparticle__state_1a23139c51384acefa9689e370bb471bb9" kindref="member">charge</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="55" refid="structparticle__state_1ae5b792077ab165fa2175d7dcb7553b0e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><ref refid="structparticle__state_1ae5b792077ab165fa2175d7dcb7553b0e" kindref="member">anum</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="56" refid="structparticle__state_1ac2ded6c45152ab0d1f4c39b2c2442fb0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><ref refid="structparticle__state_1ac2ded6c45152ab0d1f4c39b2c2442fb0" kindref="member">znum</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="57" refid="structparticle__state_1a1361c6ea896ed99423226c7bdcdd8aa4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/><ref refid="structparticle__state_1a1361c6ea896ed99423226c7bdcdd8aa4" kindref="member">weight</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="58" refid="structparticle__state_1a17b0da1c3ecdcd972eb28f7b3f163eba" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/><ref refid="structparticle__state_1a17b0da1c3ecdcd972eb28f7b3f163eba" kindref="member">time</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="59" refid="structparticle__state_1a09fe2854a148d4eb8449f202cf932466" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/><ref refid="structparticle__state_1a09fe2854a148d4eb8449f202cf932466" kindref="member">mileage</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="60" refid="structparticle__state_1aa396877576f7a3bcecfae0ddefa84b0c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/><ref refid="structparticle__state_1aa396877576f7a3bcecfae0ddefa84b0c" kindref="member">cputime</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="61" refid="structparticle__state_1ab8ae01c7daaff543bbebcd5c59944b11" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/><ref refid="structparticle__state_1ab8ae01c7daaff543bbebcd5c59944b11" kindref="member">rho</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="62" refid="structparticle__state_1a67998b97c3ee35af4c80f4135b7bd856" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/><ref refid="structparticle__state_1a67998b97c3ee35af4c80f4135b7bd856" kindref="member">theta</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="63" refid="structparticle__state_1a47d5709d5e17ec1129064a1eb702b895" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a865b01f4cbb6f2bb3270e094934d3263" kindref="member">integer</ref><sp/><ref refid="structparticle__state_1a47d5709d5e17ec1129064a1eb702b895" kindref="member">id</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="64" refid="structparticle__state_1afba5ec956f0515668cba944ce1f02daf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a865b01f4cbb6f2bb3270e094934d3263" kindref="member">integer</ref><sp/><ref refid="structparticle__state_1afba5ec956f0515668cba944ce1f02daf" kindref="member">endcond</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="65" refid="structparticle__state_1a6c005013f55d58c7985d33c2dbfd5ef1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a865b01f4cbb6f2bb3270e094934d3263" kindref="member">integer</ref><sp/><ref refid="structparticle__state_1a6c005013f55d58c7985d33c2dbfd5ef1" kindref="member">walltile</ref>;<sp/></highlight></codeline>
<codeline lineno="66" refid="structparticle__state_1ab8c38c260bf35d18b4efc8a4d3f3c42e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/><ref refid="structparticle__state_1ab8c38c260bf35d18b4efc8a4d3f3c42e" kindref="member">B_r</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="67" refid="structparticle__state_1a1f2fffa46d75cc9b4055222250753a5e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/><ref refid="structparticle__state_1a1f2fffa46d75cc9b4055222250753a5e" kindref="member">B_phi</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="68" refid="structparticle__state_1a1260984dc0fc5d7ae30b7fe9a9cbd5e6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/><ref refid="structparticle__state_1a1260984dc0fc5d7ae30b7fe9a9cbd5e6" kindref="member">B_z</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="69" refid="structparticle__state_1ac64189647aa40512c29a609adf5744be" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/><ref refid="structparticle__state_1ac64189647aa40512c29a609adf5744be" kindref="member">B_r_dr</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="70" refid="structparticle__state_1ad89fb268bfcbe2d0165be251abe01ddb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/><ref refid="structparticle__state_1ad89fb268bfcbe2d0165be251abe01ddb" kindref="member">B_phi_dr</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="71" refid="structparticle__state_1aab09ae9b71c12634da8be01ae2f8d0b3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/><ref refid="structparticle__state_1aab09ae9b71c12634da8be01ae2f8d0b3" kindref="member">B_z_dr</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="72" refid="structparticle__state_1afe87a52e03d76b50c2ff6c61392cb242" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/><ref refid="structparticle__state_1afe87a52e03d76b50c2ff6c61392cb242" kindref="member">B_r_dphi</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="73" refid="structparticle__state_1a6ce8b04b942d4ed9c35b506fa98614f5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/><ref refid="structparticle__state_1a6ce8b04b942d4ed9c35b506fa98614f5" kindref="member">B_phi_dphi</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="74" refid="structparticle__state_1aa6876cfa0d7b3ccd513c67b7d58ae9e3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/><ref refid="structparticle__state_1aa6876cfa0d7b3ccd513c67b7d58ae9e3" kindref="member">B_z_dphi</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="75" refid="structparticle__state_1a5ab2aeaf91174744fe61c542de1d466d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/><ref refid="structparticle__state_1a5ab2aeaf91174744fe61c542de1d466d" kindref="member">B_r_dz</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="76" refid="structparticle__state_1a16c1e0bf43ce272246712d2e869f5413" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/><ref refid="structparticle__state_1a16c1e0bf43ce272246712d2e869f5413" kindref="member">B_phi_dz</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="77" refid="structparticle__state_1a5f91b582caef69702f8ff981f8f32fa2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/><ref refid="structparticle__state_1a5f91b582caef69702f8ff981f8f32fa2" kindref="member">B_z_dz</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="79" refid="structparticle__state_1abefd34d479201d01ff36e4497def613d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="error_8h_1a3bca029fa2975420f00b89f3cb38872e" kindref="member">a5err</ref><sp/><ref refid="structparticle__state_1abefd34d479201d01ff36e4497def613d" kindref="member">err</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="80"><highlight class="normal">}<sp/><ref refid="structparticle__state" kindref="compound">particle_state</ref>;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="88" refid="structparticle" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="89" refid="structparticle_1a91589c36968e810182fc94133eef3c02" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/><ref refid="structparticle_1a91589c36968e810182fc94133eef3c02" kindref="member">r</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="90" refid="structparticle_1a438bb2444022de59231b10dab1e4b564" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/><ref refid="structparticle_1a438bb2444022de59231b10dab1e4b564" kindref="member">phi</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="91" refid="structparticle_1a264fe4c41179e72afd1b6c8a824faf85" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/><ref refid="structparticle_1a264fe4c41179e72afd1b6c8a824faf85" kindref="member">z</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="92" refid="structparticle_1aecd9f4d05154d2e7b8cd27f9de0432a5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/><ref refid="structparticle_1aecd9f4d05154d2e7b8cd27f9de0432a5" kindref="member">p_r</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="93" refid="structparticle_1a4a00f5d0bf15810900c4c3fdddbdc4b2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/><ref refid="structparticle_1a4a00f5d0bf15810900c4c3fdddbdc4b2" kindref="member">p_phi</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="94" refid="structparticle_1acf7ecd617b5b30e9179553b1e71e4a8e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/><ref refid="structparticle_1acf7ecd617b5b30e9179553b1e71e4a8e" kindref="member">p_z</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="95" refid="structparticle_1a91fbaab5de85465656bc523801280cdf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/><ref refid="structparticle_1a91fbaab5de85465656bc523801280cdf" kindref="member">mass</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="96" refid="structparticle_1a1b606e67922db122be89a7af32648714" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/><ref refid="structparticle_1a1b606e67922db122be89a7af32648714" kindref="member">charge</ref>;<sp/></highlight></codeline>
<codeline lineno="97" refid="structparticle_1a1ebb08bda0afda6302c0123e775a5435" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><ref refid="structparticle_1a1ebb08bda0afda6302c0123e775a5435" kindref="member">anum</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="98" refid="structparticle_1a7d39fdfca5945d3d964dac0fab061f2b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><ref refid="structparticle_1a7d39fdfca5945d3d964dac0fab061f2b" kindref="member">znum</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="99" refid="structparticle_1a41682650216e3bae370addda7f7b9c1f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/><ref refid="structparticle_1a41682650216e3bae370addda7f7b9c1f" kindref="member">weight</ref>;<sp/></highlight></codeline>
<codeline lineno="100" refid="structparticle_1a4e7606a8ab8fed05991d00c52377cff5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/><ref refid="structparticle_1a4e7606a8ab8fed05991d00c52377cff5" kindref="member">time</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="101" refid="structparticle_1add6239f307ac8250d48bf840f1ebe78e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/><ref refid="structparticle_1add6239f307ac8250d48bf840f1ebe78e" kindref="member">mileage</ref>;<sp/></highlight></codeline>
<codeline lineno="102" refid="structparticle_1ad8132c4b267fb25d3bfda3306d06e6c3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a865b01f4cbb6f2bb3270e094934d3263" kindref="member">integer</ref><sp/><ref refid="structparticle_1ad8132c4b267fb25d3bfda3306d06e6c3" kindref="member">id</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="103"><highlight class="normal">}<sp/><ref refid="structparticle" kindref="compound">particle</ref>;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="111" refid="structparticle__gc" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="112" refid="structparticle__gc_1ae76b26b01bca6ea35f9297963cf382f6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/><ref refid="structparticle__gc_1ae76b26b01bca6ea35f9297963cf382f6" kindref="member">r</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="113" refid="structparticle__gc_1a92f2ebceeaa41df0f39a3f4953667243" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/><ref refid="structparticle__gc_1a92f2ebceeaa41df0f39a3f4953667243" kindref="member">phi</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="114" refid="structparticle__gc_1a74e44c0c2555ca3a8f5828ce206fc70d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/><ref refid="structparticle__gc_1a74e44c0c2555ca3a8f5828ce206fc70d" kindref="member">z</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="115" refid="structparticle__gc_1a54b77f0fa9cd14177c8bf5914574cd9a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/><ref refid="structparticle__gc_1a54b77f0fa9cd14177c8bf5914574cd9a" kindref="member">energy</ref>;<sp/></highlight></codeline>
<codeline lineno="116" refid="structparticle__gc_1a87b3fe581ea9fa7081499876b3ccfe42" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/><ref refid="structparticle__gc_1a87b3fe581ea9fa7081499876b3ccfe42" kindref="member">pitch</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="117" refid="structparticle__gc_1a242d9441267b0bb37f938e8883ca0614" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/><ref refid="structparticle__gc_1a242d9441267b0bb37f938e8883ca0614" kindref="member">zeta</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="118" refid="structparticle__gc_1ae27701c7ad3396abab1669c6a9bd1b9a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/><ref refid="structparticle__gc_1ae27701c7ad3396abab1669c6a9bd1b9a" kindref="member">mass</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="119" refid="structparticle__gc_1aaddba727735c95bba3fad26a957cd081" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/><ref refid="structparticle__gc_1aaddba727735c95bba3fad26a957cd081" kindref="member">charge</ref>;<sp/></highlight></codeline>
<codeline lineno="120" refid="structparticle__gc_1ad1e0819b4c0be85203aedc2a15526a07" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><ref refid="structparticle__gc_1ad1e0819b4c0be85203aedc2a15526a07" kindref="member">anum</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="121" refid="structparticle__gc_1a3ec941f526b643f7e6eefeb1d13dfc52" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><ref refid="structparticle__gc_1a3ec941f526b643f7e6eefeb1d13dfc52" kindref="member">znum</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="122" refid="structparticle__gc_1a17660a9dd269c9039ad120d39f6ce9aa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/><ref refid="structparticle__gc_1a17660a9dd269c9039ad120d39f6ce9aa" kindref="member">weight</ref>;<sp/></highlight></codeline>
<codeline lineno="123" refid="structparticle__gc_1a9e9082a56751b48da255b56a9547c54c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/><ref refid="structparticle__gc_1a9e9082a56751b48da255b56a9547c54c" kindref="member">time</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="124" refid="structparticle__gc_1a566721bfbb323454d735f61d80eebfbd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a865b01f4cbb6f2bb3270e094934d3263" kindref="member">integer</ref><sp/><ref refid="structparticle__gc_1a566721bfbb323454d735f61d80eebfbd" kindref="member">id</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="125"><highlight class="normal">}<sp/><ref refid="structparticle__gc" kindref="compound">particle_gc</ref>;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="133" refid="structparticle__ml" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="134" refid="structparticle__ml_1a5e08192d0450f97c6dc635a71d5d6ec0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/><ref refid="structparticle__ml_1a5e08192d0450f97c6dc635a71d5d6ec0" kindref="member">r</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="135" refid="structparticle__ml_1a51213eb9851611920150fa8b15af0a4b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/><ref refid="structparticle__ml_1a51213eb9851611920150fa8b15af0a4b" kindref="member">phi</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="136" refid="structparticle__ml_1a18adda32fda67b0b1b3eda43d8e1dbbd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/><ref refid="structparticle__ml_1a18adda32fda67b0b1b3eda43d8e1dbbd" kindref="member">z</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="137" refid="structparticle__ml_1a805f3a9ec70fde2b0b4dde921b5fba42" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/><ref refid="structparticle__ml_1a805f3a9ec70fde2b0b4dde921b5fba42" kindref="member">pitch</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="138" refid="structparticle__ml_1af660d4a268dd37b8a2307bcd360c3d5f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/><ref refid="structparticle__ml_1af660d4a268dd37b8a2307bcd360c3d5f" kindref="member">weight</ref>;<sp/></highlight></codeline>
<codeline lineno="139" refid="structparticle__ml_1a3dd1bbf090918fe0ca6507c8abb76eea" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/><ref refid="structparticle__ml_1a3dd1bbf090918fe0ca6507c8abb76eea" kindref="member">time</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="140" refid="structparticle__ml_1afdd7be2e06ee4366b05ae7fd4705e7f9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a865b01f4cbb6f2bb3270e094934d3263" kindref="member">integer</ref><sp/><ref refid="structparticle__ml_1afdd7be2e06ee4366b05ae7fd4705e7f9" kindref="member">id</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="141"><highlight class="normal">}<sp/><ref refid="structparticle__ml" kindref="compound">particle_ml</ref>;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="155" refid="structparticle__queue" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="156" refid="structparticle__queue_1af86da1478db0cc051aaf7d51d3d1a2b8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structparticle__queue_1af86da1478db0cc051aaf7d51d3d1a2b8" kindref="member">n</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="157" refid="structparticle__queue_1a2dd6f6f1de06a359c46b0f6d7545c63a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structparticle__state" kindref="compound">particle_state</ref>**<sp/><ref refid="structparticle__queue_1a2dd6f6f1de06a359c46b0f6d7545c63a" kindref="member">p</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="159" refid="structparticle__queue_1ab46285cd292490bcf7adb93d147df99e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structparticle__queue_1ab46285cd292490bcf7adb93d147df99e" kindref="member">next</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="160" refid="structparticle__queue_1ad5cc76df822bf1425819520c18f573ff" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structparticle__queue_1ad5cc76df822bf1425819520c18f573ff" kindref="member">finished</ref>;<sp/></highlight></codeline>
<codeline lineno="162"><highlight class="normal">}<sp/><ref refid="structparticle__queue" kindref="compound">particle_queue</ref>;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="169" refid="particle_8h_1ad9e26d23f507828132c597fb21168ce2" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="particle_8h_1ad9e26d23f507828132c597fb21168ce2" kindref="member">input_particle_type</ref><sp/>{</highlight></codeline>
<codeline lineno="170" refid="particle_8h_1ad9e26d23f507828132c597fb21168ce2a34901e67dd3e18e147710cbab59bfc87" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="particle_8h_1ad9e26d23f507828132c597fb21168ce2a34901e67dd3e18e147710cbab59bfc87" kindref="member">input_particle_type_p</ref>,<sp/><sp/></highlight></codeline>
<codeline lineno="171" refid="particle_8h_1ad9e26d23f507828132c597fb21168ce2a20d323bd4e978ec48217876c3437112c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="particle_8h_1ad9e26d23f507828132c597fb21168ce2a20d323bd4e978ec48217876c3437112c" kindref="member">input_particle_type_gc</ref>,<sp/></highlight></codeline>
<codeline lineno="172" refid="particle_8h_1ad9e26d23f507828132c597fb21168ce2a62ff5d32478ecfa8278a8febf89f7c6e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="particle_8h_1ad9e26d23f507828132c597fb21168ce2a62ff5d32478ecfa8278a8febf89f7c6e" kindref="member">input_particle_type_ml</ref>,<sp/></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="particle_8h_1ad9e26d23f507828132c597fb21168ce2ac5643fe6eadc1ee9a3cda67ea8cfa251" kindref="member">input_particle_type_s</ref><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="174" refid="particle_8h_1ac28a972286f1168cf5f22169dc7d8212" refkind="member"><highlight class="normal">}<sp/><ref refid="particle_8h_1ad9e26d23f507828132c597fb21168ce2" kindref="member">input_particle_type</ref>;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="187" refid="structinput__particle" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="188" refid="structinput__particle_1a71c8abbe87f5c140c204faa483b76cd3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="particle_8h_1ad9e26d23f507828132c597fb21168ce2" kindref="member">input_particle_type</ref><sp/><ref refid="structinput__particle_1a71c8abbe87f5c140c204faa483b76cd3" kindref="member">type</ref>;<sp/></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="190" refid="structinput__particle_1aa2cb232cc6b104a529619f0d369f5622" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structparticle" kindref="compound">particle</ref><sp/><ref refid="structinput__particle_1aa2cb232cc6b104a529619f0d369f5622" kindref="member">p</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="191" refid="structinput__particle_1aa6c024538cbd13632c677ed21d58e0f6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structparticle__gc" kindref="compound">particle_gc</ref><sp/><ref refid="structinput__particle_1aa6c024538cbd13632c677ed21d58e0f6" kindref="member">p_gc</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="192" refid="structinput__particle_1a2579b051b276ceb8b5a3892167c08667" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structparticle__ml" kindref="compound">particle_ml</ref><sp/><ref refid="structinput__particle_1a2579b051b276ceb8b5a3892167c08667" kindref="member">p_ml</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="193" refid="structinput__particle_1a9742f4ed55a468a64481da438744adad" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structparticle__state" kindref="compound">particle_state</ref><sp/><ref refid="structinput__particle_1a9742f4ed55a468a64481da438744adad" kindref="member">p_s</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="195"><highlight class="normal">}<sp/><ref refid="structinput__particle" kindref="compound">input_particle</ref>;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="213" refid="structparticle__simd__fo" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Physical<sp/>coordinates<sp/>and<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215" refid="structparticle__simd__fo_1a62ba236693d38c5bdadd4eaf2cec995b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/>r[<ref refid="ascot5_8h_1a6368ab06bbb536b220a367552186bbab" kindref="member">NSIMD</ref>]<sp/><ref refid="structparticle__simd__fo_1a62ba236693d38c5bdadd4eaf2cec995b" kindref="member">__memalign__</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="216" refid="structparticle__simd__fo_1a55bf379b042c405dcac654fed297de6d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/>phi[<ref refid="ascot5_8h_1a6368ab06bbb536b220a367552186bbab" kindref="member">NSIMD</ref>]<sp/><ref refid="structparticle__simd__fo_1a55bf379b042c405dcac654fed297de6d" kindref="member">__memalign__</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="217" refid="structparticle__simd__fo_1ad43ed01b803757983f3abcb1ecbfa2d7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/>z[<ref refid="ascot5_8h_1a6368ab06bbb536b220a367552186bbab" kindref="member">NSIMD</ref>]<sp/><ref refid="structparticle__simd__fo_1ad43ed01b803757983f3abcb1ecbfa2d7" kindref="member">__memalign__</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="218" refid="structparticle__simd__fo_1a3f782adfbbc6dbbc168ded02fa2e9067" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/>p_r[<ref refid="ascot5_8h_1a6368ab06bbb536b220a367552186bbab" kindref="member">NSIMD</ref>]<sp/><ref refid="structparticle__simd__fo_1a3f782adfbbc6dbbc168ded02fa2e9067" kindref="member">__memalign__</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="219" refid="structparticle__simd__fo_1a0972dd3e1eb923ce4ed759572dd45b7a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/>p_phi[<ref refid="ascot5_8h_1a6368ab06bbb536b220a367552186bbab" kindref="member">NSIMD</ref>]<sp/><ref refid="structparticle__simd__fo_1a0972dd3e1eb923ce4ed759572dd45b7a" kindref="member">__memalign__</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="220" refid="structparticle__simd__fo_1a9cc4bdcf10d3e5640b3229c976dcadc2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/>p_z[<ref refid="ascot5_8h_1a6368ab06bbb536b220a367552186bbab" kindref="member">NSIMD</ref>]<sp/><ref refid="structparticle__simd__fo_1a9cc4bdcf10d3e5640b3229c976dcadc2" kindref="member">__memalign__</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="221" refid="structparticle__simd__fo_1a2d9e5089fc0726f55002f10968ab3c9f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/>mass[<ref refid="ascot5_8h_1a6368ab06bbb536b220a367552186bbab" kindref="member">NSIMD</ref>]<sp/><ref refid="structparticle__simd__fo_1a2d9e5089fc0726f55002f10968ab3c9f" kindref="member">__memalign__</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="222" refid="structparticle__simd__fo_1a91cc4f66b4d772db88a6575a3c4169cd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/>charge[<ref refid="ascot5_8h_1a6368ab06bbb536b220a367552186bbab" kindref="member">NSIMD</ref>]<sp/><ref refid="structparticle__simd__fo_1a91cc4f66b4d772db88a6575a3c4169cd" kindref="member">__memalign__</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="223" refid="structparticle__simd__fo_1a216c3a724ebe9a15d6dea4582dc03397" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/>time[<ref refid="ascot5_8h_1a6368ab06bbb536b220a367552186bbab" kindref="member">NSIMD</ref>]<sp/><ref refid="structparticle__simd__fo_1a216c3a724ebe9a15d6dea4582dc03397" kindref="member">__memalign__</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="224" refid="structparticle__simd__fo_1a562bb6672ae85f217de4ebf41c8a618a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>znum[<ref refid="ascot5_8h_1a6368ab06bbb536b220a367552186bbab" kindref="member">NSIMD</ref>]<sp/><ref refid="structparticle__simd__fo_1a562bb6672ae85f217de4ebf41c8a618a" kindref="member">__memalign__</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="225" refid="structparticle__simd__fo_1a0a79c56beea26020308f68824b32ea91" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>anum[<ref refid="ascot5_8h_1a6368ab06bbb536b220a367552186bbab" kindref="member">NSIMD</ref>]<sp/><ref refid="structparticle__simd__fo_1a0a79c56beea26020308f68824b32ea91" kindref="member">__memalign__</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Magnetic<sp/>field<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228" refid="structparticle__simd__fo_1a5ec596ffefd656adfe9bca0fc96956bd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/>B_r[<ref refid="ascot5_8h_1a6368ab06bbb536b220a367552186bbab" kindref="member">NSIMD</ref>]<sp/><ref refid="structparticle__simd__fo_1a5ec596ffefd656adfe9bca0fc96956bd" kindref="member">__memalign__</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="230" refid="structparticle__simd__fo_1a221a0801258f6de8fbfc5bf274a06bcc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/>B_phi[<ref refid="ascot5_8h_1a6368ab06bbb536b220a367552186bbab" kindref="member">NSIMD</ref>]<sp/><ref refid="structparticle__simd__fo_1a221a0801258f6de8fbfc5bf274a06bcc" kindref="member">__memalign__</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="232" refid="structparticle__simd__fo_1a213a506894f555fe39be1d4ff5e65d53" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/>B_z[<ref refid="ascot5_8h_1a6368ab06bbb536b220a367552186bbab" kindref="member">NSIMD</ref>]<sp/><ref refid="structparticle__simd__fo_1a213a506894f555fe39be1d4ff5e65d53" kindref="member">__memalign__</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="235" refid="structparticle__simd__fo_1a2b2da9c6008b3a368bd5ce562ad6a570" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/>B_r_dr[<ref refid="ascot5_8h_1a6368ab06bbb536b220a367552186bbab" kindref="member">NSIMD</ref>]<sp/><ref refid="structparticle__simd__fo_1a2b2da9c6008b3a368bd5ce562ad6a570" kindref="member">__memalign__</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="236" refid="structparticle__simd__fo_1a53c69ada5345e11f0f2cca8b2ce95596" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/>B_phi_dr[<ref refid="ascot5_8h_1a6368ab06bbb536b220a367552186bbab" kindref="member">NSIMD</ref>]<sp/><ref refid="structparticle__simd__fo_1a53c69ada5345e11f0f2cca8b2ce95596" kindref="member">__memalign__</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="237" refid="structparticle__simd__fo_1a8e91670b0882778b6deb26666a9acd44" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/>B_z_dr[<ref refid="ascot5_8h_1a6368ab06bbb536b220a367552186bbab" kindref="member">NSIMD</ref>]<sp/><ref refid="structparticle__simd__fo_1a8e91670b0882778b6deb26666a9acd44" kindref="member">__memalign__</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="238" refid="structparticle__simd__fo_1a1d606c82013db94510cbbd2136923ced" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/>B_r_dphi[<ref refid="ascot5_8h_1a6368ab06bbb536b220a367552186bbab" kindref="member">NSIMD</ref>]<sp/><ref refid="structparticle__simd__fo_1a1d606c82013db94510cbbd2136923ced" kindref="member">__memalign__</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="239" refid="structparticle__simd__fo_1a870042eec27cee0b777f47c340790f33" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/>B_phi_dphi[<ref refid="ascot5_8h_1a6368ab06bbb536b220a367552186bbab" kindref="member">NSIMD</ref>]<sp/><ref refid="structparticle__simd__fo_1a870042eec27cee0b777f47c340790f33" kindref="member">__memalign__</ref>;<sp/></highlight></codeline>
<codeline lineno="240" refid="structparticle__simd__fo_1a13d7fc3a5ec208dc6f5d40c647dff772" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/>B_z_dphi[<ref refid="ascot5_8h_1a6368ab06bbb536b220a367552186bbab" kindref="member">NSIMD</ref>]<sp/><ref refid="structparticle__simd__fo_1a13d7fc3a5ec208dc6f5d40c647dff772" kindref="member">__memalign__</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="241" refid="structparticle__simd__fo_1a2a4e32f28c5411d120f5d1e273d8de18" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/>B_r_dz[<ref refid="ascot5_8h_1a6368ab06bbb536b220a367552186bbab" kindref="member">NSIMD</ref>]<sp/><ref refid="structparticle__simd__fo_1a2a4e32f28c5411d120f5d1e273d8de18" kindref="member">__memalign__</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="242" refid="structparticle__simd__fo_1abb68bbab09a1c6099411c0d561739943" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/>B_phi_dz[<ref refid="ascot5_8h_1a6368ab06bbb536b220a367552186bbab" kindref="member">NSIMD</ref>]<sp/><ref refid="structparticle__simd__fo_1abb68bbab09a1c6099411c0d561739943" kindref="member">__memalign__</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="243" refid="structparticle__simd__fo_1aec7c14740fc89f05eacc3163232e8ca1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/>B_z_dz[<ref refid="ascot5_8h_1a6368ab06bbb536b220a367552186bbab" kindref="member">NSIMD</ref>]<sp/><ref refid="structparticle__simd__fo_1aec7c14740fc89f05eacc3163232e8ca1" kindref="member">__memalign__</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Quantities<sp/>used<sp/>in<sp/>diagnostics<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246" refid="structparticle__simd__fo_1a8f17154559bb12c99a6c04cbcdfb9669" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bounces[<ref refid="ascot5_8h_1a6368ab06bbb536b220a367552186bbab" kindref="member">NSIMD</ref>]<sp/><ref refid="structparticle__simd__fo_1a8f17154559bb12c99a6c04cbcdfb9669" kindref="member">__memalign__</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="247" refid="structparticle__simd__fo_1a3b54a221ce854c160284ff4a36b3f5ca" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/>weight[<ref refid="ascot5_8h_1a6368ab06bbb536b220a367552186bbab" kindref="member">NSIMD</ref>]<sp/><ref refid="structparticle__simd__fo_1a3b54a221ce854c160284ff4a36b3f5ca" kindref="member">__memalign__</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="248" refid="structparticle__simd__fo_1a081d380a9c67ecbe368c9aaabc8d2e68" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/>cputime[<ref refid="ascot5_8h_1a6368ab06bbb536b220a367552186bbab" kindref="member">NSIMD</ref>]<sp/><ref refid="structparticle__simd__fo_1a081d380a9c67ecbe368c9aaabc8d2e68" kindref="member">__memalign__</ref>;<sp/></highlight></codeline>
<codeline lineno="249" refid="structparticle__simd__fo_1a5f9678081715fbaa794a9699d937248d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/>rho[<ref refid="ascot5_8h_1a6368ab06bbb536b220a367552186bbab" kindref="member">NSIMD</ref>]<sp/><ref refid="structparticle__simd__fo_1a5f9678081715fbaa794a9699d937248d" kindref="member">__memalign__</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="250" refid="structparticle__simd__fo_1a785feaa9c22ed25f094fb8145be56b4a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/>theta[<ref refid="ascot5_8h_1a6368ab06bbb536b220a367552186bbab" kindref="member">NSIMD</ref>]<sp/><ref refid="structparticle__simd__fo_1a785feaa9c22ed25f094fb8145be56b4a" kindref="member">__memalign__</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="252" refid="structparticle__simd__fo_1a2a22c158cc7e616c8be70e882e2a259f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a865b01f4cbb6f2bb3270e094934d3263" kindref="member">integer</ref><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">[<ref refid="ascot5_8h_1a6368ab06bbb536b220a367552186bbab" kindref="member">NSIMD</ref>]<sp/><ref refid="structparticle__simd__fo_1a2a22c158cc7e616c8be70e882e2a259f" kindref="member">__memalign__</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="253" refid="structparticle__simd__fo_1a270debd9c2e7ed1c99154452ebfcc93e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a865b01f4cbb6f2bb3270e094934d3263" kindref="member">integer</ref><sp/>endcond[<ref refid="ascot5_8h_1a6368ab06bbb536b220a367552186bbab" kindref="member">NSIMD</ref>]<sp/><ref refid="structparticle__simd__fo_1a270debd9c2e7ed1c99154452ebfcc93e" kindref="member">__memalign__</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="254" refid="structparticle__simd__fo_1aee89a7a053132b41556e0ef92fd1745b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a865b01f4cbb6f2bb3270e094934d3263" kindref="member">integer</ref><sp/>walltile[<ref refid="ascot5_8h_1a6368ab06bbb536b220a367552186bbab" kindref="member">NSIMD</ref>]<sp/><ref refid="structparticle__simd__fo_1aee89a7a053132b41556e0ef92fd1745b" kindref="member">__memalign__</ref>;<sp/></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Meta<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258" refid="structparticle__simd__fo_1a741b3a5932a201cd3e4ea308ebb14dc1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/>mileage[<ref refid="ascot5_8h_1a6368ab06bbb536b220a367552186bbab" kindref="member">NSIMD</ref>]<sp/><ref refid="structparticle__simd__fo_1a741b3a5932a201cd3e4ea308ebb14dc1" kindref="member">__memalign__</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="260" refid="structparticle__simd__fo_1ab5006afce6c92033853a437095f58411" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a865b01f4cbb6f2bb3270e094934d3263" kindref="member">integer</ref><sp/>running[<ref refid="ascot5_8h_1a6368ab06bbb536b220a367552186bbab" kindref="member">NSIMD</ref>]<sp/><ref refid="structparticle__simd__fo_1ab5006afce6c92033853a437095f58411" kindref="member">__memalign__</ref>;<sp/></highlight></codeline>
<codeline lineno="262" refid="structparticle__simd__fo_1a734d20cac7946d596aa5522286795d75" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="error_8h_1a3bca029fa2975420f00b89f3cb38872e" kindref="member">a5err</ref><sp/>err[<ref refid="ascot5_8h_1a6368ab06bbb536b220a367552186bbab" kindref="member">NSIMD</ref>]<sp/><ref refid="structparticle__simd__fo_1a734d20cac7946d596aa5522286795d75" kindref="member">__memalign__</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="263" refid="structparticle__simd__fo_1a3df7d39fb7c099b40043f2fe9ed9787d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a865b01f4cbb6f2bb3270e094934d3263" kindref="member">integer</ref><sp/>index[<ref refid="ascot5_8h_1a6368ab06bbb536b220a367552186bbab" kindref="member">NSIMD</ref>]<sp/><ref refid="structparticle__simd__fo_1a3df7d39fb7c099b40043f2fe9ed9787d" kindref="member">__memalign__</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="264"><highlight class="normal">}<sp/><ref refid="structparticle__simd__fo" kindref="compound">particle_simd_fo</ref>;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="282" refid="structparticle__simd__gc" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Physical<sp/>coordinates<sp/>and<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284" refid="structparticle__simd__gc_1a43fdf1ea9ef03a887873045bff80103b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/>r[<ref refid="ascot5_8h_1a6368ab06bbb536b220a367552186bbab" kindref="member">NSIMD</ref>]<sp/><ref refid="structparticle__simd__gc_1a43fdf1ea9ef03a887873045bff80103b" kindref="member">__memalign__</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="285" refid="structparticle__simd__gc_1ae0fe9143bc93f6e0a78e0fea72cd9e65" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/>phi[<ref refid="ascot5_8h_1a6368ab06bbb536b220a367552186bbab" kindref="member">NSIMD</ref>]<sp/><ref refid="structparticle__simd__gc_1ae0fe9143bc93f6e0a78e0fea72cd9e65" kindref="member">__memalign__</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="286" refid="structparticle__simd__gc_1a36b2a76f515517e965ef0871ff7a7be4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/>z[<ref refid="ascot5_8h_1a6368ab06bbb536b220a367552186bbab" kindref="member">NSIMD</ref>]<sp/><ref refid="structparticle__simd__gc_1a36b2a76f515517e965ef0871ff7a7be4" kindref="member">__memalign__</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="287" refid="structparticle__simd__gc_1aab5a86374939f629fb8fa5c6a03db5a8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/>ppar[<ref refid="ascot5_8h_1a6368ab06bbb536b220a367552186bbab" kindref="member">NSIMD</ref>]<sp/><ref refid="structparticle__simd__gc_1aab5a86374939f629fb8fa5c6a03db5a8" kindref="member">__memalign__</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="288" refid="structparticle__simd__gc_1a3faa3e4f1670b0a6b02e6ddc59461069" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/>mu[<ref refid="ascot5_8h_1a6368ab06bbb536b220a367552186bbab" kindref="member">NSIMD</ref>]<sp/><ref refid="structparticle__simd__gc_1a3faa3e4f1670b0a6b02e6ddc59461069" kindref="member">__memalign__</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="289" refid="structparticle__simd__gc_1a6f0d3e7c193be2a46edfcfda06cca9f9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/>zeta[<ref refid="ascot5_8h_1a6368ab06bbb536b220a367552186bbab" kindref="member">NSIMD</ref>]<sp/><ref refid="structparticle__simd__gc_1a6f0d3e7c193be2a46edfcfda06cca9f9" kindref="member">__memalign__</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="290" refid="structparticle__simd__gc_1a16ace6d9beb116be929f12a11f482d75" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/>mass[<ref refid="ascot5_8h_1a6368ab06bbb536b220a367552186bbab" kindref="member">NSIMD</ref>]<sp/><ref refid="structparticle__simd__gc_1a16ace6d9beb116be929f12a11f482d75" kindref="member">__memalign__</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="291" refid="structparticle__simd__gc_1a128e7290126d96722eec943987797481" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/>charge[<ref refid="ascot5_8h_1a6368ab06bbb536b220a367552186bbab" kindref="member">NSIMD</ref>]<sp/><ref refid="structparticle__simd__gc_1a128e7290126d96722eec943987797481" kindref="member">__memalign__</ref>;<sp/></highlight></codeline>
<codeline lineno="292" refid="structparticle__simd__gc_1a372898f38978b78f903fd4e119def386" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/>time[<ref refid="ascot5_8h_1a6368ab06bbb536b220a367552186bbab" kindref="member">NSIMD</ref>]<sp/><ref refid="structparticle__simd__gc_1a372898f38978b78f903fd4e119def386" kindref="member">__memalign__</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Magnetic<sp/>field<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295" refid="structparticle__simd__gc_1a63bb11123f2ae3475bc01b88566ccbe6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/>B_r[<ref refid="ascot5_8h_1a6368ab06bbb536b220a367552186bbab" kindref="member">NSIMD</ref>]<sp/><ref refid="structparticle__simd__gc_1a63bb11123f2ae3475bc01b88566ccbe6" kindref="member">__memalign__</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="297" refid="structparticle__simd__gc_1a56f85b73ce8ca530ff188845f2ecd71d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/>B_phi[<ref refid="ascot5_8h_1a6368ab06bbb536b220a367552186bbab" kindref="member">NSIMD</ref>]<sp/><ref refid="structparticle__simd__gc_1a56f85b73ce8ca530ff188845f2ecd71d" kindref="member">__memalign__</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="299" refid="structparticle__simd__gc_1a657ecf80bef67e1f014ae1fda25ee1db" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/>B_z[<ref refid="ascot5_8h_1a6368ab06bbb536b220a367552186bbab" kindref="member">NSIMD</ref>]<sp/><ref refid="structparticle__simd__gc_1a657ecf80bef67e1f014ae1fda25ee1db" kindref="member">__memalign__</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="302" refid="structparticle__simd__gc_1a1387e00871c3c63192fb7c649cda9147" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/>B_r_dr[<ref refid="ascot5_8h_1a6368ab06bbb536b220a367552186bbab" kindref="member">NSIMD</ref>]<sp/><ref refid="structparticle__simd__gc_1a1387e00871c3c63192fb7c649cda9147" kindref="member">__memalign__</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="303" refid="structparticle__simd__gc_1a80a7d2c7286460e3cb16ac2ad8692418" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/>B_phi_dr[<ref refid="ascot5_8h_1a6368ab06bbb536b220a367552186bbab" kindref="member">NSIMD</ref>]<sp/><ref refid="structparticle__simd__gc_1a80a7d2c7286460e3cb16ac2ad8692418" kindref="member">__memalign__</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="304" refid="structparticle__simd__gc_1a9beb554848bdc0225d14e62b87ba5160" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/>B_z_dr[<ref refid="ascot5_8h_1a6368ab06bbb536b220a367552186bbab" kindref="member">NSIMD</ref>]<sp/><ref refid="structparticle__simd__gc_1a9beb554848bdc0225d14e62b87ba5160" kindref="member">__memalign__</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="305" refid="structparticle__simd__gc_1a629b80b05361be87da09a85782a0fbf0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/>B_r_dphi[<ref refid="ascot5_8h_1a6368ab06bbb536b220a367552186bbab" kindref="member">NSIMD</ref>]<sp/><ref refid="structparticle__simd__gc_1a629b80b05361be87da09a85782a0fbf0" kindref="member">__memalign__</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="306" refid="structparticle__simd__gc_1ae4d22e4f7fc09d16d3142a95743fddbf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/>B_phi_dphi[<ref refid="ascot5_8h_1a6368ab06bbb536b220a367552186bbab" kindref="member">NSIMD</ref>]<sp/><ref refid="structparticle__simd__gc_1ae4d22e4f7fc09d16d3142a95743fddbf" kindref="member">__memalign__</ref>;<sp/></highlight></codeline>
<codeline lineno="307" refid="structparticle__simd__gc_1a59e98277a3bebf678d9f623c7037cf86" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/>B_z_dphi[<ref refid="ascot5_8h_1a6368ab06bbb536b220a367552186bbab" kindref="member">NSIMD</ref>]<sp/><ref refid="structparticle__simd__gc_1a59e98277a3bebf678d9f623c7037cf86" kindref="member">__memalign__</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="308" refid="structparticle__simd__gc_1a6335a6d670f76dac69399db8e47d188d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/>B_r_dz[<ref refid="ascot5_8h_1a6368ab06bbb536b220a367552186bbab" kindref="member">NSIMD</ref>]<sp/><ref refid="structparticle__simd__gc_1a6335a6d670f76dac69399db8e47d188d" kindref="member">__memalign__</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="309" refid="structparticle__simd__gc_1a6b74bf446a2f6b6f0a3d80c61c44f2c8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/>B_phi_dz[<ref refid="ascot5_8h_1a6368ab06bbb536b220a367552186bbab" kindref="member">NSIMD</ref>]<sp/><ref refid="structparticle__simd__gc_1a6b74bf446a2f6b6f0a3d80c61c44f2c8" kindref="member">__memalign__</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="310" refid="structparticle__simd__gc_1ac48958988b34919f69f7d1489bafe921" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/>B_z_dz[<ref refid="ascot5_8h_1a6368ab06bbb536b220a367552186bbab" kindref="member">NSIMD</ref>]<sp/><ref refid="structparticle__simd__gc_1ac48958988b34919f69f7d1489bafe921" kindref="member">__memalign__</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Quantities<sp/>used<sp/>in<sp/>diagnostics<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313" refid="structparticle__simd__gc_1af66e6361a304d0d0bca0026d96df2d98" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bounces[<ref refid="ascot5_8h_1a6368ab06bbb536b220a367552186bbab" kindref="member">NSIMD</ref>]<sp/><ref refid="structparticle__simd__gc_1af66e6361a304d0d0bca0026d96df2d98" kindref="member">__memalign__</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="314" refid="structparticle__simd__gc_1ad2a8e7bd847e5f986761b630ed78207c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/>weight[<ref refid="ascot5_8h_1a6368ab06bbb536b220a367552186bbab" kindref="member">NSIMD</ref>]<sp/><ref refid="structparticle__simd__gc_1ad2a8e7bd847e5f986761b630ed78207c" kindref="member">__memalign__</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="315" refid="structparticle__simd__gc_1a6a2bb90e2528ccf64c88eb1d1dc1b311" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/>cputime[<ref refid="ascot5_8h_1a6368ab06bbb536b220a367552186bbab" kindref="member">NSIMD</ref>]<sp/><ref refid="structparticle__simd__gc_1a6a2bb90e2528ccf64c88eb1d1dc1b311" kindref="member">__memalign__</ref>;<sp/></highlight></codeline>
<codeline lineno="316" refid="structparticle__simd__gc_1a141b672ef407fde2301c354f149c8bd1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/>rho[<ref refid="ascot5_8h_1a6368ab06bbb536b220a367552186bbab" kindref="member">NSIMD</ref>]<sp/><ref refid="structparticle__simd__gc_1a141b672ef407fde2301c354f149c8bd1" kindref="member">__memalign__</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="317" refid="structparticle__simd__gc_1a9de5f11650c37b6e136f33917c4930a8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/>theta[<ref refid="ascot5_8h_1a6368ab06bbb536b220a367552186bbab" kindref="member">NSIMD</ref>]<sp/><ref refid="structparticle__simd__gc_1a9de5f11650c37b6e136f33917c4930a8" kindref="member">__memalign__</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="319" refid="structparticle__simd__gc_1ab405e4ec88832ec98385f8576ef59abf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a865b01f4cbb6f2bb3270e094934d3263" kindref="member">integer</ref><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">[<ref refid="ascot5_8h_1a6368ab06bbb536b220a367552186bbab" kindref="member">NSIMD</ref>]<sp/><ref refid="structparticle__simd__gc_1ab405e4ec88832ec98385f8576ef59abf" kindref="member">__memalign__</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="320" refid="structparticle__simd__gc_1a65be7b6131e947326e55ef99cb50eaba" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a865b01f4cbb6f2bb3270e094934d3263" kindref="member">integer</ref><sp/>endcond[<ref refid="ascot5_8h_1a6368ab06bbb536b220a367552186bbab" kindref="member">NSIMD</ref>]<sp/><ref refid="structparticle__simd__gc_1a65be7b6131e947326e55ef99cb50eaba" kindref="member">__memalign__</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="321" refid="structparticle__simd__gc_1a2ff7a13ce67d729eaa3f1614e131dbdf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a865b01f4cbb6f2bb3270e094934d3263" kindref="member">integer</ref><sp/>walltile[<ref refid="ascot5_8h_1a6368ab06bbb536b220a367552186bbab" kindref="member">NSIMD</ref>]<sp/><ref refid="structparticle__simd__gc_1a2ff7a13ce67d729eaa3f1614e131dbdf" kindref="member">__memalign__</ref>;<sp/></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Meta<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325" refid="structparticle__simd__gc_1a603da79ef11eec70fd50bdc598d8f1de" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/>mileage[<ref refid="ascot5_8h_1a6368ab06bbb536b220a367552186bbab" kindref="member">NSIMD</ref>]<sp/><ref refid="structparticle__simd__gc_1a603da79ef11eec70fd50bdc598d8f1de" kindref="member">__memalign__</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="327" refid="structparticle__simd__gc_1a8977b90071009b39650ad5bb18c1bf6a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a865b01f4cbb6f2bb3270e094934d3263" kindref="member">integer</ref><sp/>running[<ref refid="ascot5_8h_1a6368ab06bbb536b220a367552186bbab" kindref="member">NSIMD</ref>]<sp/><ref refid="structparticle__simd__gc_1a8977b90071009b39650ad5bb18c1bf6a" kindref="member">__memalign__</ref>;<sp/></highlight></codeline>
<codeline lineno="329" refid="structparticle__simd__gc_1a98a2813ac1c9e984d04814674526dd40" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="error_8h_1a3bca029fa2975420f00b89f3cb38872e" kindref="member">a5err</ref><sp/>err[<ref refid="ascot5_8h_1a6368ab06bbb536b220a367552186bbab" kindref="member">NSIMD</ref>]<sp/><ref refid="structparticle__simd__gc_1a98a2813ac1c9e984d04814674526dd40" kindref="member">__memalign__</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="330" refid="structparticle__simd__gc_1a7fcc1014d50171b38287b815f0620af4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a865b01f4cbb6f2bb3270e094934d3263" kindref="member">integer</ref><sp/>index[<ref refid="ascot5_8h_1a6368ab06bbb536b220a367552186bbab" kindref="member">NSIMD</ref>]<sp/><ref refid="structparticle__simd__gc_1a7fcc1014d50171b38287b815f0620af4" kindref="member">__memalign__</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="331"><highlight class="normal">}<sp/><ref refid="structparticle__simd__gc" kindref="compound">particle_simd_gc</ref>;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="349" refid="structparticle__simd__ml" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Physical<sp/>coordinates<sp/>and<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351" refid="structparticle__simd__ml_1a1cb9c8d756cf869f38a6f27359514ed9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/>r[<ref refid="ascot5_8h_1a6368ab06bbb536b220a367552186bbab" kindref="member">NSIMD</ref>]<sp/><ref refid="structparticle__simd__ml_1a1cb9c8d756cf869f38a6f27359514ed9" kindref="member">__memalign__</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="352" refid="structparticle__simd__ml_1a5c7a02b33d4e8a20f4f4e43fff243650" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/>phi[<ref refid="ascot5_8h_1a6368ab06bbb536b220a367552186bbab" kindref="member">NSIMD</ref>]<sp/><ref refid="structparticle__simd__ml_1a5c7a02b33d4e8a20f4f4e43fff243650" kindref="member">__memalign__</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="353" refid="structparticle__simd__ml_1a6ed80a4479433217763079e443bc9106" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/>z[<ref refid="ascot5_8h_1a6368ab06bbb536b220a367552186bbab" kindref="member">NSIMD</ref>]<sp/><ref refid="structparticle__simd__ml_1a6ed80a4479433217763079e443bc9106" kindref="member">__memalign__</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="354" refid="structparticle__simd__ml_1a3c9b5008c130d51d95bca457ae6ebd0e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/>pitch[<ref refid="ascot5_8h_1a6368ab06bbb536b220a367552186bbab" kindref="member">NSIMD</ref>]<sp/><ref refid="structparticle__simd__ml_1a3c9b5008c130d51d95bca457ae6ebd0e" kindref="member">__memalign__</ref>;<sp/></highlight></codeline>
<codeline lineno="356" refid="structparticle__simd__ml_1aca1a76859d9dac089b1743b3a6592ba6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/>time[<ref refid="ascot5_8h_1a6368ab06bbb536b220a367552186bbab" kindref="member">NSIMD</ref>]<sp/><ref refid="structparticle__simd__ml_1aca1a76859d9dac089b1743b3a6592ba6" kindref="member">__memalign__</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Magnetic<sp/>field<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359" refid="structparticle__simd__ml_1ae54aaf3e8c216cbdc452e21ff7916ef5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/>B_r[<ref refid="ascot5_8h_1a6368ab06bbb536b220a367552186bbab" kindref="member">NSIMD</ref>]<sp/><ref refid="structparticle__simd__ml_1ae54aaf3e8c216cbdc452e21ff7916ef5" kindref="member">__memalign__</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="361" refid="structparticle__simd__ml_1ad19c91a7b3c3957baa54b3d02d9cc6f2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/>B_phi[<ref refid="ascot5_8h_1a6368ab06bbb536b220a367552186bbab" kindref="member">NSIMD</ref>]<sp/><ref refid="structparticle__simd__ml_1ad19c91a7b3c3957baa54b3d02d9cc6f2" kindref="member">__memalign__</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="363" refid="structparticle__simd__ml_1afd65cc0f6702a96b87027b024001c1e7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/>B_z[<ref refid="ascot5_8h_1a6368ab06bbb536b220a367552186bbab" kindref="member">NSIMD</ref>]<sp/><ref refid="structparticle__simd__ml_1afd65cc0f6702a96b87027b024001c1e7" kindref="member">__memalign__</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="366" refid="structparticle__simd__ml_1ae3f4750662444324876a711471364104" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/>B_r_dr[<ref refid="ascot5_8h_1a6368ab06bbb536b220a367552186bbab" kindref="member">NSIMD</ref>]<sp/><ref refid="structparticle__simd__ml_1ae3f4750662444324876a711471364104" kindref="member">__memalign__</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="367" refid="structparticle__simd__ml_1ae38c25fd8e7129abf6005232ad279620" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/>B_phi_dr[<ref refid="ascot5_8h_1a6368ab06bbb536b220a367552186bbab" kindref="member">NSIMD</ref>]<sp/><ref refid="structparticle__simd__ml_1ae38c25fd8e7129abf6005232ad279620" kindref="member">__memalign__</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="368" refid="structparticle__simd__ml_1a4d92129d80d8e02a5345a9b0f233969b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/>B_z_dr[<ref refid="ascot5_8h_1a6368ab06bbb536b220a367552186bbab" kindref="member">NSIMD</ref>]<sp/><ref refid="structparticle__simd__ml_1a4d92129d80d8e02a5345a9b0f233969b" kindref="member">__memalign__</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="369" refid="structparticle__simd__ml_1a665de46082c6f24c94d9e5574dbc25b4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/>B_r_dphi[<ref refid="ascot5_8h_1a6368ab06bbb536b220a367552186bbab" kindref="member">NSIMD</ref>]<sp/><ref refid="structparticle__simd__ml_1a665de46082c6f24c94d9e5574dbc25b4" kindref="member">__memalign__</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="370" refid="structparticle__simd__ml_1a527808ff35c5c4bd939a3bdb3270c3ce" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/>B_phi_dphi[<ref refid="ascot5_8h_1a6368ab06bbb536b220a367552186bbab" kindref="member">NSIMD</ref>]<sp/><ref refid="structparticle__simd__ml_1a527808ff35c5c4bd939a3bdb3270c3ce" kindref="member">__memalign__</ref>;<sp/></highlight></codeline>
<codeline lineno="371" refid="structparticle__simd__ml_1aae6fa5f2166c3c6278d915764032dcf8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/>B_z_dphi[<ref refid="ascot5_8h_1a6368ab06bbb536b220a367552186bbab" kindref="member">NSIMD</ref>]<sp/><ref refid="structparticle__simd__ml_1aae6fa5f2166c3c6278d915764032dcf8" kindref="member">__memalign__</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="372" refid="structparticle__simd__ml_1a2ef9d1c693a4189c68f3e0cdfb909f66" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/>B_r_dz[<ref refid="ascot5_8h_1a6368ab06bbb536b220a367552186bbab" kindref="member">NSIMD</ref>]<sp/><ref refid="structparticle__simd__ml_1a2ef9d1c693a4189c68f3e0cdfb909f66" kindref="member">__memalign__</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="373" refid="structparticle__simd__ml_1a5f07c9855a3a72e169c9158f0bb8180f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/>B_phi_dz[<ref refid="ascot5_8h_1a6368ab06bbb536b220a367552186bbab" kindref="member">NSIMD</ref>]<sp/><ref refid="structparticle__simd__ml_1a5f07c9855a3a72e169c9158f0bb8180f" kindref="member">__memalign__</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="374" refid="structparticle__simd__ml_1ad3e73035e65fe029bc4870404cfca042" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/>B_z_dz[<ref refid="ascot5_8h_1a6368ab06bbb536b220a367552186bbab" kindref="member">NSIMD</ref>]<sp/><ref refid="structparticle__simd__ml_1ad3e73035e65fe029bc4870404cfca042" kindref="member">__memalign__</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Quantities<sp/>used<sp/>in<sp/>diagnostics<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="377" refid="structparticle__simd__ml_1a6a627be0630bad5ac6ca5838dd9de5f5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/>weight[<ref refid="ascot5_8h_1a6368ab06bbb536b220a367552186bbab" kindref="member">NSIMD</ref>]<sp/><ref refid="structparticle__simd__ml_1a6a627be0630bad5ac6ca5838dd9de5f5" kindref="member">__memalign__</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="378" refid="structparticle__simd__ml_1a304020f07ed3f294efb9478eda0f331d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/>cputime[<ref refid="ascot5_8h_1a6368ab06bbb536b220a367552186bbab" kindref="member">NSIMD</ref>]<sp/><ref refid="structparticle__simd__ml_1a304020f07ed3f294efb9478eda0f331d" kindref="member">__memalign__</ref>;<sp/></highlight></codeline>
<codeline lineno="379" refid="structparticle__simd__ml_1a4a9c3d13b6f08d39abd88292897e74d9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/>rho[<ref refid="ascot5_8h_1a6368ab06bbb536b220a367552186bbab" kindref="member">NSIMD</ref>]<sp/><ref refid="structparticle__simd__ml_1a4a9c3d13b6f08d39abd88292897e74d9" kindref="member">__memalign__</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="380" refid="structparticle__simd__ml_1a802ac48876680973247d2d35af76f91b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/>theta[<ref refid="ascot5_8h_1a6368ab06bbb536b220a367552186bbab" kindref="member">NSIMD</ref>]<sp/><ref refid="structparticle__simd__ml_1a802ac48876680973247d2d35af76f91b" kindref="member">__memalign__</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="382" refid="structparticle__simd__ml_1ad23208907f90fc84662f9deeb9e52668" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a865b01f4cbb6f2bb3270e094934d3263" kindref="member">integer</ref><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">[<ref refid="ascot5_8h_1a6368ab06bbb536b220a367552186bbab" kindref="member">NSIMD</ref>]<sp/><ref refid="structparticle__simd__ml_1ad23208907f90fc84662f9deeb9e52668" kindref="member">__memalign__</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="383" refid="structparticle__simd__ml_1aec7b1c167ae9120711ab2b96d3e3d96c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a865b01f4cbb6f2bb3270e094934d3263" kindref="member">integer</ref><sp/>endcond[<ref refid="ascot5_8h_1a6368ab06bbb536b220a367552186bbab" kindref="member">NSIMD</ref>]<sp/><ref refid="structparticle__simd__ml_1aec7b1c167ae9120711ab2b96d3e3d96c" kindref="member">__memalign__</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="384" refid="structparticle__simd__ml_1a92a8c75584fb195e24e4053576bebbc0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a865b01f4cbb6f2bb3270e094934d3263" kindref="member">integer</ref><sp/>walltile[<ref refid="ascot5_8h_1a6368ab06bbb536b220a367552186bbab" kindref="member">NSIMD</ref>]<sp/><ref refid="structparticle__simd__ml_1a92a8c75584fb195e24e4053576bebbc0" kindref="member">__memalign__</ref>;<sp/></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Meta<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="388" refid="structparticle__simd__ml_1a57fb0ab1063c14a02c3362c059251dfb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a11d147c64891830c9e79b3315b1b2e21" kindref="member">real</ref><sp/>mileage[<ref refid="ascot5_8h_1a6368ab06bbb536b220a367552186bbab" kindref="member">NSIMD</ref>]<sp/><ref refid="structparticle__simd__ml_1a57fb0ab1063c14a02c3362c059251dfb" kindref="member">__memalign__</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="390" refid="structparticle__simd__ml_1ab38a3e0e907da4cab52b92d0cb76b73e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a865b01f4cbb6f2bb3270e094934d3263" kindref="member">integer</ref><sp/>running[<ref refid="ascot5_8h_1a6368ab06bbb536b220a367552186bbab" kindref="member">NSIMD</ref>]<sp/><ref refid="structparticle__simd__ml_1ab38a3e0e907da4cab52b92d0cb76b73e" kindref="member">__memalign__</ref>;<sp/></highlight></codeline>
<codeline lineno="392" refid="structparticle__simd__ml_1ae970349767f8d09d187d90d72d7d3554" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="error_8h_1a3bca029fa2975420f00b89f3cb38872e" kindref="member">a5err</ref><sp/>err[<ref refid="ascot5_8h_1a6368ab06bbb536b220a367552186bbab" kindref="member">NSIMD</ref>]<sp/><ref refid="structparticle__simd__ml_1ae970349767f8d09d187d90d72d7d3554" kindref="member">__memalign__</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="393" refid="structparticle__simd__ml_1ae36108669de0748708afa9fbba8f10a0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ascot5_8h_1a865b01f4cbb6f2bb3270e094934d3263" kindref="member">integer</ref><sp/>index[<ref refid="ascot5_8h_1a6368ab06bbb536b220a367552186bbab" kindref="member">NSIMD</ref>]<sp/><ref refid="structparticle__simd__ml_1ae36108669de0748708afa9fbba8f10a0" kindref="member">__memalign__</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="394"><highlight class="normal">}<sp/><ref refid="structparticle__simd__ml" kindref="compound">particle_simd_ml</ref>;</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>declare<sp/>target</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="particle_8h_1a5b1269a856de55b03a59d06df3ee3113" kindref="member">particle_to_fo_dummy</ref>(<ref refid="structparticle__simd__fo" kindref="compound">particle_simd_fo</ref>*<sp/>p_fo,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j);</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="particle_8h_1a9811038a60f0e1525fca6dc9f9a6a150" kindref="member">particle_to_gc_dummy</ref>(<ref refid="structparticle__simd__gc" kindref="compound">particle_simd_gc</ref>*<sp/>p_gc,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="particle_8h_1a0bff4063646ea64c569a51f947c81475" kindref="member">particle_to_ml_dummy</ref>(<ref refid="structparticle__simd__ml" kindref="compound">particle_simd_ml</ref>*<sp/>p_ml,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j);</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="particle_8h_1af053259c1f06721bbbbe61baaa0facb0" kindref="member">particle_cycle_fo</ref>(<ref refid="structparticle__queue" kindref="compound">particle_queue</ref>*<sp/>q,<sp/><ref refid="structparticle__simd__fo" kindref="compound">particle_simd_fo</ref>*<sp/>p,</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structB__field__data" kindref="compound">B_field_data</ref>*<sp/>Bdata,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>cycle);</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="particle_8h_1ae9a00100d11547e28826c5c2e0ff7372" kindref="member">particle_cycle_gc</ref>(<ref refid="structparticle__queue" kindref="compound">particle_queue</ref>*<sp/>q,<sp/><ref refid="structparticle__simd__gc" kindref="compound">particle_simd_gc</ref>*<sp/>p,</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structB__field__data" kindref="compound">B_field_data</ref>*<sp/>Bdata,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>cycle);</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="particle_8h_1ac5fcdf3eb124f6caa4e4b748e3449ee2" kindref="member">particle_cycle_ml</ref>(<ref refid="structparticle__queue" kindref="compound">particle_queue</ref>*<sp/>q,<sp/><ref refid="structparticle__simd__ml" kindref="compound">particle_simd_ml</ref>*<sp/>p,</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structB__field__data" kindref="compound">B_field_data</ref>*<sp/>Bdata,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>cycle);</highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="particle_8h_1a8e96bcfc9c95b76f3c91663e34a43b01" kindref="member">particle_input_to_state</ref>(<ref refid="structinput__particle" kindref="compound">input_particle</ref>*<sp/>p,<sp/><ref refid="structparticle__state" kindref="compound">particle_state</ref>*<sp/>ps,</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structB__field__data" kindref="compound">B_field_data</ref>*<sp/>Bdata);</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><ref refid="error_8h_1a3bca029fa2975420f00b89f3cb38872e" kindref="member">a5err</ref><sp/><ref refid="particle_8h_1ab65075ed0209a55686c1009eb2041af0" kindref="member">particle_input_p_to_state</ref>(<ref refid="structparticle" kindref="compound">particle</ref>*<sp/>p,<sp/><ref refid="structparticle__state" kindref="compound">particle_state</ref>*<sp/>ps,</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structB__field__data" kindref="compound">B_field_data</ref>*<sp/>Bdata);</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><ref refid="error_8h_1a3bca029fa2975420f00b89f3cb38872e" kindref="member">a5err</ref><sp/><ref refid="particle_8h_1a12ad353368240274650bbe5f702b0ec4" kindref="member">particle_input_gc_to_state</ref>(<ref refid="structparticle__gc" kindref="compound">particle_gc</ref>*<sp/>p,<sp/><ref refid="structparticle__state" kindref="compound">particle_state</ref>*<sp/>ps,</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structB__field__data" kindref="compound">B_field_data</ref>*<sp/>Bdata);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><ref refid="error_8h_1a3bca029fa2975420f00b89f3cb38872e" kindref="member">a5err</ref><sp/><ref refid="particle_8h_1a8b10f6fd186df181f734315548328fec" kindref="member">particle_input_ml_to_state</ref>(<ref refid="structparticle__ml" kindref="compound">particle_ml</ref>*<sp/>p,<sp/><ref refid="structparticle__state" kindref="compound">particle_state</ref>*<sp/>ps,</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structB__field__data" kindref="compound">B_field_data</ref>*<sp/>Bdata);</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>declare<sp/>simd<sp/>uniform(Bdata)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><ref refid="error_8h_1a3bca029fa2975420f00b89f3cb38872e" kindref="member">a5err</ref><sp/><ref refid="particle_8h_1a275c199f15c1a8f46a48decfb6908b71" kindref="member">particle_state_to_fo</ref>(<ref refid="structparticle__state" kindref="compound">particle_state</ref>*<sp/>p,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/><ref refid="structparticle__simd__fo" kindref="compound">particle_simd_fo</ref>*<sp/>p_fo,</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j,<sp/><ref refid="structB__field__data" kindref="compound">B_field_data</ref>*<sp/>Bdata);</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>declare<sp/>simd<sp/>uniform(Bdata)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="particle_8h_1a308eb43a7cb3aead97315dd1020aae9d" kindref="member">particle_fo_to_state</ref>(<ref refid="structparticle__simd__fo" kindref="compound">particle_simd_fo</ref>*<sp/>p_fo,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j,<sp/><ref refid="structparticle__state" kindref="compound">particle_state</ref>*<sp/>p,</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structB__field__data" kindref="compound">B_field_data</ref>*<sp/>Bdata);</highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>declare<sp/>simd<sp/>uniform(Bdata)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><ref refid="error_8h_1a3bca029fa2975420f00b89f3cb38872e" kindref="member">a5err</ref><sp/><ref refid="particle_8h_1a217333f14fa85b8882738f804346c493" kindref="member">particle_state_to_gc</ref>(<ref refid="structparticle__state" kindref="compound">particle_state</ref>*<sp/>p,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/><ref refid="structparticle__simd__gc" kindref="compound">particle_simd_gc</ref>*<sp/>p_gc,</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j,<sp/><ref refid="structB__field__data" kindref="compound">B_field_data</ref>*<sp/>Bdata);</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>declare<sp/>simd<sp/>uniform(Bdata)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="particle_8h_1a10627ba7787e16ac8b87afcf55d82c61" kindref="member">particle_gc_to_state</ref>(<ref refid="structparticle__simd__gc" kindref="compound">particle_simd_gc</ref>*<sp/>p_gc,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j,<sp/><ref refid="structparticle__state" kindref="compound">particle_state</ref>*<sp/>p,</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structB__field__data" kindref="compound">B_field_data</ref>*<sp/>Bdata);</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>declare<sp/>simd<sp/>uniform(Bdata)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><ref refid="error_8h_1a3bca029fa2975420f00b89f3cb38872e" kindref="member">a5err</ref><sp/><ref refid="particle_8h_1aaa3116ddab1b53462a5c7d7c98dcf839" kindref="member">particle_state_to_ml</ref>(<ref refid="structparticle__state" kindref="compound">particle_state</ref>*<sp/>p,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/><ref refid="structparticle__simd__ml" kindref="compound">particle_simd_ml</ref>*<sp/>p_ml,</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j,<sp/><ref refid="structB__field__data" kindref="compound">B_field_data</ref>*<sp/>Bdata);</highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>declare<sp/>simd<sp/>uniform(Bdata)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="particle_8h_1ae5b0e6f269fe140fbb8f00b96e7aa7a9" kindref="member">particle_ml_to_state</ref>(<ref refid="structparticle__simd__ml" kindref="compound">particle_simd_ml</ref>*<sp/>p_ml,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j,<sp/><ref refid="structparticle__state" kindref="compound">particle_state</ref>*<sp/>p,</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structB__field__data" kindref="compound">B_field_data</ref>*<sp/>Bdata);</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>declare<sp/>simd<sp/>uniform(p_fo,Bdata)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="particle_8h_1a6dec81969f333737b86320b744353281" kindref="member">particle_fo_to_gc</ref>(<ref refid="structparticle__simd__fo" kindref="compound">particle_simd_fo</ref>*<sp/>p_fo,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j,<sp/><ref refid="structparticle__simd__gc" kindref="compound">particle_simd_gc</ref>*<sp/>p_gc,</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structB__field__data" kindref="compound">B_field_data</ref>*<sp/>Bdata);</highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>declare<sp/>simd</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="particle_8h_1afb47cf7aacb7f1d2aaae0ee5dc657229" kindref="member">particle_copy_fo</ref>(<ref refid="structparticle__simd__fo" kindref="compound">particle_simd_fo</ref>*<sp/>p1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/><ref refid="structparticle__simd__fo" kindref="compound">particle_simd_fo</ref>*<sp/>p2,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j);</highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>declare<sp/>simd</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="particle_8h_1a17a485a5f6148e2aac393fc4b125a39d" kindref="member">particle_copy_gc</ref>(<ref refid="structparticle__simd__gc" kindref="compound">particle_simd_gc</ref>*<sp/>p1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/><ref refid="structparticle__simd__gc" kindref="compound">particle_simd_gc</ref>*<sp/>p2,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j);</highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>declare<sp/>simd</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="particle_8h_1a9d81572e6a2d201fce505c23841214f6" kindref="member">particle_copy_ml</ref>(<ref refid="structparticle__simd__ml" kindref="compound">particle_simd_ml</ref>*<sp/>p1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/><ref refid="structparticle__simd__ml" kindref="compound">particle_simd_ml</ref>*<sp/>p2,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j);</highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>end<sp/>declare<sp/>target</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="particle.h"/>
  </compounddef>
</doxygen>
